{
	"id": "abc0e21c352865801dd12879059b9819",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Arcade.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 < 0.9.0;\n\nimport \"./access/AccessControl.sol\";\nimport \"./token/ERC20/ERC20.sol\";\nimport \"./utils/math/SafeMath.sol\";\n\ncontract Arcade is AccessControl {\n    using SafeMath for uint256;\n    \n    event CloseGame(uint256 id);\n    event CreateGame(uint256 id);\n    event DeleteGame(uint256 id);\n    event Fee(uint256 fee);\n    event OpenGame(uint256 id);\n    event Payout(uint256 payout);\n    event PlacePlayer(address player, uint256 id, bool status);\n    event Refund(uint256 id, address player, uint256 amount);\n    event Register(address indexed _player, uint256 id);\n    event RemovePlayer(address player);\n\n    bytes32 public constant ARCADE_MANAGER = keccak256(\"ARCADE_MANAGER\");\n    bytes32 public constant GAME_MASTER = keccak256(\"GAME_MASTER\");\n\n    struct GameInfo {\n        bool    exchange;\n        uint256 player_count;\n        uint256 player_limit;\n        uint256 registration_fee;\n        uint256 status;\n        address arcade_token;\n        uint256 total_fee;\n        mapping(address => uint256) fee;\n        mapping(address => uint256) paid;\n        mapping(address => uint256) seats;\n    }\n\n    struct ArcadeToken {\n        IERC20  native_token;\n        bool    active;\n        uint256 redemption_rate;\n    }\n\n    mapping(address => ArcadeToken) public acceptedArcadeTokens;\n\n    mapping(uint256 => GameInfo) public gameData;\n\n    uint256 public decimals = 18;\n\n    uint256 public fee_percentage;\n\n    uint256 private base = 10**(uint256(decimals));\n\n    address public owner;\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        _grantRole(ARCADE_MANAGER, _msgSender());\n        _grantRole(GAME_MASTER, _msgSender());\n\n        owner = _msgSender();\n\n        fee_percentage = 1e17;\n    }\n\n    /**\n     * @dev Returns {ArcadeToken} struct for `token_address`.\n     */\n    function arcadeToken(address token_address) public view returns (bool, uint256) {\n        return (acceptedArcadeTokens[token_address].active, acceptedArcadeTokens[token_address].redemption_rate);\n    }\n\n    /**\n     * @dev Returns {active} as boolean value for `token_address`.\n     */\n    function isAccepted(address token_address) public view returns (bool) {\n        return acceptedArcadeTokens[token_address].active;\n    }\n    \n\n    /**\n     * @dev Validates game configuration for caller. Transfers {#}.registration_fee\n     * to arcade contract.\n     *\n     * Requirements:\n     *\n     * - Valid game configuration\n     */\n    function register(uint256 game_id) public {\n        require(gameData[game_id].seats[msg.sender] == 1, \"Trophy King Arcade: Unauthorized.\");\n        require(gameData[game_id].status == 1, \"Trophy King Arcade: Game closed.\");\n        require(gameData[game_id].player_limit > gameData[game_id].player_count, \"Trophy King Arcade: Game full.  Try again.\");\n        require(gameData[game_id].paid[msg.sender] == 0, \"Trophy King Arcade: Already registered.\");\n        require(gameData[game_id].player_limit > 0, \"Trophy King Arcade: Game not found.\");\n        require(acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transferFrom(_msgSender(), address(this), gameData[game_id].registration_fee), \"Trophy King Arcade: Must approve registration fee.\");\n\n        _register(game_id, msg.sender, gameData[game_id].registration_fee);\n    }\n\n\n    /**\n     * @dev Transfer balance of `arcade_token` to caller.\n     *\n     * Requirements:\n     *\n     * - the caller must have admin role.\n     */\n    function reconcile(address arcade_token) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        uint256 balance = acceptedArcadeTokens[arcade_token].native_token.balanceOf(address(this));\n\n        if (balance > 0) {\n            require(acceptedArcadeTokens[(arcade_token)].native_token.transfer(_msgSender(), balance), \"Trophy King Arcade: Reconciliation failed.\");\n        }\n    }\n\n    /**\n     * @dev Set fee percentage for arcade contract.\n     *\n     * Requirements:\n     *\n     * - the caller must have arcade manager role.     \n     */\n    function setArcadeFeePercentage(uint256 percentage) public onlyRole(ARCADE_MANAGER) {\n        fee_percentage = percentage;\n    }\n\n    /**\n     * @dev Adds token to {acceptedArcadeTokens} Require `token_address` for proxy balance exchange.  \n     * `redemption_rate` is set and determines the rate that proxy balance is exchanged.  \n     * Set `active` to reflect status of exchange.\n     *\n     * Requirements:\n     *\n     * - the caller must have arcade manager role.\n     */\n    function addArcadeToken(address token_address, uint256 redemption_rate, bool _active) public onlyRole(ARCADE_MANAGER) {\n        acceptedArcadeTokens[token_address].redemption_rate = redemption_rate;\n        acceptedArcadeTokens[token_address].active = _active;\n\n        address payable_token_address = payable(token_address);\n\n        acceptedArcadeTokens[token_address].native_token = IERC20(payable_token_address);\n        acceptedArcadeTokens[token_address].native_token.approve(_msgSender(), 115792089237316195423570985008687907853269984665640564039457584007913129639935);\n    }\n\n    /**\n     * @dev Disable token for proxy balance exchange.\n     *\n     * Requirements:\n     *\n     * - the caller must have arcade manager role.\n     */\n    function removeArcadeToken(address token_address) public onlyRole(ARCADE_MANAGER) {\n        acceptedArcadeTokens[token_address].active = false;\n    }\n\n    /**\n     * @dev Changes {#}.status for `game_id`.\n     *\n     * Requirements:\n     *\n     * - the caller must have game master role.\n     */\n    function closeGame(uint256 game_id) public onlyRole(GAME_MASTER) {\n        gameData[game_id].status = 0;\n\n        emit CloseGame(game_id);\n    }\n\n    /**\n     * @dev Mutates {gameData} structure with game configuration.\n     * Sets {#} for `game_id`, `registration_fee`, `arcade_token`, `player_limit`, `exchange` \n     *\n     * Requirements:\n     *\n     * - the caller must have game master role.\n     */\n    function createGame(uint256 game_id, uint256 registration_fee, address arcade_token, uint256 player_limit, bool exchange) public onlyRole(GAME_MASTER) {\n        gameData[game_id].status = 1;\n        gameData[game_id].total_fee = 0;\n        gameData[game_id].registration_fee = registration_fee;\n        gameData[game_id].arcade_token = arcade_token;\n        gameData[game_id].player_count = 0;\n        gameData[game_id].player_limit = player_limit;\n        gameData[game_id].exchange = exchange;\n\n        emit CreateGame(game_id);\n    }\n\n    /**\n     * @dev Deletes {#} for {gameData} for `game_id`.\n     *\n     * Requirements:\n     *\n     * - the caller must have game master role.\n     */\n    function deleteGame(uint256 game_id) public onlyRole(GAME_MASTER) {\n        delete gameData[game_id];\n\n        emit DeleteGame(game_id);\n    }\n\n    /**\n     * @dev Updates {gameData} sets {#}.seats[`player`] to 0.\n     */\n    function leaveMatch(uint256 game_id) public {\n        gameData[game_id].seats[_msgSender()] = 0;\n\n        emit RemovePlayer(_msgSender());\n    }\n\n    /**\n     * @dev Changes {#}.status for `game_id`.\n     *\n     * Requirements:\n     *\n     * - the caller must have game master role.\n     */\n    function openGame(uint256 game_id) public onlyRole(GAME_MASTER) {\n        gameData[game_id].status = 1;\n\n        emit OpenGame(game_id);\n    }\n\n    /**\n     * @dev Gives `player` access to register for `game_id`.\n     *\n     * Requirements:\n     *\n     * - the caller must have game master role.\n     */\n    function placePlayer(uint256 game_id, address player) public onlyRole(GAME_MASTER) returns (bool) {\n        if (gameData[game_id].seats[player] != 1) {\n            gameData[game_id].seats[player] = 1;\n            \n            emit PlacePlayer(player, game_id, true);\n\n            return true;\n        } else {\n            emit PlacePlayer(player, game_id, false);\n\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns {#}.registration_fee for `player` at `game_id`.\n     *\n     * Requirements:\n     *\n     * - the caller must have game master role.\n     * - `player` must be registered.\n     * - contract balance should exceed {#}.registration_fee\n     */\n    function refund(uint256 game_id, address player) public onlyRole(GAME_MASTER) {\n        if (gameData[game_id].exchange == false) {\n            require(gameData[game_id].paid[player] == 1, \"Trophy King Arcade: Not registered for this game.\");\n\n            GameInfo storage gi = gameData[game_id];\n\n            require(acceptedArcadeTokens[(gi.arcade_token)].native_token.transfer(player, gi.registration_fee), \"Trophy King Arcade: Refund failed.\");\n\n            gi.total_fee -= (gi.registration_fee);\n\n            gi.fee[player] = 0;\n            gi.paid[player] = 0;\n            gi.player_count -= 1;\n\n            emit Refund(game_id, player, gi.registration_fee);\n        }\n    }\n\n    /**\n     * @dev Updates {gameData} sets {#}.seats[`player`] to 0.\n     *\n     * Requirements:\n     *\n     * - the caller must have game master role.\n     */\n    function removePlayer(uint256 game_id, address player) public onlyRole(GAME_MASTER) {\n        gameData[game_id].seats[player] = 0;\n\n        emit RemovePlayer(player);\n    }\n\n    /**\n     * @dev Updates {gameData} defines `winner` as address to receive {#}.total_fee less arcade_fee.\n     *\n     * Requirements:\n     *\n     * - the caller must have game master role.\n     */\n    function setWinner(uint256 game_id, address winner) public onlyRole(GAME_MASTER) {\n        if (gameData[game_id].exchange == false) {\n            require(gameData[game_id].paid[winner] == 1, \"Trophy King Arcade: Not registered for this game\");\n\n            uint256 arcade_fee = (gameData[game_id].total_fee * (acceptedArcadeTokens[(gameData[game_id].arcade_token)].redemption_rate + fee_percentage)) / base / base;\n            uint256 payout = gameData[game_id].total_fee.sub(arcade_fee);\n            uint256 contract_balance = acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.balanceOf(address(this));\n\n            if (contract_balance < payout) {\n                payout = contract_balance;\n            }\n\n            require(acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transfer(winner, payout), \"Trophy King Arcade: Payout failed.\");\n\n            emit Fee(gameData[game_id].fee[winner]);\n\n            emit Payout(payout);\n        }\n\n        closeGame(game_id);\n    }\n\n    /**\n     * @dev Updates {gameData} [internal].\n     */\n    function _register(uint256 game_id, address player_address, uint256 amount) internal {\n        GameInfo storage gi = gameData[game_id];\n\n        gi.player_count += 1;\n        gi.fee[player_address] = amount;\n        gi.paid[player_address] = 1;\n        gi.total_fee += amount;\n        \n        emit Register(msg.sender, game_id);\n    }\n}\n"
			},
			"contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Arcade.sol": {
				"Arcade": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "CloseGame",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "CreateGame",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "DeleteGame",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "Fee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "OpenGame",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "payout",
									"type": "uint256"
								}
							],
							"name": "Payout",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "PlacePlayer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Refund",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Register",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "RemovePlayer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ARCADE_MANAGER",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GAME_MASTER",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "acceptedArcadeTokens",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "native_token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "redemption_rate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token_address",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "redemption_rate",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_active",
									"type": "bool"
								}
							],
							"name": "addArcadeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token_address",
									"type": "address"
								}
							],
							"name": "arcadeToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								}
							],
							"name": "closeGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "registration_fee",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "arcade_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "player_limit",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "exchange",
									"type": "bool"
								}
							],
							"name": "createGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								}
							],
							"name": "deleteGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee_percentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "gameData",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exchange",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "player_count",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "player_limit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "registration_fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "status",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "arcade_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "total_fee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token_address",
									"type": "address"
								}
							],
							"name": "isAccepted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								}
							],
							"name": "leaveMatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								}
							],
							"name": "openGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "placePlayer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "arcade_token",
									"type": "address"
								}
							],
							"name": "reconcile",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "refund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token_address",
									"type": "address"
								}
							],
							"name": "removeArcadeToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "removePlayer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "percentage",
									"type": "uint256"
								}
							],
							"name": "setArcadeFeePercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"name": "setWinner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addArcadeToken(address,uint256,bool)": {
								"details": "Adds token to {acceptedArcadeTokens} Require `token_address` for proxy balance exchange.   `redemption_rate` is set and determines the rate that proxy balance is exchanged.   Set `active` to reflect status of exchange. Requirements: - the caller must have arcade manager role."
							},
							"arcadeToken(address)": {
								"details": "Returns {ArcadeToken} struct for `token_address`."
							},
							"closeGame(uint256)": {
								"details": "Changes {#}.status for `game_id`. Requirements: - the caller must have game master role."
							},
							"createGame(uint256,uint256,address,uint256,bool)": {
								"details": "Mutates {gameData} structure with game configuration. Sets {#} for `game_id`, `registration_fee`, `arcade_token`, `player_limit`, `exchange`  Requirements: - the caller must have game master role."
							},
							"deleteGame(uint256)": {
								"details": "Deletes {#} for {gameData} for `game_id`. Requirements: - the caller must have game master role."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isAccepted(address)": {
								"details": "Returns {active} as boolean value for `token_address`."
							},
							"leaveMatch(uint256)": {
								"details": "Updates {gameData} sets {#}.seats[`player`] to 0."
							},
							"openGame(uint256)": {
								"details": "Changes {#}.status for `game_id`. Requirements: - the caller must have game master role."
							},
							"placePlayer(uint256,address)": {
								"details": "Gives `player` access to register for `game_id`. Requirements: - the caller must have game master role."
							},
							"reconcile(address)": {
								"details": "Transfer balance of `arcade_token` to caller. Requirements: - the caller must have admin role."
							},
							"refund(uint256,address)": {
								"details": "Returns {#}.registration_fee for `player` at `game_id`. Requirements: - the caller must have game master role. - `player` must be registered. - contract balance should exceed {#}.registration_fee"
							},
							"register(uint256)": {
								"details": "Validates game configuration for caller. Transfers {#}.registration_fee to arcade contract. Requirements: - Valid game configuration"
							},
							"removeArcadeToken(address)": {
								"details": "Disable token for proxy balance exchange. Requirements: - the caller must have arcade manager role."
							},
							"removePlayer(uint256,address)": {
								"details": "Updates {gameData} sets {#}.seats[`player`] to 0. Requirements: - the caller must have game master role."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"setArcadeFeePercentage(uint256)": {
								"details": "Set fee percentage for arcade contract. Requirements: - the caller must have arcade manager role.     "
							},
							"setWinner(uint256,address)": {
								"details": "Updates {gameData} defines `winner` as address to receive {#}.total_fee less arcade_fee. Requirements: - the caller must have game master role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Arcade.sol\":179:10826  contract Arcade is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Arcade.sol\":1435:1437  18 */\n  0x12\n    /* \"contracts/Arcade.sol\":1409:1437  uint256 public decimals = 18 */\n  0x03\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Arcade.sol\":1503:1526  10**(uint256(decimals)) */\n  tag_1\n  swap1\n    /* \"contracts/Arcade.sol\":1503:1505  10 */\n  0x0a\n    /* \"contracts/Arcade.sol\":1503:1526  10**(uint256(decimals)) */\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/Arcade.sol\":1480:1526  uint256 private base = 10**(uint256(decimals)) */\n  0x05\n  sstore\n    /* \"contracts/Arcade.sol\":1560:1795  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n    /* \"contracts/Arcade.sol\":1584:1628  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_6\n    /* \"contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/Arcade.sol\":1584:1594  _grantRole */\n  tag_9\n    /* \"contracts/Arcade.sol\":1584:1628  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"contracts/Arcade.sol\":1638:1678  _grantRole(ARCADE_MANAGER, _msgSender()) */\n  tag_10\n    /* \"contracts/Arcade.sol\":715:742  keccak256(\"ARCADE_MANAGER\") */\n  0x3131fc8beb48b895197ad34f21c86afdf6a989a5cd911181952dbf8dfcf18192\n    /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/Arcade.sol\":1584:1594  _grantRole */\n  tag_9\n    /* \"contracts/Arcade.sol\":1584:1628  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\n    /* \"contracts/Arcade.sol\":1638:1678  _grantRole(ARCADE_MANAGER, _msgSender()) */\ntag_10:\n    /* \"contracts/Arcade.sol\":1688:1725  _grantRole(GAME_MASTER, _msgSender()) */\n  tag_12\n    /* \"contracts/Arcade.sol\":786:810  keccak256(\"GAME_MASTER\") */\n  0x3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c\n    /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/Arcade.sol\":1584:1594  _grantRole */\n  tag_9\n    /* \"contracts/Arcade.sol\":1584:1628  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\n    /* \"contracts/Arcade.sol\":1688:1725  _grantRole(GAME_MASTER, _msgSender()) */\ntag_12:\n    /* \"contracts/Arcade.sol\":1736:1741  owner */\n  0x06\n    /* \"contracts/Arcade.sol\":1736:1756  owner = _msgSender() */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/Arcade.sol\":1736:1756  owner = _msgSender() */\n  or\n  swap1\n  sstore\n    /* \"contracts/Arcade.sol\":1784:1788  1e17 */\n  0x016345785d8a0000\n    /* \"contracts/Arcade.sol\":1767:1781  fee_percentage */\n  0x04\n    /* \"contracts/Arcade.sol\":1767:1788  fee_percentage = 1e17 */\n  sstore\n    /* \"contracts/Arcade.sol\":179:10826  contract Arcade is AccessControl {... */\n  jump(tag_23)\n    /* \"contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_9:\n    /* \"contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n  tag_18\n    /* \"contracts/access/AccessControl.sol\":7335:7339  role */\n  dup3\n    /* \"contracts/access/AccessControl.sol\":7341:7348  account */\n  dup3\n    /* \"contracts/access/AccessControl.sol\":7327:7334  hasRole */\n  tag_19\n    /* \"contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n  jump\t// in\ntag_18:\n    /* \"contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n  tag_20\n  jumpi\n    /* \"contracts/access/AccessControl.sol\":7365:7371  _roles */\n  0x00\n    /* \"contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/access/AccessControl.sol\":7397:7401  true */\n  0x01\n    /* \"contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\n  tag_21\n    /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"contracts/access/AccessControl.sol\":7438:7445  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"contracts/access/AccessControl.sol\":7432:7436  role */\n  dup4\n    /* \"contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\ntag_20:\n    /* \"contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_19:\n    /* \"contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_22:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:436   */\ntag_24:\n    /* \"#utility.yul\":103:104   */\n  0x01\n    /* \"#utility.yul\":146:151   */\n  dup2\n    /* \"#utility.yul\":103:104   */\n  dup2\n    /* \"#utility.yul\":160:430   */\ntag_26:\n    /* \"#utility.yul\":181:188   */\n  dup1\n    /* \"#utility.yul\":171:179   */\n  dup6\n    /* \"#utility.yul\":168:189   */\n  gt\n    /* \"#utility.yul\":160:430   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":240:244   */\n  dup2\n    /* \"#utility.yul\":236:237   */\n  0x00\n    /* \"#utility.yul\":232:238   */\n  not\n    /* \"#utility.yul\":228:245   */\n  div\n    /* \"#utility.yul\":222:226   */\n  dup3\n    /* \"#utility.yul\":219:246   */\n  gt\n    /* \"#utility.yul\":216:218   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":249:267   */\n  tag_30\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":299:306   */\n  dup1\n    /* \"#utility.yul\":289:297   */\n  dup6\n    /* \"#utility.yul\":285:307   */\n  and\n    /* \"#utility.yul\":282:284   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":319:335   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":282:284   */\ntag_32:\n    /* \"#utility.yul\":398:420   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":358:373   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":160:430   */\n  jump(tag_26)\ntag_28:\n    /* \"#utility.yul\":164:167   */\n  pop\n    /* \"#utility.yul\":78:436   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":441:572   */\ntag_2:\n    /* \"#utility.yul\":501:506   */\n  0x00\n    /* \"#utility.yul\":530:566   */\n  tag_34\n    /* \"#utility.yul\":557:565   */\n  dup4\n    /* \"#utility.yul\":551:555   */\n  dup4\n    /* \"#utility.yul\":530:566   */\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":521:566   */\n  swap4\n    /* \"#utility.yul\":511:572   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":577:1383   */\ntag_35:\n    /* \"#utility.yul\":626:631   */\n  0x00\n    /* \"#utility.yul\":656:664   */\n  dup3\n    /* \"#utility.yul\":646:648   */\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":697:698   */\n  0x01\n    /* \"#utility.yul\":711:716   */\n  jump(tag_22)\n    /* \"#utility.yul\":646:648   */\ntag_37:\n    /* \"#utility.yul\":745:749   */\n  dup2\n    /* \"#utility.yul\":735:737   */\n  tag_38\n  jumpi\n  pop\n    /* \"#utility.yul\":782:783   */\n  0x00\n    /* \"#utility.yul\":796:801   */\n  jump(tag_22)\n    /* \"#utility.yul\":735:737   */\ntag_38:\n    /* \"#utility.yul\":827:831   */\n  dup2\n    /* \"#utility.yul\":845:846   */\n  0x01\n    /* \"#utility.yul\":840:899   */\n  dup2\n  eq\n  tag_40\n  jumpi\n    /* \"#utility.yul\":913:914   */\n  0x02\n    /* \"#utility.yul\":908:1038   */\n  dup2\n  eq\n  tag_41\n  jumpi\n    /* \"#utility.yul\":820:1038   */\n  jump(tag_39)\n    /* \"#utility.yul\":840:899   */\ntag_40:\n    /* \"#utility.yul\":870:871   */\n  0x01\n    /* \"#utility.yul\":861:871   */\n  swap2\n  pop\n    /* \"#utility.yul\":884:889   */\n  pop\n  jump(tag_22)\n    /* \"#utility.yul\":908:1038   */\ntag_41:\n    /* \"#utility.yul\":945:948   */\n  0xff\n    /* \"#utility.yul\":935:943   */\n  dup5\n    /* \"#utility.yul\":932:949   */\n  gt\n    /* \"#utility.yul\":929:931   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":952:970   */\n  tag_43\n  tag_31\n  jump\t// in\ntag_43:\n  pop\n  pop\n    /* \"#utility.yul\":1008:1009   */\n  0x01\n    /* \"#utility.yul\":994:1010   */\n  dup3\n  shl\n    /* \"#utility.yul\":1023:1028   */\n  jump(tag_22)\n    /* \"#utility.yul\":820:1038   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1122:1124   */\n  0x20\n    /* \"#utility.yul\":1112:1120   */\n  dup4\n    /* \"#utility.yul\":1109:1125   */\n  lt\n    /* \"#utility.yul\":1103:1106   */\n  0x0133\n    /* \"#utility.yul\":1097:1101   */\n  dup4\n    /* \"#utility.yul\":1094:1107   */\n  lt\n    /* \"#utility.yul\":1090:1126   */\n  and\n    /* \"#utility.yul\":1084:1086   */\n  0x4e\n    /* \"#utility.yul\":1074:1082   */\n  dup5\n    /* \"#utility.yul\":1071:1087   */\n  lt\n    /* \"#utility.yul\":1066:1068   */\n  0x0b\n    /* \"#utility.yul\":1060:1064   */\n  dup5\n    /* \"#utility.yul\":1057:1069   */\n  lt\n    /* \"#utility.yul\":1053:1088   */\n  and\n    /* \"#utility.yul\":1050:1127   */\n  or\n    /* \"#utility.yul\":1047:1049   */\n  iszero\n  tag_44\n  jumpi\n  pop\n    /* \"#utility.yul\":1159:1178   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1191:1196   */\n  jump(tag_22)\n    /* \"#utility.yul\":1047:1049   */\ntag_44:\n    /* \"#utility.yul\":1238:1272   */\n  tag_45\n    /* \"#utility.yul\":1263:1271   */\n  dup4\n    /* \"#utility.yul\":1257:1261   */\n  dup4\n    /* \"#utility.yul\":1238:1272   */\n  tag_24\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1308:1314   */\n  dup1\n    /* \"#utility.yul\":1304:1305   */\n  0x00\n    /* \"#utility.yul\":1300:1306   */\n  not\n    /* \"#utility.yul\":1296:1315   */\n  div\n    /* \"#utility.yul\":1287:1294   */\n  dup3\n    /* \"#utility.yul\":1284:1316   */\n  gt\n    /* \"#utility.yul\":1281:1283   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1319:1337   */\n  tag_47\n  tag_31\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1357:1377   */\n  mul\n  swap4\n    /* \"#utility.yul\":636:1383   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1388:1515   */\ntag_31:\n    /* \"#utility.yul\":1449:1459   */\n  0x4e487b71\n    /* \"#utility.yul\":1444:1447   */\n  0xe0\n    /* \"#utility.yul\":1440:1460   */\n  shl\n    /* \"#utility.yul\":1437:1438   */\n  0x00\n    /* \"#utility.yul\":1430:1461   */\n  mstore\n    /* \"#utility.yul\":1480:1484   */\n  0x11\n    /* \"#utility.yul\":1477:1478   */\n  0x04\n    /* \"#utility.yul\":1470:1485   */\n  mstore\n    /* \"#utility.yul\":1504:1508   */\n  0x24\n    /* \"#utility.yul\":1501:1502   */\n  0x00\n    /* \"#utility.yul\":1494:1509   */\n  revert\n    /* \"#utility.yul\":1420:1515   */\ntag_23:\n    /* \"contracts/Arcade.sol\":179:10826  contract Arcade is AccessControl {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Arcade.sol\":179:10826  contract Arcade is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xb9888d89\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe6f091f9\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf207564e\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf336ee3c\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xb9888d89\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc18e397e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc46ed45a\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xccaf237f\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x9d00c61e\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x9d00c61e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9f512e22\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb22c376d\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x91d14854\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x99597b70\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9c623683\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x2ba67100\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x36568abe\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3e16518f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7ad226dc\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x2ba67100\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2d6ef310\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x09a18635\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x09a18635\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a55a1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2ac5016f\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0xf5544f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06602a48\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Arcade.sol\":7203:7345  function openGame(uint256 game_id) public onlyRole(GAME_MASTER) {... */\n    tag_3:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":5572:5586   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5565:5587   */\n      iszero\n        /* \"#utility.yul\":5547:5588   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5535:5537   */\n      0x20\n        /* \"#utility.yul\":5520:5538   */\n      add\n        /* \"contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Arcade.sol\":4533:5115  function addArcadeToken(address token_address, uint256 redemption_rate, bool _active) public onlyRole(ARCADE_MANAGER) {... */\n    tag_5:\n      tag_40\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"contracts/Arcade.sol\":3515:3887  function reconcile(address arcade_token) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_6:\n      tag_40\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"contracts/Arcade.sol\":6682:6824  function deleteGame(uint256 game_id) public onlyRole(GAME_MASTER) {... */\n    tag_7:\n      tag_40\n      tag_59\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_8:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n    tag_61:\n      mload(0x40)\n        /* \"#utility.yul\":6656:6681   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6629:6647   */\n      add\n        /* \"contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      tag_48\n        /* \"#utility.yul\":6611:6687   */\n      jump\n        /* \"contracts/Arcade.sol\":4052:4180  function setArcadeFeePercentage(uint256 percentage) public onlyRole(ARCADE_MANAGER) {... */\n    tag_9:\n      tag_40\n      tag_68\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"contracts/Arcade.sol\":9035:9207  function removePlayer(uint256 game_id, address player) public onlyRole(GAME_MASTER) {... */\n    tag_10:\n      tag_40\n      tag_71\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"contracts/Arcade.sol\":5577:5721  function closeGame(uint256 game_id) public onlyRole(GAME_MASTER) {... */\n    tag_11:\n      tag_40\n      tag_75\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_12:\n      tag_40\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"contracts/Arcade.sol\":1409:1437  uint256 public decimals = 18 */\n    tag_13:\n      tag_61\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_14:\n      tag_40\n      tag_86\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"contracts/Arcade.sol\":5277:5426  function removeArcadeToken(address token_address) public onlyRole(ARCADE_MANAGER) {... */\n    tag_15:\n      tag_40\n      tag_89\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"contracts/Arcade.sol\":8189:8868  function refund(uint256 game_id, address player) public onlyRole(GAME_MASTER) {... */\n    tag_16:\n      tag_40\n      tag_92\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"contracts/Arcade.sol\":1533:1553  address public owner */\n    tag_17:\n      sload(0x06)\n      tag_94\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_94:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3980:4012   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3962:4013   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3950:3952   */\n      0x20\n        /* \"#utility.yul\":3935:3953   */\n      add\n        /* \"contracts/Arcade.sol\":1533:1553  address public owner */\n      tag_48\n        /* \"#utility.yul\":3917:4019   */\n      jump\n        /* \"contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_18:\n      tag_44\n      tag_99\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"contracts/Arcade.sol\":748:810  bytes32 public constant GAME_MASTER = keccak256(\"GAME_MASTER\") */\n    tag_19:\n      tag_61\n      0x00\n      dup1\n      mload\n      0x20\n      data_806db7640bcc104a4b7b53ebc0c09b63eefd92fe89197bc684d91aa66a17455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"contracts/Arcade.sol\":9413:10424  function setWinner(uint256 game_id, address winner) public onlyRole(GAME_MASTER) {... */\n    tag_20:\n      tag_40\n      tag_106\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"contracts/Arcade.sol\":1879:2080  function arcadeToken(address token_address) public view returns (bool, uint256) {... */\n    tag_21:\n      tag_108\n      tag_109\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":1977:2012  acceptedArcadeTokens[token_address] */\n      and\n        /* \"contracts/Arcade.sol\":1944:1948  bool */\n      0x00\n        /* \"contracts/Arcade.sol\":1977:2012  acceptedArcadeTokens[token_address] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":1977:1997  acceptedArcadeTokens */\n      0x01\n        /* \"contracts/Arcade.sol\":1977:2012  acceptedArcadeTokens[token_address] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Arcade.sol\":1977:2019  acceptedArcadeTokens[token_address].active */\n      dup1\n      sload\n        /* \"contracts/Arcade.sol\":2021:2072  acceptedArcadeTokens[token_address].redemption_rate */\n      swap2\n      add\n      sload\n      shl(0xa0, 0x01)\n        /* \"contracts/Arcade.sol\":1977:2019  acceptedArcadeTokens[token_address].active */\n      swap1\n      swap2\n      div\n      0xff\n      and\n      swap2\n        /* \"contracts/Arcade.sol\":1879:2080  function arcadeToken(address token_address) public view returns (bool, uint256) {... */\n      jump\n    tag_108:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5792:5806   */\n      swap3\n      iszero\n        /* \"#utility.yul\":5785:5807   */\n      iszero\n        /* \"#utility.yul\":5767:5808   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5839:5841   */\n      0x20\n        /* \"#utility.yul\":5824:5842   */\n      dup4\n      add\n        /* \"#utility.yul\":5817:5851   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5740:5758   */\n      add\n        /* \"contracts/Arcade.sol\":1879:2080  function arcadeToken(address token_address) public view returns (bool, uint256) {... */\n      tag_48\n        /* \"#utility.yul\":5722:5857   */\n      jump\n        /* \"contracts/Arcade.sol\":6908:7052  function leaveMatch(uint256 game_id) public {... */\n    tag_22:\n      tag_40\n      tag_114\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_23:\n      tag_61\n        /* \"contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"contracts/Arcade.sol\":1292:1351  mapping(address => ArcadeToken) public acceptedArcadeTokens */\n    tag_24:\n      tag_119\n      tag_120\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_120:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap2\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup4\n      jump\n    tag_119:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6921:6953   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":6903:6954   */\n      dup5\n      mstore\n        /* \"#utility.yul\":6997:7011   */\n      swap2\n      iszero\n        /* \"#utility.yul\":6990:7012   */\n      iszero\n        /* \"#utility.yul\":6985:6987   */\n      0x20\n        /* \"#utility.yul\":6970:6988   */\n      dup5\n      add\n        /* \"#utility.yul\":6963:7013   */\n      mstore\n        /* \"#utility.yul\":7029:7047   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7022:7056   */\n      mstore\n        /* \"#utility.yul\":6891:6893   */\n      0x60\n        /* \"#utility.yul\":6876:6894   */\n      add\n        /* \"contracts/Arcade.sol\":1292:1351  mapping(address => ArcadeToken) public acceptedArcadeTokens */\n      tag_48\n        /* \"#utility.yul\":6858:7062   */\n      jump\n        /* \"contracts/Arcade.sol\":7511:7917  function placePlayer(uint256 game_id, address player) public onlyRole(GAME_MASTER) returns (bool) {... */\n    tag_25:\n      tag_44\n      tag_125\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"contracts/Arcade.sol\":674:742  bytes32 public constant ARCADE_MANAGER = keccak256(\"ARCADE_MANAGER\") */\n    tag_26:\n      tag_61\n      0x00\n      dup1\n      mload\n      0x20\n      data_023264abf97b17654b97d38bd81099eb2064d5cca6dbd4e398ff8bdbab67b82d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"contracts/Arcade.sol\":1444:1473  uint256 public fee_percentage */\n    tag_27:\n      tag_61\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/Arcade.sol\":1358:1402  mapping(uint256 => GameInfo) public gameData */\n    tag_28:\n      tag_134\n      tag_135\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_135:\n      0x02\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup3\n      add\n      sload\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      dup5\n      add\n      sload\n      0x05\n      dup6\n      add\n      sload\n      0x06\n      swap1\n      swap6\n      add\n      sload\n      0xff\n      swap1\n      swap5\n      and\n      swap6\n      swap5\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap1\n      dup8\n      jump\n    tag_134:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6196:6210   */\n      swap8\n      iszero\n        /* \"#utility.yul\":6189:6211   */\n      iszero\n        /* \"#utility.yul\":6171:6212   */\n      dup9\n      mstore\n        /* \"#utility.yul\":6243:6245   */\n      0x20\n        /* \"#utility.yul\":6228:6246   */\n      dup9\n      add\n        /* \"#utility.yul\":6221:6255   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":6271:6289   */\n      swap5\n      dup7\n      add\n        /* \"#utility.yul\":6264:6298   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":6329:6331   */\n      0x60\n        /* \"#utility.yul\":6314:6332   */\n      dup6\n      add\n        /* \"#utility.yul\":6307:6341   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6372:6375   */\n      0x80\n        /* \"#utility.yul\":6357:6376   */\n      dup5\n      add\n        /* \"#utility.yul\":6350:6385   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6422:6454   */\n      and\n        /* \"#utility.yul\":6442:6445   */\n      0xa0\n        /* \"#utility.yul\":6401:6420   */\n      dup4\n      add\n        /* \"#utility.yul\":6394:6455   */\n      mstore\n        /* \"#utility.yul\":6486:6489   */\n      0xc0\n        /* \"#utility.yul\":6471:6490   */\n      dup3\n      add\n        /* \"#utility.yul\":6464:6499   */\n      mstore\n        /* \"#utility.yul\":6158:6161   */\n      0xe0\n        /* \"#utility.yul\":6143:6162   */\n      add\n        /* \"contracts/Arcade.sol\":1358:1402  mapping(uint256 => GameInfo) public gameData */\n      tag_48\n        /* \"#utility.yul\":6125:6505   */\n      jump\n        /* \"contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_29:\n      tag_40\n      tag_140\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"contracts/Arcade.sol\":2169:2305  function isAccepted(address token_address) public view returns (bool) {... */\n    tag_30:\n      tag_44\n      tag_143\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":2256:2291  acceptedArcadeTokens[token_address] */\n      and\n        /* \"contracts/Arcade.sol\":2233:2237  bool */\n      0x00\n        /* \"contracts/Arcade.sol\":2256:2291  acceptedArcadeTokens[token_address] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2256:2276  acceptedArcadeTokens */\n      0x01\n        /* \"contracts/Arcade.sol\":2256:2291  acceptedArcadeTokens[token_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":2256:2298  acceptedArcadeTokens[token_address].active */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"contracts/Arcade.sol\":2169:2305  function isAccepted(address token_address) public view returns (bool) {... */\n      jump\n        /* \"contracts/Arcade.sol\":2512:3357  function register(uint256 game_id) public {... */\n    tag_31:\n      tag_40\n      tag_147\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n        /* \"contracts/Arcade.sol\":5987:6523  function createGame(uint256 game_id, uint256 registration_fee, address arcade_token, uint256 player_limit, bool exchange) public onlyRole(GAME_MASTER) {... */\n    tag_32:\n      tag_40\n      tag_150\n      calldatasize\n      0x04\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n        /* \"contracts/Arcade.sol\":7203:7345  function openGame(uint256 game_id) public onlyRole(GAME_MASTER) {... */\n    tag_43:\n      0x00\n      dup1\n      mload\n      0x20\n      data_806db7640bcc104a4b7b53ebc0c09b63eefd92fe89197bc684d91aa66a17455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_154\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/Arcade.sol\":7277:7294  gameData[game_id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":7277:7285  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":7277:7294  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":7304:7305  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":7277:7301  gameData[game_id].status */\n      0x04\n      swap1\n      swap2\n      add\n        /* \"contracts/Arcade.sol\":7277:7305  gameData[game_id].status = 1 */\n      sstore\n        /* \"contracts/Arcade.sol\":7321:7338  OpenGame(game_id) */\n      mload\n      0x651a9760985edc53055bf2462cb4437b9be3de87aa3eecf2c05782e8b58eba19\n      swap1\n      tag_157\n      swap1\n        /* \"contracts/Arcade.sol\":7286:7293  game_id */\n      dup5\n        /* \"#utility.yul\":6656:6681   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6629:6647   */\n      add\n      swap1\n        /* \"#utility.yul\":6611:6687   */\n      jump\n        /* \"contracts/Arcade.sol\":7321:7338  OpenGame(game_id) */\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":7203:7345  function openGame(uint256 game_id) public onlyRole(GAME_MASTER) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_47:\n        /* \"contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_160\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n    tag_160:\n        /* \"contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":4533:5115  function addArcadeToken(address token_address, uint256 redemption_rate, bool _active) public onlyRole(ARCADE_MANAGER) {... */\n    tag_53:\n      0x00\n      dup1\n      mload\n      0x20\n      data_023264abf97b17654b97d38bd81099eb2064d5cca6dbd4e398ff8bdbab67b82d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_163\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":4661:4696  acceptedArcadeTokens[token_address] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":4661:4681  acceptedArcadeTokens */\n      0x01\n        /* \"contracts/Arcade.sol\":4661:4696  acceptedArcadeTokens[token_address] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Arcade.sol\":4661:4712  acceptedArcadeTokens[token_address].redemption_rate */\n      swap1\n      dup2\n      add\n        /* \"contracts/Arcade.sol\":4661:4730  acceptedArcadeTokens[token_address].redemption_rate = redemption_rate */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":4740:4792  acceptedArcadeTokens[token_address].active = _active */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n        /* \"contracts/Arcade.sol\":4868:4948  acceptedArcadeTokens[token_address].native_token = IERC20(payable_token_address) */\n      and\n      shl(0xa0, 0x01)\n        /* \"contracts/Arcade.sol\":4740:4792  acceptedArcadeTokens[token_address].active = _active */\n      dup6\n      iszero\n      iszero\n      mul\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"contracts/Arcade.sol\":4868:4948  acceptedArcadeTokens[token_address].native_token = IERC20(payable_token_address) */\n      and\n      or\n      dup3\n      or\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":4661:4696  acceptedArcadeTokens[token_address] */\n      dup5\n      swap1\n        /* \"contracts/Arcade.sol\":4958:5014  acceptedArcadeTokens[token_address].native_token.approve */\n      0x095ea7b3\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Arcade.sol\":4958:5108  acceptedArcadeTokens[token_address].native_token.approve(_msgSender(), 115792089237316195423570985008687907853269984665640564039457584007913129639935) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4681:4713   */\n      swap1\n      swap2\n      and\n        /* \"contracts/Arcade.sol\":4958:5108  acceptedArcadeTokens[token_address].native_token.approve(_msgSender(), 115792089237316195423570985008687907853269984665640564039457584007913129639935) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4663:4714   */\n      mstore\n      not(0x00)\n        /* \"#utility.yul\":4730:4748   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4723:4757   */\n      mstore\n        /* \"#utility.yul\":4636:4654   */\n      0x44\n      add\n        /* \"contracts/Arcade.sol\":4958:5108  acceptedArcadeTokens[token_address].native_token.approve(_msgSender(), 115792089237316195423570985008687907853269984665640564039457584007913129639935) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      pop\n        /* \"contracts/access/AccessControl.sol\":2531:2532  _ */\n      pop\n        /* \"contracts/Arcade.sol\":4533:5115  function addArcadeToken(address token_address, uint256 redemption_rate, bool _active) public onlyRole(ARCADE_MANAGER) {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":3515:3887  function reconcile(address arcade_token) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_57:\n        /* \"contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_175\n        /* \"contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":3620:3654  acceptedArcadeTokens[arcade_token] */\n      dup3\n      dup2\n      and\n        /* \"contracts/Arcade.sol\":3602:3617  uint256 balance */\n      0x00\n        /* \"contracts/Arcade.sol\":3620:3654  acceptedArcadeTokens[arcade_token] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3620:3640  acceptedArcadeTokens */\n      0x01\n        /* \"contracts/Arcade.sol\":3620:3654  acceptedArcadeTokens[arcade_token] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Arcade.sol\":3620:3667  acceptedArcadeTokens[arcade_token].native_token */\n      sload\n        /* \"contracts/Arcade.sol\":3620:3692  acceptedArcadeTokens[arcade_token].native_token.balanceOf(address(this)) */\n      swap1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3686:3690  this */\n      address\n        /* \"contracts/Arcade.sol\":3620:3692  acceptedArcadeTokens[arcade_token].native_token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3962:4013   */\n      mstore\n        /* \"contracts/Arcade.sol\":3602:3617  uint256 balance */\n      swap2\n      swap3\n        /* \"contracts/Arcade.sol\":3620:3667  acceptedArcadeTokens[arcade_token].native_token */\n      and\n      swap1\n        /* \"contracts/Arcade.sol\":3620:3677  acceptedArcadeTokens[arcade_token].native_token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3935:3953   */\n      0x24\n      add\n        /* \"contracts/Arcade.sol\":3620:3692  acceptedArcadeTokens[arcade_token].native_token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"contracts/Arcade.sol\":3602:3692  uint256 balance = acceptedArcadeTokens[arcade_token].native_token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Arcade.sol\":3707:3718  balance > 0 */\n      dup1\n      iszero\n        /* \"contracts/Arcade.sol\":3703:3881  if (balance > 0) {... */\n      tag_191\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":3742:3778  acceptedArcadeTokens[(arcade_token)] */\n      dup4\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3742:3762  acceptedArcadeTokens */\n      0x01\n        /* \"contracts/Arcade.sol\":3742:3778  acceptedArcadeTokens[(arcade_token)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":3742:3791  acceptedArcadeTokens[(arcade_token)].native_token */\n      sload\n      and\n        /* \"contracts/Arcade.sol\":3742:3800  acceptedArcadeTokens[(arcade_token)].native_token.transfer */\n      0xa9059cbb\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Arcade.sol\":3742:3823  acceptedArcadeTokens[(arcade_token)].native_token.transfer(_msgSender(), balance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4681:4713   */\n      swap1\n      swap2\n      and\n        /* \"contracts/Arcade.sol\":3742:3823  acceptedArcadeTokens[(arcade_token)].native_token.transfer(_msgSender(), balance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4663:4714   */\n      mstore\n        /* \"#utility.yul\":4730:4748   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4723:4757   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4636:4654   */\n      0x44\n      add\n        /* \"contracts/Arcade.sol\":3742:3823  acceptedArcadeTokens[(arcade_token)].native_token.transfer(_msgSender(), balance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_190:\n        /* \"contracts/Arcade.sol\":3734:3870  require(acceptedArcadeTokens[(arcade_token)].native_token.transfer(_msgSender(), balance), \"Trophy King Arcade: Reconciliation failed.\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10841:10843   */\n      0x20\n        /* \"contracts/Arcade.sol\":3734:3870  require(acceptedArcadeTokens[(arcade_token)].native_token.transfer(_msgSender(), balance), \"Trophy King Arcade: Reconciliation failed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10823:10844   */\n      mstore\n        /* \"#utility.yul\":10880:10882   */\n      0x2a\n        /* \"#utility.yul\":10860:10878   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10853:10883   */\n      mstore\n        /* \"#utility.yul\":10919:10953   */\n      0x54726f706879204b696e67204172636164653a205265636f6e63696c69617469\n        /* \"#utility.yul\":10899:10917   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10892:10954   */\n      mstore\n      shl(0xb1, 0x37b7103330b4b632b217)\n        /* \"#utility.yul\":10970:10988   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10963:11003   */\n      mstore\n        /* \"#utility.yul\":11020:11039   */\n      0x84\n      add\n        /* \"contracts/Arcade.sol\":3734:3870  require(acceptedArcadeTokens[(arcade_token)].native_token.transfer(_msgSender(), balance), \"Trophy King Arcade: Reconciliation failed.\") */\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/access/AccessControl.sol\":2531:2532  _ */\n      pop\n        /* \"contracts/Arcade.sol\":3515:3887  function reconcile(address arcade_token) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":6682:6824  function deleteGame(uint256 game_id) public onlyRole(GAME_MASTER) {... */\n    tag_60:\n      0x00\n      dup1\n      mload\n      0x20\n      data_806db7640bcc104a4b7b53ebc0c09b63eefd92fe89197bc684d91aa66a17455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_195\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/Arcade.sol\":6765:6782  gameData[game_id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":6765:6773  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":6765:6782  gameData[game_id] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Arcade.sol\":6758:6782  delete gameData[game_id] */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup6\n      swap1\n      sstore\n      swap3\n      dup4\n      add\n      dup5\n      swap1\n      sstore\n      0x03\n      dup4\n      add\n      dup5\n      swap1\n      sstore\n      0x04\n      dup4\n      add\n      dup5\n      swap1\n      sstore\n      0x05\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      0x06\n      swap1\n      swap3\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Arcade.sol\":6798:6817  DeleteGame(game_id) */\n      mload\n        /* \"#utility.yul\":6656:6681   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":6798:6817  DeleteGame(game_id) */\n      0xd0b153e02e23f4f21d020465b4dac7b1114893d05db395ed2511f879c3ac90b4\n      swap2\n        /* \"#utility.yul\":6629:6647   */\n      add\n        /* \"contracts/Arcade.sol\":6798:6817  DeleteGame(game_id) */\n      tag_157\n        /* \"#utility.yul\":6611:6687   */\n      jump\n        /* \"contracts/Arcade.sol\":4052:4180  function setArcadeFeePercentage(uint256 percentage) public onlyRole(ARCADE_MANAGER) {... */\n    tag_69:\n      0x00\n      dup1\n      mload\n      0x20\n      data_023264abf97b17654b97d38bd81099eb2064d5cca6dbd4e398ff8bdbab67b82d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_200\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_200:\n      pop\n        /* \"contracts/Arcade.sol\":4146:4160  fee_percentage */\n      0x04\n        /* \"contracts/Arcade.sol\":4146:4173  fee_percentage = percentage */\n      sstore\n        /* \"contracts/Arcade.sol\":4052:4180  function setArcadeFeePercentage(uint256 percentage) public onlyRole(ARCADE_MANAGER) {... */\n      jump\t// out\n        /* \"contracts/Arcade.sol\":9035:9207  function removePlayer(uint256 game_id, address player) public onlyRole(GAME_MASTER) {... */\n    tag_73:\n      0x00\n      dup1\n      mload\n      0x20\n      data_806db7640bcc104a4b7b53ebc0c09b63eefd92fe89197bc684d91aa66a17455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_203\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/Arcade.sol\":9163:9164  0 */\n      0x00\n        /* \"contracts/Arcade.sol\":9129:9146  gameData[game_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":9129:9137  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":9129:9146  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":9129:9160  gameData[game_id].seats[player] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n        /* \"contracts/Arcade.sol\":9129:9152  gameData[game_id].seats */\n      0x09\n      swap1\n      swap2\n      add\n        /* \"contracts/Arcade.sol\":9129:9160  gameData[game_id].seats[player] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/Arcade.sol\":9129:9164  gameData[game_id].seats[player] = 0 */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Arcade.sol\":9180:9200  RemovePlayer(player) */\n      mload\n        /* \"#utility.yul\":3962:4013   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/Arcade.sol\":9180:9200  RemovePlayer(player) */\n      0x34aeefd5030be05fe70eebc8866d82f935a308eb9f334cba88f5e3bea1a0cae8\n      swap2\n        /* \"#utility.yul\":3935:3953   */\n      add\n        /* \"contracts/Arcade.sol\":9180:9200  RemovePlayer(player) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":9035:9207  function removePlayer(uint256 game_id, address player) public onlyRole(GAME_MASTER) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":5577:5721  function closeGame(uint256 game_id) public onlyRole(GAME_MASTER) {... */\n    tag_76:\n      0x00\n      dup1\n      mload\n      0x20\n      data_806db7640bcc104a4b7b53ebc0c09b63eefd92fe89197bc684d91aa66a17455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_207\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/Arcade.sol\":5679:5680  0 */\n      0x00\n        /* \"contracts/Arcade.sol\":5652:5669  gameData[game_id] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":5652:5660  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":5652:5669  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Arcade.sol\":5652:5676  gameData[game_id].status */\n      0x04\n      add\n        /* \"contracts/Arcade.sol\":5652:5680  gameData[game_id].status = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Arcade.sol\":5696:5714  CloseGame(game_id) */\n      mload\n      0x827e8bff9f46048f8351964d2c871d09e4f4231513cf2fcb786649c68732e24f\n      swap1\n      tag_157\n      swap1\n        /* \"contracts/Arcade.sol\":5661:5668  game_id */\n      dup5\n        /* \"#utility.yul\":6656:6681   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6629:6647   */\n      add\n      swap1\n        /* \"#utility.yul\":6611:6687   */\n      jump\n        /* \"contracts/access/AccessControl.sol\":4770:4915  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_80:\n        /* \"contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_212\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      tag_191\n        /* \"contracts/access/AccessControl.sol\":4894:4898  role */\n      dup4\n        /* \"contracts/access/AccessControl.sol\":4900:4907  account */\n      dup4\n        /* \"contracts/access/AccessControl.sol\":4883:4893  _grantRole */\n      tag_215\n        /* \"contracts/access/AccessControl.sol\":4883:4908  _grantRole(role, account) */\n      jump\t// in\n        /* \"contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      dup2\n      and\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/access/AccessControl.sol\":5882:5905  account == _msgSender() */\n      eq\n        /* \"contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12475:12477   */\n      0x20\n        /* \"contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12457:12478   */\n      mstore\n        /* \"#utility.yul\":12514:12516   */\n      0x2f\n        /* \"#utility.yul\":12494:12512   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12487:12517   */\n      mstore\n        /* \"#utility.yul\":12553:12587   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":12533:12551   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12526:12588   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":12604:12622   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12597:12642   */\n      mstore\n        /* \"#utility.yul\":12659:12678   */\n      0x84\n      add\n        /* \"contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_192\n        /* \"#utility.yul\":12447:12684   */\n      jump\n        /* \"contracts/access/AccessControl.sol\":5874:5957  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_218:\n        /* \"contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      tag_221\n        /* \"contracts/access/AccessControl.sol\":5980:5984  role */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":5986:5993  account */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":5968:5979  _revokeRole */\n      tag_222\n        /* \"contracts/access/AccessControl.sol\":5968:5994  _revokeRole(role, account) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/access/AccessControl.sol\":5787:6001  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":5277:5426  function removeArcadeToken(address token_address) public onlyRole(ARCADE_MANAGER) {... */\n    tag_90:\n      0x00\n      dup1\n      mload\n      0x20\n      data_023264abf97b17654b97d38bd81099eb2064d5cca6dbd4e398ff8bdbab67b82d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_224\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_224:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":5369:5404  acceptedArcadeTokens[token_address] */\n      and\n        /* \"contracts/Arcade.sol\":5414:5419  false */\n      0x00\n        /* \"contracts/Arcade.sol\":5369:5404  acceptedArcadeTokens[token_address] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":5369:5389  acceptedArcadeTokens */\n      0x01\n        /* \"contracts/Arcade.sol\":5369:5404  acceptedArcadeTokens[token_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":5369:5419  acceptedArcadeTokens[token_address].active = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":5277:5426  function removeArcadeToken(address token_address) public onlyRole(ARCADE_MANAGER) {... */\n      jump\t// out\n        /* \"contracts/Arcade.sol\":8189:8868  function refund(uint256 game_id, address player) public onlyRole(GAME_MASTER) {... */\n    tag_93:\n      0x00\n      dup1\n      mload\n      0x20\n      data_806db7640bcc104a4b7b53ebc0c09b63eefd92fe89197bc684d91aa66a17455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_227\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/Arcade.sol\":8281:8298  gameData[game_id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":8281:8289  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":8281:8298  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":8281:8307  gameData[game_id].exchange */\n      sload\n      0xff\n      and\n        /* \"contracts/Arcade.sol\":8277:8862  if (gameData[game_id].exchange == false) {... */\n      tag_191\n      jumpi\n        /* \"contracts/Arcade.sol\":8340:8357  gameData[game_id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":8340:8348  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":8340:8357  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":8340:8370  gameData[game_id].paid[player] */\n      dup7\n      and\n      dup5\n      mstore\n        /* \"contracts/Arcade.sol\":8340:8362  gameData[game_id].paid */\n      0x08\n      add\n        /* \"contracts/Arcade.sol\":8340:8370  gameData[game_id].paid[player] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":8374:8375  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":8340:8375  gameData[game_id].paid[player] == 1 */\n      eq\n        /* \"contracts/Arcade.sol\":8332:8429  require(gameData[game_id].paid[player] == 1, \"Trophy King Arcade: Not registered for this game.\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11654:11656   */\n      0x20\n        /* \"contracts/Arcade.sol\":8332:8429  require(gameData[game_id].paid[player] == 1, \"Trophy King Arcade: Not registered for this game.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11636:11657   */\n      mstore\n        /* \"#utility.yul\":11693:11695   */\n      0x31\n        /* \"#utility.yul\":11673:11691   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11666:11696   */\n      mstore\n        /* \"#utility.yul\":11732:11766   */\n      0x54726f706879204b696e67204172636164653a204e6f74207265676973746572\n        /* \"#utility.yul\":11712:11730   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11705:11767   */\n      mstore\n      shl(0x79, 0x32b2103337b9103a3434b99033b0b6b297)\n        /* \"#utility.yul\":11783:11801   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11776:11823   */\n      mstore\n        /* \"#utility.yul\":11840:11859   */\n      0x84\n      add\n        /* \"contracts/Arcade.sol\":8332:8429  require(gameData[game_id].paid[player] == 1, \"Trophy King Arcade: Not registered for this game.\") */\n      tag_192\n        /* \"#utility.yul\":11626:11865   */\n      jump\n        /* \"contracts/Arcade.sol\":8332:8429  require(gameData[game_id].paid[player] == 1, \"Trophy King Arcade: Not registered for this game.\") */\n    tag_230:\n        /* \"contracts/Arcade.sol\":8444:8463  GameInfo storage gi */\n      0x00\n        /* \"contracts/Arcade.sol\":8466:8483  gameData[game_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":8466:8474  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":8466:8483  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Arcade.sol\":8528:8543  gi.arcade_token */\n      0x05\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Arcade.sol\":8506:8545  acceptedArcadeTokens[(gi.arcade_token)] */\n      dup6\n      mstore\n        /* \"contracts/Arcade.sol\":8506:8526  acceptedArcadeTokens */\n      0x01\n        /* \"contracts/Arcade.sol\":8506:8545  acceptedArcadeTokens[(gi.arcade_token)] */\n      swap1\n      swap4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":8506:8558  acceptedArcadeTokens[(gi.arcade_token)].native_token */\n      sload\n        /* \"contracts/Arcade.sol\":8576:8595  gi.registration_fee */\n      0x03\n      dup5\n      add\n      sload\n        /* \"contracts/Arcade.sol\":8506:8596  acceptedArcadeTokens[(gi.arcade_token)].native_token.transfer(player, gi.registration_fee) */\n      swap2\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"#utility.yul\":4681:4713   */\n      dup7\n      dup5\n      and\n        /* \"contracts/Arcade.sol\":8506:8596  acceptedArcadeTokens[(gi.arcade_token)].native_token.transfer(player, gi.registration_fee) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4663:4714   */\n      mstore\n        /* \"#utility.yul\":4730:4748   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4723:4757   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/Arcade.sol\":8506:8558  acceptedArcadeTokens[(gi.arcade_token)].native_token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Arcade.sol\":8506:8567  acceptedArcadeTokens[(gi.arcade_token)].native_token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4636:4654   */\n      0x44\n      add\n        /* \"contracts/Arcade.sol\":8506:8596  acceptedArcadeTokens[(gi.arcade_token)].native_token.transfer(player, gi.registration_fee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_237:\n        /* \"contracts/Arcade.sol\":8498:8635  require(acceptedArcadeTokens[(gi.arcade_token)].native_token.transfer(player, gi.registration_fee), \"Trophy King Arcade: Refund failed.\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12072:12074   */\n      0x20\n        /* \"contracts/Arcade.sol\":8498:8635  require(acceptedArcadeTokens[(gi.arcade_token)].native_token.transfer(player, gi.registration_fee), \"Trophy King Arcade: Refund failed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12054:12075   */\n      mstore\n        /* \"#utility.yul\":12111:12113   */\n      0x22\n        /* \"#utility.yul\":12091:12109   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12084:12114   */\n      mstore\n        /* \"#utility.yul\":12150:12184   */\n      0x54726f706879204b696e67204172636164653a20526566756e64206661696c65\n        /* \"#utility.yul\":12130:12148   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12123:12185   */\n      mstore\n      shl(0xf1, 0x3217)\n        /* \"#utility.yul\":12201:12219   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12194:12226   */\n      mstore\n        /* \"#utility.yul\":12243:12262   */\n      0x84\n      add\n        /* \"contracts/Arcade.sol\":8498:8635  require(acceptedArcadeTokens[(gi.arcade_token)].native_token.transfer(player, gi.registration_fee), \"Trophy King Arcade: Refund failed.\") */\n      tag_192\n        /* \"#utility.yul\":12044:12268   */\n      jump\n        /* \"contracts/Arcade.sol\":8498:8635  require(acceptedArcadeTokens[(gi.arcade_token)].native_token.transfer(player, gi.registration_fee), \"Trophy King Arcade: Refund failed.\") */\n    tag_238:\n        /* \"contracts/Arcade.sol\":8667:8669  gi */\n      dup1\n        /* \"contracts/Arcade.sol\":8667:8686  gi.registration_fee */\n      0x03\n      add\n      sload\n        /* \"contracts/Arcade.sol\":8650:8652  gi */\n      dup2\n        /* \"contracts/Arcade.sol\":8650:8662  gi.total_fee */\n      0x06\n      add\n      0x00\n        /* \"contracts/Arcade.sol\":8650:8687  gi.total_fee -= (gi.registration_fee) */\n      dup3\n      dup3\n      sload\n      tag_241\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":8702:8716  gi.fee[player] */\n      dup4\n      and\n        /* \"contracts/Arcade.sol\":8719:8720  0 */\n      0x00\n        /* \"contracts/Arcade.sol\":8702:8716  gi.fee[player] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":8702:8708  gi.fee */\n      0x07\n      dup3\n      add\n        /* \"contracts/Arcade.sol\":8702:8716  gi.fee[player] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Arcade.sol\":8702:8720  gi.fee[player] = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":8734:8741  gi.paid */\n      0x08\n      dup5\n      add\n        /* \"contracts/Arcade.sol\":8734:8749  gi.paid[player] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Arcade.sol\":8734:8753  gi.paid[player] = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":8786:8787  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":8767:8782  gi.player_count */\n      dup1\n      dup4\n      add\n        /* \"contracts/Arcade.sol\":8767:8787  gi.player_count -= 1 */\n      dup1\n      sload\n        /* \"contracts/Arcade.sol\":8786:8787  1 */\n      swap2\n      swap3\n        /* \"contracts/Arcade.sol\":8767:8782  gi.player_count */\n      swap1\n      swap2\n        /* \"contracts/Arcade.sol\":8767:8787  gi.player_count -= 1 */\n      tag_243\n      swap1\n        /* \"contracts/Arcade.sol\":8786:8787  1 */\n      dup5\n      swap1\n        /* \"contracts/Arcade.sol\":8767:8787  gi.player_count -= 1 */\n      tag_242\n      jump\t// in\n    tag_243:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Arcade.sol\":8831:8850  gi.registration_fee */\n      0x03\n      dup2\n      add\n      sload\n        /* \"contracts/Arcade.sol\":8807:8851  Refund(game_id, player, gi.registration_fee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13073:13098   */\n      dup7\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13134:13166   */\n      dup7\n      and\n        /* \"#utility.yul\":13129:13131   */\n      0x20\n        /* \"#utility.yul\":13114:13132   */\n      dup3\n      add\n        /* \"#utility.yul\":13107:13167   */\n      mstore\n        /* \"#utility.yul\":13183:13201   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13176:13210   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/Arcade.sol\":8807:8851  Refund(game_id, player, gi.registration_fee) */\n      mload\n      0x21e12a7cad0da5928167e1084ea4d5fdf8d9af66657a2543a9ac76a0ca081477\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":13061:13063   */\n      0x60\n        /* \"contracts/Arcade.sol\":8807:8851  Refund(game_id, player, gi.registration_fee) */\n      add\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":8277:8862  if (gameData[game_id].exchange == false) {... */\n      pop\n        /* \"contracts/Arcade.sol\":8189:8868  function refund(uint256 game_id, address player) public onlyRole(GAME_MASTER) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_100:\n        /* \"contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/Arcade.sol\":9413:10424  function setWinner(uint256 game_id, address winner) public onlyRole(GAME_MASTER) {... */\n    tag_107:\n      0x00\n      dup1\n      mload\n      0x20\n      data_806db7640bcc104a4b7b53ebc0c09b63eefd92fe89197bc684d91aa66a17455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_248\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/Arcade.sol\":9508:9525  gameData[game_id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":9508:9516  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":9508:9525  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":9508:9534  gameData[game_id].exchange */\n      sload\n      0xff\n      and\n        /* \"contracts/Arcade.sol\":9504:10389  if (gameData[game_id].exchange == false) {... */\n      tag_250\n      jumpi\n        /* \"contracts/Arcade.sol\":9567:9584  gameData[game_id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":9567:9575  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":9567:9584  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":9567:9597  gameData[game_id].paid[winner] */\n      dup7\n      and\n      dup5\n      mstore\n        /* \"contracts/Arcade.sol\":9567:9589  gameData[game_id].paid */\n      0x08\n      add\n        /* \"contracts/Arcade.sol\":9567:9597  gameData[game_id].paid[winner] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":9601:9602  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":9567:9602  gameData[game_id].paid[winner] == 1 */\n      eq\n        /* \"contracts/Arcade.sol\":9559:9655  require(gameData[game_id].paid[winner] == 1, \"Trophy King Arcade: Not registered for this game\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9609:9611   */\n      0x20\n        /* \"contracts/Arcade.sol\":9559:9655  require(gameData[game_id].paid[winner] == 1, \"Trophy King Arcade: Not registered for this game\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9591:9612   */\n      mstore\n        /* \"#utility.yul\":9648:9650   */\n      0x30\n        /* \"#utility.yul\":9628:9646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9621:9651   */\n      mstore\n        /* \"#utility.yul\":9687:9721   */\n      0x54726f706879204b696e67204172636164653a204e6f74207265676973746572\n        /* \"#utility.yul\":9667:9685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9660:9722   */\n      mstore\n      shl(0x80, 0x656420666f7220746869732067616d65)\n        /* \"#utility.yul\":9738:9756   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9731:9777   */\n      mstore\n        /* \"#utility.yul\":9794:9813   */\n      0x84\n      add\n        /* \"contracts/Arcade.sol\":9559:9655  require(gameData[game_id].paid[winner] == 1, \"Trophy King Arcade: Not registered for this game\") */\n      tag_192\n        /* \"#utility.yul\":9581:9819   */\n      jump\n        /* \"contracts/Arcade.sol\":9559:9655  require(gameData[game_id].paid[winner] == 1, \"Trophy King Arcade: Not registered for this game\") */\n    tag_251:\n        /* \"contracts/Arcade.sol\":9822:9826  base */\n      0x05\n      dup1\n      sload\n        /* \"contracts/Arcade.sol\":9796:9810  fee_percentage */\n      sload(0x04)\n        /* \"contracts/Arcade.sol\":9670:9688  uint256 arcade_fee */\n      0x00\n        /* \"contracts/Arcade.sol\":9745:9762  gameData[game_id] */\n      dup7\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":9745:9753  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":9745:9762  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Arcade.sol\":9745:9775  gameData[game_id].arcade_token */\n      swap1\n      swap6\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Arcade.sol\":9723:9777  acceptedArcadeTokens[(gameData[game_id].arcade_token)] */\n      dup3\n      mstore\n        /* \"contracts/Arcade.sol\":9723:9743  acceptedArcadeTokens */\n      0x01\n        /* \"contracts/Arcade.sol\":9723:9777  acceptedArcadeTokens[(gameData[game_id].arcade_token)] */\n      swap1\n      dup2\n      swap1\n      mstore\n      swap4\n      dup2\n      keccak256\n        /* \"contracts/Arcade.sol\":9723:9793  acceptedArcadeTokens[(gameData[game_id].arcade_token)].redemption_rate */\n      swap1\n      swap4\n      add\n      sload\n        /* \"contracts/Arcade.sol\":9822:9826  base */\n      dup3\n      swap2\n        /* \"contracts/Arcade.sol\":9723:9810  acceptedArcadeTokens[(gameData[game_id].arcade_token)].redemption_rate + fee_percentage */\n      tag_254\n      swap2\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"contracts/Arcade.sol\":9692:9709  gameData[game_id] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":9692:9700  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":9692:9709  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":9692:9719  gameData[game_id].total_fee */\n      0x06\n      add\n      sload\n        /* \"contracts/Arcade.sol\":9692:9811  gameData[game_id].total_fee * (acceptedArcadeTokens[(gameData[game_id].arcade_token)].redemption_rate + fee_percentage) */\n      tag_256\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n        /* \"contracts/Arcade.sol\":9691:9819  (gameData[game_id].total_fee * (acceptedArcadeTokens[(gameData[game_id].arcade_token)].redemption_rate + fee_percentage)) / base */\n      tag_258\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"contracts/Arcade.sol\":9691:9826  (gameData[game_id].total_fee * (acceptedArcadeTokens[(gameData[game_id].arcade_token)].redemption_rate + fee_percentage)) / base / base */\n      tag_260\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_260:\n        /* \"contracts/Arcade.sol\":9840:9854  uint256 payout */\n      0x00\n        /* \"contracts/Arcade.sol\":9857:9874  gameData[game_id] */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":9857:9865  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":9857:9874  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Arcade.sol\":9857:9884  gameData[game_id].total_fee */\n      0x06\n      add\n      sload\n        /* \"contracts/Arcade.sol\":9670:9826  uint256 arcade_fee = (gameData[game_id].total_fee * (acceptedArcadeTokens[(gameData[game_id].arcade_token)].redemption_rate + fee_percentage)) / base / base */\n      swap2\n      swap3\n      pop\n        /* \"contracts/Arcade.sol\":9840:9854  uint256 payout */\n      swap1\n        /* \"contracts/Arcade.sol\":9857:9900  gameData[game_id].total_fee.sub(arcade_fee) */\n      tag_261\n      swap1\n        /* \"contracts/Arcade.sol\":9670:9826  uint256 arcade_fee = (gameData[game_id].total_fee * (acceptedArcadeTokens[(gameData[game_id].arcade_token)].redemption_rate + fee_percentage)) / base / base */\n      dup4\n        /* \"contracts/Arcade.sol\":9857:9888  gameData[game_id].total_fee.sub */\n      tag_262\n        /* \"contracts/Arcade.sol\":9857:9900  gameData[game_id].total_fee.sub(arcade_fee) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/Arcade.sol\":9914:9938  uint256 contract_balance */\n      0x00\n        /* \"contracts/Arcade.sol\":9963:9980  gameData[game_id] */\n      dup7\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":9963:9971  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":9963:9980  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Arcade.sol\":9963:9993  gameData[game_id].arcade_token */\n      0x05\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Arcade.sol\":9941:9995  acceptedArcadeTokens[(gameData[game_id].arcade_token)] */\n      dup5\n      mstore\n        /* \"contracts/Arcade.sol\":9941:9961  acceptedArcadeTokens */\n      0x01\n        /* \"contracts/Arcade.sol\":9941:9995  acceptedArcadeTokens[(gameData[game_id].arcade_token)] */\n      swap1\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Arcade.sol\":9941:10008  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token */\n      sload\n        /* \"contracts/Arcade.sol\":9941:10033  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.balanceOf(address(this)) */\n      swap1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":10027:10031  this */\n      address\n        /* \"contracts/Arcade.sol\":9941:10033  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3962:4013   */\n      mstore\n        /* \"contracts/Arcade.sol\":9840:9900  uint256 payout = gameData[game_id].total_fee.sub(arcade_fee) */\n      swap4\n      swap5\n      pop\n        /* \"contracts/Arcade.sol\":9914:9938  uint256 contract_balance */\n      swap2\n      swap3\n        /* \"contracts/Arcade.sol\":9941:10008  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token */\n      swap2\n      and\n      swap1\n        /* \"contracts/Arcade.sol\":9941:10018  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3935:3953   */\n      0x24\n      add\n        /* \"contracts/Arcade.sol\":9941:10033  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_264\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_264:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_266\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_266:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_267\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_267:\n        /* \"contracts/Arcade.sol\":9914:10033  uint256 contract_balance = acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Arcade.sol\":10071:10077  payout */\n      dup2\n        /* \"contracts/Arcade.sol\":10052:10068  contract_balance */\n      dup2\n        /* \"contracts/Arcade.sol\":10052:10077  contract_balance < payout */\n      lt\n        /* \"contracts/Arcade.sol\":10048:10137  if (contract_balance < payout) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"contracts/Arcade.sol\":10106:10122  contract_balance */\n      dup1\n        /* \"contracts/Arcade.sol\":10097:10122  payout = contract_balance */\n      swap2\n      pop\n        /* \"contracts/Arcade.sol\":10048:10137  if (contract_balance < payout) {... */\n    tag_268:\n        /* \"contracts/Arcade.sol\":10159:10213  acceptedArcadeTokens[(gameData[game_id].arcade_token)] */\n      0x00\n        /* \"contracts/Arcade.sol\":10181:10198  gameData[game_id] */\n      dup7\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":10181:10189  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":10181:10198  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Arcade.sol\":10181:10211  gameData[game_id].arcade_token */\n      0x05\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Arcade.sol\":10159:10213  acceptedArcadeTokens[(gameData[game_id].arcade_token)] */\n      dup5\n      mstore\n        /* \"contracts/Arcade.sol\":10159:10179  acceptedArcadeTokens */\n      0x01\n        /* \"contracts/Arcade.sol\":10159:10213  acceptedArcadeTokens[(gameData[game_id].arcade_token)] */\n      swap1\n      swap3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":10159:10226  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token */\n      sload\n        /* \"contracts/Arcade.sol\":10159:10251  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transfer(winner, payout) */\n      swap2\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"#utility.yul\":4681:4713   */\n      dup8\n      dup3\n      and\n        /* \"contracts/Arcade.sol\":10159:10251  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transfer(winner, payout) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4663:4714   */\n      mstore\n        /* \"#utility.yul\":4730:4748   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4723:4757   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Arcade.sol\":10159:10226  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token */\n      swap2\n      and\n      swap1\n        /* \"contracts/Arcade.sol\":10159:10235  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4636:4654   */\n      0x44\n      add\n        /* \"contracts/Arcade.sol\":10159:10251  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transfer(winner, payout) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_270:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_272\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_272:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_273\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_273:\n        /* \"contracts/Arcade.sol\":10151:10290  require(acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transfer(winner, payout), \"Trophy King Arcade: Payout failed.\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9206:9208   */\n      0x20\n        /* \"contracts/Arcade.sol\":10151:10290  require(acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transfer(winner, payout), \"Trophy King Arcade: Payout failed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9188:9209   */\n      mstore\n        /* \"#utility.yul\":9245:9247   */\n      0x22\n        /* \"#utility.yul\":9225:9243   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9218:9248   */\n      mstore\n        /* \"#utility.yul\":9284:9318   */\n      0x54726f706879204b696e67204172636164653a205061796f7574206661696c65\n        /* \"#utility.yul\":9264:9282   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9257:9319   */\n      mstore\n      shl(0xf1, 0x3217)\n        /* \"#utility.yul\":9335:9353   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9328:9360   */\n      mstore\n        /* \"#utility.yul\":9377:9396   */\n      0x84\n      add\n        /* \"contracts/Arcade.sol\":10151:10290  require(acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transfer(winner, payout), \"Trophy King Arcade: Payout failed.\") */\n      tag_192\n        /* \"#utility.yul\":9178:9402   */\n      jump\n        /* \"contracts/Arcade.sol\":10151:10290  require(acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transfer(winner, payout), \"Trophy King Arcade: Payout failed.\") */\n    tag_274:\n        /* \"contracts/Arcade.sol\":10314:10331  gameData[game_id] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":10314:10322  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":10314:10331  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":10314:10343  gameData[game_id].fee[winner] */\n      dup10\n      and\n      dup5\n      mstore\n        /* \"contracts/Arcade.sol\":10314:10335  gameData[game_id].fee */\n      0x07\n      add\n        /* \"contracts/Arcade.sol\":10314:10343  gameData[game_id].fee[winner] */\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":10310:10344  Fee(gameData[game_id].fee[winner]) */\n      swap2\n      mload\n        /* \"#utility.yul\":6656:6681   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/Arcade.sol\":10310:10344  Fee(gameData[game_id].fee[winner]) */\n      0x557809284da7314475b1582804ae28e5f1349efc1fe970ea25d50fce75eb4f43\n      swap2\n        /* \"#utility.yul\":6629:6647   */\n      add\n        /* \"contracts/Arcade.sol\":10310:10344  Fee(gameData[game_id].fee[winner]) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":10364:10378  Payout(payout) */\n      mload(0x40)\n        /* \"#utility.yul\":6656:6681   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":10364:10378  Payout(payout) */\n      0x22427047e1a674a9aff59700a2c8d00ea96e017ddf9236690bdedf1f21f28d9d\n      swap1\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6629:6647   */\n      add\n        /* \"contracts/Arcade.sol\":10364:10378  Payout(payout) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":9504:10389  if (gameData[game_id].exchange == false) {... */\n      pop\n      pop\n      pop\n    tag_250:\n        /* \"contracts/Arcade.sol\":10399:10417  closeGame(game_id) */\n      tag_191\n        /* \"contracts/Arcade.sol\":10409:10416  game_id */\n      dup4\n        /* \"contracts/Arcade.sol\":10399:10408  closeGame */\n      tag_76\n        /* \"contracts/Arcade.sol\":10399:10417  closeGame(game_id) */\n      jump\t// in\n        /* \"contracts/Arcade.sol\":6908:7052  function leaveMatch(uint256 game_id) public {... */\n    tag_115:\n        /* \"contracts/Arcade.sol\":7002:7003  0 */\n      0x00\n        /* \"contracts/Arcade.sol\":6962:6979  gameData[game_id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":6962:6970  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":6962:6979  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Arcade.sol\":6962:6999  gameData[game_id].seats[_msgSender()] */\n      dup1\n      dup6\n      mstore\n        /* \"contracts/Arcade.sol\":6962:6985  gameData[game_id].seats */\n      0x09\n      swap1\n      swap2\n      add\n        /* \"contracts/Arcade.sol\":6962:6999  gameData[game_id].seats[_msgSender()] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/Arcade.sol\":6962:7003  gameData[game_id].seats[_msgSender()] = 0 */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Arcade.sol\":7019:7045  RemovePlayer(_msgSender()) */\n      dup1\n      mload\n        /* \"#utility.yul\":3962:4013   */\n      swap3\n      dup4\n      mstore\n        /* \"contracts/Arcade.sol\":7019:7045  RemovePlayer(_msgSender()) */\n      mload\n      0x34aeefd5030be05fe70eebc8866d82f935a308eb9f334cba88f5e3bea1a0cae8\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":6908:7052  function leaveMatch(uint256 game_id) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":7511:7917  function placePlayer(uint256 game_id, address player) public onlyRole(GAME_MASTER) returns (bool) {... */\n    tag_126:\n        /* \"contracts/Arcade.sol\":7603:7607  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_806db7640bcc104a4b7b53ebc0c09b63eefd92fe89197bc684d91aa66a17455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_286\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/Arcade.sol\":7623:7640  gameData[game_id] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":7623:7631  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":7623:7640  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":7623:7654  gameData[game_id].seats[player] */\n      dup8\n      and\n      dup5\n      mstore\n        /* \"contracts/Arcade.sol\":7623:7646  gameData[game_id].seats */\n      0x09\n      add\n        /* \"contracts/Arcade.sol\":7623:7654  gameData[game_id].seats[player] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":7658:7659  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":7623:7659  gameData[game_id].seats[player] != 1 */\n      eq\n        /* \"contracts/Arcade.sol\":7619:7911  if (gameData[game_id].seats[player] != 1) {... */\n      tag_288\n      jumpi\n        /* \"contracts/Arcade.sol\":7675:7692  gameData[game_id] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":7675:7683  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":7675:7692  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":7675:7706  gameData[game_id].seats[player] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n        /* \"contracts/Arcade.sol\":7675:7698  gameData[game_id].seats */\n      0x09\n      swap1\n      swap2\n      add\n        /* \"contracts/Arcade.sol\":7675:7706  gameData[game_id].seats[player] */\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":7709:7710  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":7675:7710  gameData[game_id].seats[player] = 1 */\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":7742:7776  PlacePlayer(player, game_id, true) */\n      dup2\n      mload\n        /* \"#utility.yul\":5243:5294   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":5310:5328   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":5303:5337   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":5353:5371   */\n      dup3\n      add\n        /* \"#utility.yul\":5346:5396   */\n      mstore\n        /* \"contracts/Arcade.sol\":7742:7776  PlacePlayer(player, game_id, true) */\n      0x5621c8071929c7265ce41857be957499346fcbd5c32e82130f48e0907449d1e6\n      swap1\n        /* \"#utility.yul\":5231:5233   */\n      0x60\n        /* \"#utility.yul\":5216:5234   */\n      add\n        /* \"contracts/Arcade.sol\":7742:7776  PlacePlayer(player, game_id, true) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":7798:7802  true */\n      0x01\n        /* \"contracts/Arcade.sol\":7791:7802  return true */\n      swap2\n      pop\n      jump(tag_291)\n        /* \"contracts/Arcade.sol\":7619:7911  if (gameData[game_id].seats[player] != 1) {... */\n    tag_288:\n        /* \"contracts/Arcade.sol\":7838:7873  PlacePlayer(player, game_id, false) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5261:5293   */\n      dup6\n      and\n        /* \"#utility.yul\":5243:5294   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5325:5327   */\n      0x20\n        /* \"#utility.yul\":5310:5328   */\n      dup2\n      add\n        /* \"#utility.yul\":5303:5337   */\n      dup7\n      swap1\n      mstore\n      0x00\n        /* \"#utility.yul\":5353:5371   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":5346:5396   */\n      mstore\n        /* \"contracts/Arcade.sol\":7838:7873  PlacePlayer(player, game_id, false) */\n      swap1\n      mload\n      0x5621c8071929c7265ce41857be957499346fcbd5c32e82130f48e0907449d1e6\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":5231:5233   */\n      0x60\n        /* \"contracts/Arcade.sol\":7838:7873  PlacePlayer(player, game_id, false) */\n      add\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":7895:7900  false */\n      0x00\n        /* \"contracts/Arcade.sol\":7888:7900  return false */\n      swap2\n      pop\n        /* \"contracts/Arcade.sol\":7619:7911  if (gameData[game_id].seats[player] != 1) {... */\n    tag_291:\n        /* \"contracts/Arcade.sol\":7511:7917  function placePlayer(uint256 game_id, address player) public onlyRole(GAME_MASTER) returns (bool) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":5149:5296  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_141:\n        /* \"contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_295\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      tag_191\n        /* \"contracts/access/AccessControl.sol\":5275:5279  role */\n      dup4\n        /* \"contracts/access/AccessControl.sol\":5281:5288  account */\n      dup4\n        /* \"contracts/access/AccessControl.sol\":5263:5274  _revokeRole */\n      tag_222\n        /* \"contracts/access/AccessControl.sol\":5263:5289  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/Arcade.sol\":2512:3357  function register(uint256 game_id) public {... */\n    tag_148:\n        /* \"contracts/Arcade.sol\":2572:2589  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2572:2580  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":2572:2589  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Arcade.sol\":2596:2606  msg.sender */\n      caller\n        /* \"contracts/Arcade.sol\":2572:2607  gameData[game_id].seats[msg.sender] */\n      dup5\n      mstore\n        /* \"contracts/Arcade.sol\":2572:2595  gameData[game_id].seats */\n      0x09\n      add\n        /* \"contracts/Arcade.sol\":2572:2607  gameData[game_id].seats[msg.sender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":2611:2612  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":2572:2612  gameData[game_id].seats[msg.sender] == 1 */\n      eq\n        /* \"contracts/Arcade.sol\":2564:2650  require(gameData[game_id].seats[msg.sender] == 1, \"Trophy King Arcade: Unauthorized.\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11252:11254   */\n      0x20\n        /* \"contracts/Arcade.sol\":2564:2650  require(gameData[game_id].seats[msg.sender] == 1, \"Trophy King Arcade: Unauthorized.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11234:11255   */\n      mstore\n        /* \"#utility.yul\":11291:11293   */\n      0x21\n        /* \"#utility.yul\":11271:11289   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11264:11294   */\n      mstore\n        /* \"#utility.yul\":11330:11364   */\n      0x54726f706879204b696e67204172636164653a20556e617574686f72697a6564\n        /* \"#utility.yul\":11310:11328   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11303:11365   */\n      mstore\n      shl(0xf9, 0x17)\n        /* \"#utility.yul\":11381:11399   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11374:11405   */\n      mstore\n        /* \"#utility.yul\":11422:11441   */\n      0x84\n      add\n        /* \"contracts/Arcade.sol\":2564:2650  require(gameData[game_id].seats[msg.sender] == 1, \"Trophy King Arcade: Unauthorized.\") */\n      tag_192\n        /* \"#utility.yul\":11224:11447   */\n      jump\n        /* \"contracts/Arcade.sol\":2564:2650  require(gameData[game_id].seats[msg.sender] == 1, \"Trophy King Arcade: Unauthorized.\") */\n    tag_300:\n        /* \"contracts/Arcade.sol\":2668:2685  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2668:2676  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":2668:2685  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":2668:2692  gameData[game_id].status */\n      0x04\n      add\n      sload\n        /* \"contracts/Arcade.sol\":2696:2697  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":2668:2697  gameData[game_id].status == 1 */\n      eq\n        /* \"contracts/Arcade.sol\":2660:2734  require(gameData[game_id].status == 1, \"Trophy King Arcade: Game closed.\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8018:8020   */\n      0x20\n        /* \"contracts/Arcade.sol\":2660:2734  require(gameData[game_id].status == 1, \"Trophy King Arcade: Game closed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8000:8021   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8037:8055   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8030:8060   */\n      mstore\n        /* \"#utility.yul\":8096:8130   */\n      0x54726f706879204b696e67204172636164653a2047616d6520636c6f7365642e\n        /* \"#utility.yul\":8076:8094   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8069:8131   */\n      mstore\n        /* \"#utility.yul\":8148:8166   */\n      0x64\n      add\n        /* \"contracts/Arcade.sol\":2660:2734  require(gameData[game_id].status == 1, \"Trophy King Arcade: Game closed.\") */\n      tag_192\n        /* \"#utility.yul\":7990:8172   */\n      jump\n        /* \"contracts/Arcade.sol\":2660:2734  require(gameData[game_id].status == 1, \"Trophy King Arcade: Game closed.\") */\n    tag_303:\n        /* \"contracts/Arcade.sol\":2785:2802  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2785:2793  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":2785:2802  gameData[game_id] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Arcade.sol\":2785:2815  gameData[game_id].player_count */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/Arcade.sol\":2752:2782  gameData[game_id].player_limit */\n      swap2\n      add\n      sload\n        /* \"contracts/Arcade.sol\":2752:2815  gameData[game_id].player_limit > gameData[game_id].player_count */\n      gt\n        /* \"contracts/Arcade.sol\":2744:2862  require(gameData[game_id].player_limit > gameData[game_id].player_count, \"Trophy King Arcade: Game full.  Try again.\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10026:10028   */\n      0x20\n        /* \"contracts/Arcade.sol\":2744:2862  require(gameData[game_id].player_limit > gameData[game_id].player_count, \"Trophy King Arcade: Game full.  Try again.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10008:10029   */\n      mstore\n        /* \"#utility.yul\":10065:10067   */\n      0x2a\n        /* \"#utility.yul\":10045:10063   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10038:10068   */\n      mstore\n        /* \"#utility.yul\":10104:10138   */\n      0x54726f706879204b696e67204172636164653a2047616d652066756c6c2e2020\n        /* \"#utility.yul\":10084:10102   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10077:10139   */\n      mstore\n      shl(0xb1, 0x2a393c9030b3b0b4b717)\n        /* \"#utility.yul\":10155:10173   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10148:10188   */\n      mstore\n        /* \"#utility.yul\":10205:10224   */\n      0x84\n      add\n        /* \"contracts/Arcade.sol\":2744:2862  require(gameData[game_id].player_limit > gameData[game_id].player_count, \"Trophy King Arcade: Game full.  Try again.\") */\n      tag_192\n        /* \"#utility.yul\":9998:10230   */\n      jump\n        /* \"contracts/Arcade.sol\":2744:2862  require(gameData[game_id].player_limit > gameData[game_id].player_count, \"Trophy King Arcade: Game full.  Try again.\") */\n    tag_306:\n        /* \"contracts/Arcade.sol\":2880:2897  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2880:2888  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":2880:2897  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Arcade.sol\":2903:2913  msg.sender */\n      caller\n        /* \"contracts/Arcade.sol\":2880:2914  gameData[game_id].paid[msg.sender] */\n      dup5\n      mstore\n        /* \"contracts/Arcade.sol\":2880:2902  gameData[game_id].paid */\n      0x08\n      add\n        /* \"contracts/Arcade.sol\":2880:2914  gameData[game_id].paid[msg.sender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":2880:2919  gameData[game_id].paid[msg.sender] == 0 */\n      iszero\n        /* \"contracts/Arcade.sol\":2872:2963  require(gameData[game_id].paid[msg.sender] == 0, \"Trophy King Arcade: Already registered.\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8379:8381   */\n      0x20\n        /* \"contracts/Arcade.sol\":2872:2963  require(gameData[game_id].paid[msg.sender] == 0, \"Trophy King Arcade: Already registered.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8361:8382   */\n      mstore\n        /* \"#utility.yul\":8418:8420   */\n      0x27\n        /* \"#utility.yul\":8398:8416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8391:8421   */\n      mstore\n        /* \"#utility.yul\":8457:8491   */\n      0x54726f706879204b696e67204172636164653a20416c72656164792072656769\n        /* \"#utility.yul\":8437:8455   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8430:8492   */\n      mstore\n      shl(0xc9, 0x39ba32b932b217)\n        /* \"#utility.yul\":8508:8526   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8501:8538   */\n      mstore\n        /* \"#utility.yul\":8555:8574   */\n      0x84\n      add\n        /* \"contracts/Arcade.sol\":2872:2963  require(gameData[game_id].paid[msg.sender] == 0, \"Trophy King Arcade: Already registered.\") */\n      tag_192\n        /* \"#utility.yul\":8351:8580   */\n      jump\n        /* \"contracts/Arcade.sol\":2872:2963  require(gameData[game_id].paid[msg.sender] == 0, \"Trophy King Arcade: Already registered.\") */\n    tag_309:\n        /* \"contracts/Arcade.sol\":3014:3015  0 */\n      0x00\n        /* \"contracts/Arcade.sol\":2981:2998  gameData[game_id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2981:2989  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":2981:2998  gameData[game_id] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Arcade.sol\":2981:3011  gameData[game_id].player_limit */\n      add\n      sload\n        /* \"contracts/Arcade.sol\":2973:3055  require(gameData[game_id].player_limit > 0, \"Trophy King Arcade: Game not found.\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10437:10439   */\n      0x20\n        /* \"contracts/Arcade.sol\":2973:3055  require(gameData[game_id].player_limit > 0, \"Trophy King Arcade: Game not found.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10419:10440   */\n      mstore\n        /* \"#utility.yul\":10476:10478   */\n      0x23\n        /* \"#utility.yul\":10456:10474   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10449:10479   */\n      mstore\n        /* \"#utility.yul\":10515:10549   */\n      0x54726f706879204b696e67204172636164653a2047616d65206e6f7420666f75\n        /* \"#utility.yul\":10495:10513   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10488:10550   */\n      mstore\n      shl(0xe9, 0x373217)\n        /* \"#utility.yul\":10566:10584   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10559:10592   */\n      mstore\n        /* \"#utility.yul\":10609:10628   */\n      0x84\n      add\n        /* \"contracts/Arcade.sol\":2973:3055  require(gameData[game_id].player_limit > 0, \"Trophy King Arcade: Game not found.\") */\n      tag_192\n        /* \"#utility.yul\":10409:10634   */\n      jump\n        /* \"contracts/Arcade.sol\":2973:3055  require(gameData[game_id].player_limit > 0, \"Trophy King Arcade: Game not found.\") */\n    tag_312:\n        /* \"contracts/Arcade.sol\":3073:3127  acceptedArcadeTokens[(gameData[game_id].arcade_token)] */\n      0x00\n        /* \"contracts/Arcade.sol\":3095:3112  gameData[game_id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3095:3103  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":3095:3112  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Arcade.sol\":3095:3125  gameData[game_id].arcade_token */\n      0x05\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Arcade.sol\":3073:3127  acceptedArcadeTokens[(gameData[game_id].arcade_token)] */\n      dup5\n      mstore\n        /* \"contracts/Arcade.sol\":3073:3093  acceptedArcadeTokens */\n      0x01\n        /* \"contracts/Arcade.sol\":3073:3127  acceptedArcadeTokens[(gameData[game_id].arcade_token)] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Arcade.sol\":3073:3140  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token */\n      sload\n      and\n        /* \"contracts/Arcade.sol\":3073:3153  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transferFrom */\n      0x23b872dd\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/Arcade.sol\":3183:3200  gameData[game_id] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3183:3191  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":3183:3200  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":3183:3217  gameData[game_id].registration_fee */\n      0x03\n      add\n      sload\n        /* \"contracts/Arcade.sol\":3073:3218  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transferFrom(_msgSender(), address(this), gameData[game_id].registration_fee) */\n      swap1\n      mload\n      0xe0\n      dup5\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4282:4297   */\n      swap1\n      swap3\n      and\n        /* \"contracts/Arcade.sol\":3073:3218  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transferFrom(_msgSender(), address(this), gameData[game_id].registration_fee) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4264:4298   */\n      mstore\n        /* \"contracts/Arcade.sol\":3176:3180  this */\n      address\n        /* \"#utility.yul\":4314:4332   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4307:4350   */\n      mstore\n        /* \"#utility.yul\":4366:4384   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4359:4393   */\n      mstore\n        /* \"#utility.yul\":4199:4217   */\n      0x64\n      add\n        /* \"contracts/Arcade.sol\":3073:3218  acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transferFrom(_msgSender(), address(this), gameData[game_id].registration_fee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_318\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_318:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_320\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_320:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_321\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_321:\n        /* \"contracts/Arcade.sol\":3065:3273  require(acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transferFrom(_msgSender(), address(this), gameData[game_id].registration_fee), \"Trophy King Arcade: Must approve registration fee.\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8787:8789   */\n      0x20\n        /* \"contracts/Arcade.sol\":3065:3273  require(acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transferFrom(_msgSender(), address(this), gameData[game_id].registration_fee), \"Trophy King Arcade: Must approve registration fee.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8769:8790   */\n      mstore\n        /* \"#utility.yul\":8826:8828   */\n      0x32\n        /* \"#utility.yul\":8806:8824   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8799:8829   */\n      mstore\n        /* \"#utility.yul\":8865:8899   */\n      0x54726f706879204b696e67204172636164653a204d75737420617070726f7665\n        /* \"#utility.yul\":8845:8863   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8838:8900   */\n      mstore\n      shl(0x71, 0x103932b3b4b9ba3930ba34b7b7103332b297)\n        /* \"#utility.yul\":8916:8934   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8909:8957   */\n      mstore\n        /* \"#utility.yul\":8974:8993   */\n      0x84\n      add\n        /* \"contracts/Arcade.sol\":3065:3273  require(acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transferFrom(_msgSender(), address(this), gameData[game_id].registration_fee), \"Trophy King Arcade: Must approve registration fee.\") */\n      tag_192\n        /* \"#utility.yul\":8759:8999   */\n      jump\n        /* \"contracts/Arcade.sol\":3065:3273  require(acceptedArcadeTokens[(gameData[game_id].arcade_token)].native_token.transferFrom(_msgSender(), address(this), gameData[game_id].registration_fee), \"Trophy King Arcade: Must approve registration fee.\") */\n    tag_322:\n        /* \"contracts/Arcade.sol\":3315:3332  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3315:3323  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":3315:3332  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":3315:3349  gameData[game_id].registration_fee */\n      0x03\n      add\n      sload\n        /* \"contracts/Arcade.sol\":3284:3350  _register(game_id, msg.sender, gameData[game_id].registration_fee) */\n      tag_325\n      swap1\n        /* \"contracts/Arcade.sol\":3294:3301  game_id */\n      dup3\n      swap1\n        /* \"contracts/Arcade.sol\":3303:3313  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Arcade.sol\":3284:3293  _register */\n      tag_326\n        /* \"contracts/Arcade.sol\":3284:3350  _register(game_id, msg.sender, gameData[game_id].registration_fee) */\n      jump\t// in\n    tag_325:\n        /* \"contracts/Arcade.sol\":2512:3357  function register(uint256 game_id) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":5987:6523  function createGame(uint256 game_id, uint256 registration_fee, address arcade_token, uint256 player_limit, bool exchange) public onlyRole(GAME_MASTER) {... */\n    tag_152:\n      0x00\n      dup1\n      mload\n      0x20\n      data_806db7640bcc104a4b7b53ebc0c09b63eefd92fe89197bc684d91aa66a17455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_328\n        /* \"contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_155\n        /* \"contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_328:\n        /* \"contracts/Arcade.sol\":6148:6165  gameData[game_id] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":6148:6156  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":6148:6165  gameData[game_id] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Arcade.sol\":6175:6176  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":6148:6172  gameData[game_id].status */\n      0x04\n      dup3\n      add\n        /* \"contracts/Arcade.sol\":6148:6176  gameData[game_id].status = 1 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":6186:6213  gameData[game_id].total_fee */\n      0x06\n      dup3\n      add\n        /* \"contracts/Arcade.sol\":6186:6217  gameData[game_id].total_fee = 0 */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":6227:6261  gameData[game_id].registration_fee */\n      0x03\n      dup3\n      add\n        /* \"contracts/Arcade.sol\":6227:6280  gameData[game_id].registration_fee = registration_fee */\n      dup12\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":6290:6320  gameData[game_id].arcade_token */\n      0x05\n      dup3\n      add\n        /* \"contracts/Arcade.sol\":6290:6335  gameData[game_id].arcade_token = arcade_token */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup13\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":6345:6375  gameData[game_id].player_count */\n      dup2\n      add\n        /* \"contracts/Arcade.sol\":6345:6379  gameData[game_id].player_count = 0 */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Arcade.sol\":6389:6419  gameData[game_id].player_limit */\n      swap2\n      dup4\n      add\n        /* \"contracts/Arcade.sol\":6389:6434  gameData[game_id].player_limit = player_limit */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":6444:6481  gameData[game_id].exchange = exchange */\n      dup3\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Arcade.sol\":6497:6516  CreateGame(game_id) */\n      mload\n        /* \"#utility.yul\":6656:6681   */\n      dup8\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":6497:6516  CreateGame(game_id) */\n      0x9e5237c6a8bb45df74799cf138ebda4fed0574bed906da41387acdc4a3cbe3d8\n      swap2\n        /* \"#utility.yul\":6629:6647   */\n      add\n        /* \"contracts/Arcade.sol\":6497:6516  CreateGame(game_id) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":5987:6523  function createGame(uint256 game_id, uint256 registration_fee, address arcade_token, uint256 player_limit, bool exchange) public onlyRole(GAME_MASTER) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_155:\n        /* \"contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_325\n        /* \"contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_334\n        /* \"contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_215:\n        /* \"contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      tag_338\n        /* \"contracts/access/AccessControl.sol\":7335:7339  role */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":7341:7348  account */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":7327:7334  hasRole */\n      tag_100\n        /* \"contracts/access/AccessControl.sol\":7327:7349  hasRole(role, account) */\n      jump\t// in\n    tag_338:\n        /* \"contracts/access/AccessControl.sol\":7322:7471  if (!hasRole(role, account)) {... */\n      tag_221\n      jumpi\n        /* \"contracts/access/AccessControl.sol\":7365:7371  _roles */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":7365:7377  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/AccessControl.sol\":7365:7394  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/access/AccessControl.sol\":7397:7401  true */\n      0x01\n        /* \"contracts/access/AccessControl.sol\":7365:7401  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\n      tag_340\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/access/AccessControl.sol\":7447:7459  _msgSender() */\n    tag_340:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"contracts/access/AccessControl.sol\":7438:7445  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"contracts/access/AccessControl.sol\":7432:7436  role */\n      dup4\n        /* \"contracts/access/AccessControl.sol\":7420:7460  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/access/AccessControl.sol\":7244:7477  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_222:\n        /* \"contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      tag_342\n        /* \"contracts/access/AccessControl.sol\":7693:7697  role */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":7699:7706  account */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":7685:7692  hasRole */\n      tag_100\n        /* \"contracts/access/AccessControl.sol\":7685:7707  hasRole(role, account) */\n      jump\t// in\n    tag_342:\n        /* \"contracts/access/AccessControl.sol\":7681:7830  if (hasRole(role, account)) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/access/AccessControl.sol\":7755:7760  false */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/AccessControl.sol\":7723:7752  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":7723:7760  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap3\n        /* \"contracts/access/AccessControl.sol\":7723:7735  _roles[role] */\n      dup6\n      swap2\n        /* \"contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"contracts/access/AccessControl.sol\":7755:7760  false */\n      swap1\n        /* \"contracts/access/AccessControl.sol\":7779:7819  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"contracts/access/AccessControl.sol\":7602:7836  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_262:\n        /* \"contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_346\n        /* \"contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_242\n      jump\t// in\n    tag_346:\n        /* \"contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap4\n        /* \"contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":10489:10824  function _register(uint256 game_id, address player_address, uint256 amount) internal {... */\n    tag_326:\n        /* \"contracts/Arcade.sol\":10584:10603  GameInfo storage gi */\n      0x00\n        /* \"contracts/Arcade.sol\":10606:10623  gameData[game_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":10606:10614  gameData */\n      0x02\n        /* \"contracts/Arcade.sol\":10606:10623  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Arcade.sol\":10653:10654  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":10634:10649  gi.player_count */\n      dup1\n      dup3\n      add\n        /* \"contracts/Arcade.sol\":10634:10654  gi.player_count += 1 */\n      dup1\n      sload\n        /* \"contracts/Arcade.sol\":10606:10623  gameData[game_id] */\n      swap3\n      swap4\n        /* \"contracts/Arcade.sol\":10653:10654  1 */\n      swap2\n      swap3\n        /* \"contracts/Arcade.sol\":10634:10649  gi.player_count */\n      swap1\n      swap2\n        /* \"contracts/Arcade.sol\":10584:10603  GameInfo storage gi */\n      swap1\n        /* \"contracts/Arcade.sol\":10634:10654  gi.player_count += 1 */\n      tag_348\n      swap1\n        /* \"contracts/Arcade.sol\":10653:10654  1 */\n      dup5\n      swap1\n        /* \"contracts/Arcade.sol\":10634:10654  gi.player_count += 1 */\n      tag_255\n      jump\t// in\n    tag_348:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":10664:10686  gi.fee[player_address] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":10664:10670  gi.fee */\n      0x07\n      dup3\n      add\n        /* \"contracts/Arcade.sol\":10664:10686  gi.fee[player_address] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Arcade.sol\":10664:10695  gi.fee[player_address] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":10705:10712  gi.paid */\n      0x08\n      dup5\n      add\n        /* \"contracts/Arcade.sol\":10705:10728  gi.paid[player_address] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Arcade.sol\":10731:10732  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":10705:10732  gi.paid[player_address] = 1 */\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":10742:10754  gi.total_fee */\n      0x06\n      dup3\n      add\n        /* \"contracts/Arcade.sol\":10742:10764  gi.total_fee += amount */\n      dup1\n      sload\n        /* \"contracts/Arcade.sol\":10689:10695  amount */\n      dup5\n      swap3\n        /* \"contracts/Arcade.sol\":10664:10686  gi.fee[player_address] */\n      swap1\n        /* \"contracts/Arcade.sol\":10742:10764  gi.total_fee += amount */\n      tag_349\n      swap1\n        /* \"contracts/Arcade.sol\":10689:10695  amount */\n      dup5\n      swap1\n        /* \"contracts/Arcade.sol\":10742:10764  gi.total_fee += amount */\n      tag_255\n      jump\t// in\n    tag_349:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Arcade.sol\":10788:10817  Register(msg.sender, game_id) */\n      mload(0x40)\n        /* \"#utility.yul\":6656:6681   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":10797:10807  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Arcade.sol\":10788:10817  Register(msg.sender, game_id) */\n      0x7dc6ab80cc84c043b7b8d4fcafc802187470087f7ea7fccd2e17aecd0256a1\n      swap1\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6629:6647   */\n      add\n        /* \"contracts/Arcade.sol\":10788:10817  Register(msg.sender, game_id) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Arcade.sol\":10489:10824  function _register(uint256 game_id, address player_address, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_334:\n        /* \"contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_352\n        /* \"contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_100\n        /* \"contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_352:\n        /* \"contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n      tag_221\n      jumpi\n        /* \"contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      tag_354\n        /* \"contracts/access/AccessControl.sol\":4017:4024  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      and\n        /* \"contracts/access/AccessControl.sol\":4027:4029  20 */\n      0x14\n        /* \"contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_355\n        /* \"contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_354:\n        /* \"contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      tag_356\n        /* \"contracts/access/AccessControl.sol\":4129:4133  role */\n      dup4\n        /* \"contracts/access/AccessControl.sol\":4136:4138  32 */\n      0x20\n        /* \"contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n      tag_355\n        /* \"contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_356:\n        /* \"contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_357\n      swap3\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"contracts/access/AccessControl.sol\":3844:4193  revert(... */\n      dup3\n      mstore\n      tag_192\n      swap2\n      0x04\n      add\n      tag_360\n      jump\t// in\n        /* \"contracts/utils/Strings.sol\":1588:2029  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_355:\n        /* \"contracts/utils/Strings.sol\":1663:1676  string memory */\n      0x60\n        /* \"contracts/utils/Strings.sol\":1688:1707  bytes memory buffer */\n      0x00\n        /* \"contracts/utils/Strings.sol\":1720:1730  2 * length */\n      tag_362\n        /* \"contracts/utils/Strings.sol\":1724:1730  length */\n      dup4\n        /* \"contracts/utils/Strings.sol\":1720:1721  2 */\n      0x02\n        /* \"contracts/utils/Strings.sol\":1720:1730  2 * length */\n      tag_257\n      jump\t// in\n    tag_362:\n        /* \"contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n      tag_363\n      swap1\n        /* \"contracts/utils/Strings.sol\":1733:1734  2 */\n      0x02\n        /* \"contracts/utils/Strings.sol\":1720:1734  2 * length + 2 */\n      tag_255\n      jump\t// in\n    tag_363:\n        /* \"contracts/utils/Strings.sol\":1710:1735  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_364\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_364:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_365\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_365:\n      pop\n        /* \"contracts/utils/Strings.sol\":1688:1735  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"contracts/utils/Strings.sol\":1745:1751  buffer */\n      dup2\n        /* \"contracts/utils/Strings.sol\":1752:1753  0 */\n      0x00\n        /* \"contracts/utils/Strings.sol\":1745:1754  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_366\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_366:\n      0x20\n      add\n      add\n        /* \"contracts/utils/Strings.sol\":1745:1760  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"contracts/utils/Strings.sol\":1770:1776  buffer */\n      dup2\n        /* \"contracts/utils/Strings.sol\":1777:1778  1 */\n      0x01\n        /* \"contracts/utils/Strings.sol\":1770:1779  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_367\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_367:\n      0x20\n      add\n      add\n        /* \"contracts/utils/Strings.sol\":1770:1785  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/utils/Strings.sol\":1800:1809  uint256 i */\n      0x00\n        /* \"contracts/utils/Strings.sol\":1812:1822  2 * length */\n      tag_371\n        /* \"contracts/utils/Strings.sol\":1816:1822  length */\n      dup5\n        /* \"contracts/utils/Strings.sol\":1812:1813  2 */\n      0x02\n        /* \"contracts/utils/Strings.sol\":1812:1822  2 * length */\n      tag_257\n      jump\t// in\n    tag_371:\n        /* \"contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n      tag_372\n      swap1\n        /* \"contracts/utils/Strings.sol\":1825:1826  1 */\n      0x01\n        /* \"contracts/utils/Strings.sol\":1812:1826  2 * length + 1 */\n      tag_255\n      jump\t// in\n    tag_372:\n        /* \"contracts/utils/Strings.sol\":1800:1826  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_368:\n        /* \"contracts/utils/Strings.sol\":1832:1833  1 */\n      0x01\n        /* \"contracts/utils/Strings.sol\":1828:1829  i */\n      dup2\n        /* \"contracts/utils/Strings.sol\":1828:1833  i > 1 */\n      gt\n        /* \"contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_369\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"contracts/utils/Strings.sol\":1879:1884  value */\n      dup6\n        /* \"contracts/utils/Strings.sol\":1887:1890  0xf */\n      0x0f\n        /* \"contracts/utils/Strings.sol\":1879:1890  value & 0xf */\n      and\n        /* \"contracts/utils/Strings.sol\":1866:1891  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_373\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_373:\n      byte\n      0xf8\n      shl\n        /* \"contracts/utils/Strings.sol\":1854:1860  buffer */\n      dup3\n        /* \"contracts/utils/Strings.sol\":1861:1862  i */\n      dup3\n        /* \"contracts/utils/Strings.sol\":1854:1863  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_374\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_374:\n      0x20\n      add\n      add\n        /* \"contracts/utils/Strings.sol\":1854:1891  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/utils/Strings.sol\":1915:1916  4 */\n      0x04\n        /* \"contracts/utils/Strings.sol\":1905:1916  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"contracts/utils/Strings.sol\":1835:1838  --i */\n      tag_375\n      dup2\n      tag_376\n      jump\t// in\n    tag_375:\n      swap1\n      pop\n        /* \"contracts/utils/Strings.sol\":1795:1927  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_368)\n    tag_369:\n      pop\n        /* \"contracts/utils/Strings.sol\":1944:1954  value == 0 */\n      dup4\n      iszero\n        /* \"contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7657:7659   */\n      0x20\n        /* \"contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7639:7660   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7676:7694   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7669:7699   */\n      mstore\n        /* \"#utility.yul\":7735:7769   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":7715:7733   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7708:7770   */\n      mstore\n        /* \"#utility.yul\":7787:7805   */\n      0x64\n      add\n        /* \"contracts/utils/Strings.sol\":1936:1991  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_192\n        /* \"#utility.yul\":7629:7811   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_381:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_383:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:388   */\n    tag_56:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_385:\n        /* \"#utility.yul\":353:382   */\n      tag_346\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_381\n      jump\t// in\n        /* \"#utility.yul\":393:786   */\n    tag_52:\n        /* \"#utility.yul\":467:473   */\n      0x00\n        /* \"#utility.yul\":475:481   */\n      dup1\n        /* \"#utility.yul\":483:489   */\n      0x00\n        /* \"#utility.yul\":536:538   */\n      0x60\n        /* \"#utility.yul\":524:533   */\n      dup5\n        /* \"#utility.yul\":515:522   */\n      dup7\n        /* \"#utility.yul\":511:534   */\n      sub\n        /* \"#utility.yul\":507:539   */\n      slt\n        /* \"#utility.yul\":504:506   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":557:563   */\n      dup2\n        /* \"#utility.yul\":549:555   */\n      dup3\n        /* \"#utility.yul\":542:564   */\n      revert\n        /* \"#utility.yul\":504:506   */\n    tag_388:\n        /* \"#utility.yul\":585:614   */\n      tag_389\n        /* \"#utility.yul\":604:613   */\n      dup5\n        /* \"#utility.yul\":585:614   */\n      tag_381\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":575:614   */\n      swap3\n      pop\n        /* \"#utility.yul\":661:663   */\n      0x20\n        /* \"#utility.yul\":650:659   */\n      dup5\n        /* \"#utility.yul\":646:664   */\n      add\n        /* \"#utility.yul\":633:665   */\n      calldataload\n        /* \"#utility.yul\":623:665   */\n      swap2\n      pop\n        /* \"#utility.yul\":715:717   */\n      0x40\n        /* \"#utility.yul\":704:713   */\n      dup5\n        /* \"#utility.yul\":700:718   */\n      add\n        /* \"#utility.yul\":687:719   */\n      calldataload\n        /* \"#utility.yul\":728:756   */\n      tag_390\n        /* \"#utility.yul\":750:755   */\n      dup2\n        /* \"#utility.yul\":728:756   */\n      tag_391\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":775:780   */\n      dup1\n        /* \"#utility.yul\":765:780   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":494:786   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":791:1046   */\n    tag_173:\n        /* \"#utility.yul\":858:864   */\n      0x00\n        /* \"#utility.yul\":911:913   */\n      0x20\n        /* \"#utility.yul\":899:908   */\n      dup3\n        /* \"#utility.yul\":890:897   */\n      dup5\n        /* \"#utility.yul\":886:909   */\n      sub\n        /* \"#utility.yul\":882:914   */\n      slt\n        /* \"#utility.yul\":879:881   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":932:938   */\n      dup1\n        /* \"#utility.yul\":924:930   */\n      dup2\n        /* \"#utility.yul\":917:939   */\n      revert\n        /* \"#utility.yul\":879:881   */\n    tag_393:\n        /* \"#utility.yul\":969:978   */\n      dup2\n        /* \"#utility.yul\":963:979   */\n      mload\n        /* \"#utility.yul\":988:1016   */\n      tag_346\n        /* \"#utility.yul\":1010:1015   */\n      dup2\n        /* \"#utility.yul\":988:1016   */\n      tag_391\n      jump\t// in\n        /* \"#utility.yul\":1051:1241   */\n    tag_63:\n        /* \"#utility.yul\":1110:1116   */\n      0x00\n        /* \"#utility.yul\":1163:1165   */\n      0x20\n        /* \"#utility.yul\":1151:1160   */\n      dup3\n        /* \"#utility.yul\":1142:1149   */\n      dup5\n        /* \"#utility.yul\":1138:1161   */\n      sub\n        /* \"#utility.yul\":1134:1166   */\n      slt\n        /* \"#utility.yul\":1131:1133   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":1184:1190   */\n      dup1\n        /* \"#utility.yul\":1176:1182   */\n      dup2\n        /* \"#utility.yul\":1169:1191   */\n      revert\n        /* \"#utility.yul\":1131:1133   */\n    tag_396:\n      pop\n        /* \"#utility.yul\":1212:1235   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1121:1241   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1246:1510   */\n    tag_79:\n        /* \"#utility.yul\":1314:1320   */\n      0x00\n        /* \"#utility.yul\":1322:1328   */\n      dup1\n        /* \"#utility.yul\":1375:1377   */\n      0x40\n        /* \"#utility.yul\":1363:1372   */\n      dup4\n        /* \"#utility.yul\":1354:1361   */\n      dup6\n        /* \"#utility.yul\":1350:1373   */\n      sub\n        /* \"#utility.yul\":1346:1378   */\n      slt\n        /* \"#utility.yul\":1343:1345   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":1396:1402   */\n      dup2\n        /* \"#utility.yul\":1388:1394   */\n      dup3\n        /* \"#utility.yul\":1381:1403   */\n      revert\n        /* \"#utility.yul\":1343:1345   */\n    tag_398:\n        /* \"#utility.yul\":1437:1446   */\n      dup3\n        /* \"#utility.yul\":1424:1447   */\n      calldataload\n        /* \"#utility.yul\":1414:1447   */\n      swap2\n      pop\n        /* \"#utility.yul\":1466:1504   */\n      tag_399\n        /* \"#utility.yul\":1500:1502   */\n      0x20\n        /* \"#utility.yul\":1489:1498   */\n      dup5\n        /* \"#utility.yul\":1485:1503   */\n      add\n        /* \"#utility.yul\":1466:1504   */\n      tag_381\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":1456:1504   */\n      swap1\n      pop\n        /* \"#utility.yul\":1333:1510   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1515:1821   */\n    tag_46:\n        /* \"#utility.yul\":1573:1579   */\n      0x00\n        /* \"#utility.yul\":1626:1628   */\n      0x20\n        /* \"#utility.yul\":1614:1623   */\n      dup3\n        /* \"#utility.yul\":1605:1612   */\n      dup5\n        /* \"#utility.yul\":1601:1624   */\n      sub\n        /* \"#utility.yul\":1597:1629   */\n      slt\n        /* \"#utility.yul\":1594:1596   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":1647:1653   */\n      dup1\n        /* \"#utility.yul\":1639:1645   */\n      dup2\n        /* \"#utility.yul\":1632:1654   */\n      revert\n        /* \"#utility.yul\":1594:1596   */\n    tag_401:\n        /* \"#utility.yul\":1678:1701   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1730:1762   */\n      dup2\n      and\n        /* \"#utility.yul\":1720:1763   */\n      dup2\n      eq\n        /* \"#utility.yul\":1710:1712   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":1782:1788   */\n      dup2\n        /* \"#utility.yul\":1774:1780   */\n      dup3\n        /* \"#utility.yul\":1767:1789   */\n      revert\n        /* \"#utility.yul\":2021:2215   */\n    tag_182:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2144:2146   */\n      0x20\n        /* \"#utility.yul\":2132:2141   */\n      dup3\n        /* \"#utility.yul\":2123:2130   */\n      dup5\n        /* \"#utility.yul\":2119:2142   */\n      sub\n        /* \"#utility.yul\":2115:2147   */\n      slt\n        /* \"#utility.yul\":2112:2114   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":2165:2171   */\n      dup1\n        /* \"#utility.yul\":2157:2163   */\n      dup2\n        /* \"#utility.yul\":2150:2172   */\n      revert\n        /* \"#utility.yul\":2112:2114   */\n    tag_406:\n      pop\n        /* \"#utility.yul\":2193:2209   */\n      mload\n      swap2\n        /* \"#utility.yul\":2102:2215   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2489:3020   */\n    tag_151:\n        /* \"#utility.yul\":2581:2587   */\n      0x00\n        /* \"#utility.yul\":2589:2595   */\n      dup1\n        /* \"#utility.yul\":2597:2603   */\n      0x00\n        /* \"#utility.yul\":2605:2611   */\n      dup1\n        /* \"#utility.yul\":2613:2619   */\n      0x00\n        /* \"#utility.yul\":2666:2669   */\n      0xa0\n        /* \"#utility.yul\":2654:2663   */\n      dup7\n        /* \"#utility.yul\":2645:2652   */\n      dup9\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2670   */\n      slt\n        /* \"#utility.yul\":2634:2636   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":2688:2694   */\n      dup1\n        /* \"#utility.yul\":2680:2686   */\n      dup2\n        /* \"#utility.yul\":2673:2695   */\n      revert\n        /* \"#utility.yul\":2634:2636   */\n    tag_411:\n        /* \"#utility.yul\":2729:2738   */\n      dup6\n        /* \"#utility.yul\":2716:2739   */\n      calldataload\n        /* \"#utility.yul\":2706:2739   */\n      swap5\n      pop\n        /* \"#utility.yul\":2786:2788   */\n      0x20\n        /* \"#utility.yul\":2775:2784   */\n      dup7\n        /* \"#utility.yul\":2771:2789   */\n      add\n        /* \"#utility.yul\":2758:2790   */\n      calldataload\n        /* \"#utility.yul\":2748:2790   */\n      swap4\n      pop\n        /* \"#utility.yul\":2809:2847   */\n      tag_412\n        /* \"#utility.yul\":2843:2845   */\n      0x40\n        /* \"#utility.yul\":2832:2841   */\n      dup8\n        /* \"#utility.yul\":2828:2846   */\n      add\n        /* \"#utility.yul\":2809:2847   */\n      tag_381\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":2799:2847   */\n      swap3\n      pop\n        /* \"#utility.yul\":2894:2896   */\n      0x60\n        /* \"#utility.yul\":2883:2892   */\n      dup7\n        /* \"#utility.yul\":2879:2897   */\n      add\n        /* \"#utility.yul\":2866:2898   */\n      calldataload\n        /* \"#utility.yul\":2856:2898   */\n      swap2\n      pop\n        /* \"#utility.yul\":2948:2951   */\n      0x80\n        /* \"#utility.yul\":2937:2946   */\n      dup7\n        /* \"#utility.yul\":2933:2952   */\n      add\n        /* \"#utility.yul\":2920:2953   */\n      calldataload\n        /* \"#utility.yul\":2962:2990   */\n      tag_413\n        /* \"#utility.yul\":2984:2989   */\n      dup2\n        /* \"#utility.yul\":2962:2990   */\n      tag_391\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3009:3014   */\n      dup1\n        /* \"#utility.yul\":2999:3014   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2624:3020   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3025:3811   */\n    tag_358:\n        /* \"#utility.yul\":3436:3461   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":3431:3434   */\n      dup2\n        /* \"#utility.yul\":3424:3462   */\n      mstore\n        /* \"#utility.yul\":3406:3409   */\n      0x00\n        /* \"#utility.yul\":3491:3497   */\n      dup4\n        /* \"#utility.yul\":3485:3498   */\n      mload\n        /* \"#utility.yul\":3507:3569   */\n      tag_415\n        /* \"#utility.yul\":3562:3568   */\n      dup2\n        /* \"#utility.yul\":3557:3559   */\n      0x17\n        /* \"#utility.yul\":3552:3555   */\n      dup6\n        /* \"#utility.yul\":3548:3560   */\n      add\n        /* \"#utility.yul\":3541:3545   */\n      0x20\n        /* \"#utility.yul\":3533:3539   */\n      dup9\n        /* \"#utility.yul\":3529:3546   */\n      add\n        /* \"#utility.yul\":3507:3569   */\n      tag_416\n      jump\t// in\n    tag_415:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":3628:3630   */\n      0x17\n        /* \"#utility.yul\":3588:3604   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":3620:3631   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":3613:3653   */\n      mstore\n        /* \"#utility.yul\":3678:3691   */\n      dup4\n      mload\n        /* \"#utility.yul\":3700:3763   */\n      tag_417\n        /* \"#utility.yul\":3678:3691   */\n      dup2\n        /* \"#utility.yul\":3749:3751   */\n      0x28\n        /* \"#utility.yul\":3741:3752   */\n      dup5\n      add\n        /* \"#utility.yul\":3734:3738   */\n      0x20\n        /* \"#utility.yul\":3722:3739   */\n      dup9\n      add\n        /* \"#utility.yul\":3700:3763   */\n      tag_416\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3783:3800   */\n      add\n        /* \"#utility.yul\":3802:3804   */\n      0x28\n        /* \"#utility.yul\":3779:3805   */\n      add\n      swap5\n        /* \"#utility.yul\":3414:3811   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7067:7450   */\n    tag_360:\n        /* \"#utility.yul\":7216:7218   */\n      0x20\n        /* \"#utility.yul\":7205:7214   */\n      dup2\n        /* \"#utility.yul\":7198:7219   */\n      mstore\n        /* \"#utility.yul\":7179:7183   */\n      0x00\n        /* \"#utility.yul\":7248:7254   */\n      dup3\n        /* \"#utility.yul\":7242:7255   */\n      mload\n        /* \"#utility.yul\":7291:7297   */\n      dup1\n        /* \"#utility.yul\":7286:7288   */\n      0x20\n        /* \"#utility.yul\":7275:7284   */\n      dup5\n        /* \"#utility.yul\":7271:7289   */\n      add\n        /* \"#utility.yul\":7264:7298   */\n      mstore\n        /* \"#utility.yul\":7307:7373   */\n      tag_429\n        /* \"#utility.yul\":7366:7372   */\n      dup2\n        /* \"#utility.yul\":7361:7363   */\n      0x40\n        /* \"#utility.yul\":7350:7359   */\n      dup6\n        /* \"#utility.yul\":7346:7364   */\n      add\n        /* \"#utility.yul\":7341:7343   */\n      0x20\n        /* \"#utility.yul\":7333:7339   */\n      dup8\n        /* \"#utility.yul\":7329:7344   */\n      add\n        /* \"#utility.yul\":7307:7373   */\n      tag_416\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7434:7436   */\n      0x1f\n        /* \"#utility.yul\":7413:7428   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7409:7438   */\n      and\n        /* \"#utility.yul\":7394:7439   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":7441:7443   */\n      0x40\n        /* \"#utility.yul\":7390:7444   */\n      add\n      swap3\n        /* \"#utility.yul\":7188:7450   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13221:13349   */\n    tag_255:\n        /* \"#utility.yul\":13261:13264   */\n      0x00\n        /* \"#utility.yul\":13292:13293   */\n      dup3\n        /* \"#utility.yul\":13288:13294   */\n      not\n        /* \"#utility.yul\":13285:13286   */\n      dup3\n        /* \"#utility.yul\":13282:13295   */\n      gt\n        /* \"#utility.yul\":13279:13281   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":13298:13316   */\n      tag_447\n      tag_448\n      jump\t// in\n    tag_447:\n      pop\n        /* \"#utility.yul\":13334:13343   */\n      add\n      swap1\n        /* \"#utility.yul\":13269:13349   */\n      jump\t// out\n        /* \"#utility.yul\":13354:13571   */\n    tag_259:\n        /* \"#utility.yul\":13394:13395   */\n      0x00\n        /* \"#utility.yul\":13420:13421   */\n      dup3\n        /* \"#utility.yul\":13410:13412   */\n      tag_450\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":13445:13476   */\n      dup2\n      mstore\n        /* \"#utility.yul\":13499:13503   */\n      0x12\n        /* \"#utility.yul\":13496:13497   */\n      0x04\n        /* \"#utility.yul\":13489:13504   */\n      mstore\n        /* \"#utility.yul\":13527:13531   */\n      0x24\n        /* \"#utility.yul\":13452:13453   */\n      dup2\n        /* \"#utility.yul\":13517:13532   */\n      revert\n        /* \"#utility.yul\":13410:13412   */\n    tag_450:\n      pop\n        /* \"#utility.yul\":13556:13565   */\n      div\n      swap1\n        /* \"#utility.yul\":13400:13571   */\n      jump\t// out\n        /* \"#utility.yul\":13576:13744   */\n    tag_257:\n        /* \"#utility.yul\":13616:13623   */\n      0x00\n        /* \"#utility.yul\":13682:13683   */\n      dup2\n        /* \"#utility.yul\":13678:13679   */\n      0x00\n        /* \"#utility.yul\":13674:13680   */\n      not\n        /* \"#utility.yul\":13670:13684   */\n      div\n        /* \"#utility.yul\":13667:13668   */\n      dup4\n        /* \"#utility.yul\":13664:13685   */\n      gt\n        /* \"#utility.yul\":13659:13660   */\n      dup3\n        /* \"#utility.yul\":13652:13661   */\n      iszero\n        /* \"#utility.yul\":13645:13662   */\n      iszero\n        /* \"#utility.yul\":13641:13686   */\n      and\n        /* \"#utility.yul\":13638:13640   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":13689:13707   */\n      tag_453\n      tag_448\n      jump\t// in\n    tag_453:\n      pop\n        /* \"#utility.yul\":13729:13738   */\n      mul\n      swap1\n        /* \"#utility.yul\":13628:13744   */\n      jump\t// out\n        /* \"#utility.yul\":13749:13874   */\n    tag_242:\n        /* \"#utility.yul\":13789:13793   */\n      0x00\n        /* \"#utility.yul\":13817:13818   */\n      dup3\n        /* \"#utility.yul\":13814:13815   */\n      dup3\n        /* \"#utility.yul\":13811:13819   */\n      lt\n        /* \"#utility.yul\":13808:13810   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":13822:13840   */\n      tag_456\n      tag_448\n      jump\t// in\n    tag_456:\n      pop\n        /* \"#utility.yul\":13859:13868   */\n      sub\n      swap1\n        /* \"#utility.yul\":13798:13874   */\n      jump\t// out\n        /* \"#utility.yul\":13879:14137   */\n    tag_416:\n        /* \"#utility.yul\":13951:13952   */\n      0x00\n        /* \"#utility.yul\":13961:14074   */\n    tag_458:\n        /* \"#utility.yul\":13975:13981   */\n      dup4\n        /* \"#utility.yul\":13972:13973   */\n      dup2\n        /* \"#utility.yul\":13969:13982   */\n      lt\n        /* \"#utility.yul\":13961:14074   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":14051:14062   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":14045:14063   */\n      mload\n        /* \"#utility.yul\":14032:14043   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":14025:14064   */\n      mstore\n        /* \"#utility.yul\":13997:13999   */\n      0x20\n        /* \"#utility.yul\":13990:14000   */\n      add\n        /* \"#utility.yul\":13961:14074   */\n      jump(tag_458)\n    tag_460:\n        /* \"#utility.yul\":14092:14098   */\n      dup4\n        /* \"#utility.yul\":14089:14090   */\n      dup2\n        /* \"#utility.yul\":14086:14099   */\n      gt\n        /* \"#utility.yul\":14083:14085   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":14127:14128   */\n      0x00\n        /* \"#utility.yul\":14118:14124   */\n      dup5\n        /* \"#utility.yul\":14113:14116   */\n      dup5\n        /* \"#utility.yul\":14109:14125   */\n      add\n        /* \"#utility.yul\":14102:14129   */\n      mstore\n        /* \"#utility.yul\":14083:14085   */\n    tag_461:\n      pop\n        /* \"#utility.yul\":13932:14137   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14142:14278   */\n    tag_376:\n        /* \"#utility.yul\":14181:14184   */\n      0x00\n        /* \"#utility.yul\":14209:14214   */\n      dup2\n        /* \"#utility.yul\":14199:14201   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":14218:14236   */\n      tag_464\n      tag_448\n      jump\t// in\n    tag_464:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":14254:14272   */\n      add\n      swap1\n        /* \"#utility.yul\":14189:14278   */\n      jump\t// out\n        /* \"#utility.yul\":14283:14410   */\n    tag_448:\n        /* \"#utility.yul\":14344:14354   */\n      0x4e487b71\n        /* \"#utility.yul\":14339:14342   */\n      0xe0\n        /* \"#utility.yul\":14335:14355   */\n      shl\n        /* \"#utility.yul\":14332:14333   */\n      0x00\n        /* \"#utility.yul\":14325:14356   */\n      mstore\n        /* \"#utility.yul\":14375:14379   */\n      0x11\n        /* \"#utility.yul\":14372:14373   */\n      0x04\n        /* \"#utility.yul\":14365:14380   */\n      mstore\n        /* \"#utility.yul\":14399:14403   */\n      0x24\n        /* \"#utility.yul\":14396:14397   */\n      0x00\n        /* \"#utility.yul\":14389:14404   */\n      revert\n        /* \"#utility.yul\":14415:14533   */\n    tag_391:\n        /* \"#utility.yul\":14501:14506   */\n      dup1\n        /* \"#utility.yul\":14494:14507   */\n      iszero\n        /* \"#utility.yul\":14487:14508   */\n      iszero\n        /* \"#utility.yul\":14480:14485   */\n      dup2\n        /* \"#utility.yul\":14477:14509   */\n      eq\n        /* \"#utility.yul\":14467:14469   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":14523:14524   */\n      0x00\n        /* \"#utility.yul\":14520:14521   */\n      dup1\n        /* \"#utility.yul\":14513:14525   */\n      revert\n    stop\n    data_023264abf97b17654b97d38bd81099eb2064d5cca6dbd4e398ff8bdbab67b82d 3131fc8beb48b895197ad34f21c86afdf6a989a5cd911181952dbf8dfcf18192\n    data_806db7640bcc104a4b7b53ebc0c09b63eefd92fe89197bc684d91aa66a17455c 3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c\n\n    auxdata: 0xa264697066735822122028ba609cb92e170949b2720f9b6760aaa336c13fe7580e96efe3d7f2b5974a0364736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1517:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:358:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "88:16:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "103:1:11",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "92:7:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "113:16:11",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "122:7:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "113:5:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "138:13:11",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "146:5:11"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "138:4:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "202:228:11",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "247:22:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "249:16:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "249:18:11"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "249:18:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "222:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "236:1:11",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "232:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "232:6:11"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "240:4:11"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "228:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "228:17:11"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "219:2:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "219:27:11"
																		},
																		"nodeType": "YulIf",
																		"src": "216:2:11"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "308:29:11",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "310:25:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "323:5:11"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "330:4:11"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "319:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "319:16:11"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "310:5:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "289:8:11"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "299:7:11"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "285:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "285:22:11"
																		},
																		"nodeType": "YulIf",
																		"src": "282:2:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "350:23:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "362:4:11"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "368:4:11"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "358:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "350:4:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "386:34:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "402:7:11"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "411:8:11"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "398:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "398:22:11"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "386:8:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "171:8:11"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "181:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "168:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:21:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "190:3:11",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "164:3:11",
																"statements": []
															},
															"src": "160:270:11"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "42:5:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "49:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "62:5:11",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "69:4:11",
														"type": ""
													}
												],
												"src": "14:422:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:61:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:45:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "551:4:11"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "557:8:11"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "530:20:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "530:36:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "521:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "482:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "488:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "501:5:11",
														"type": ""
													}
												],
												"src": "441:131:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "636:747:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "674:52:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "688:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "697:1:11",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "688:5:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "711:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "656:8:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "649:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:16:11"
															},
															"nodeType": "YulIf",
															"src": "646:2:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "759:52:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "773:10:11",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "782:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "773:5:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "796:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "745:4:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "738:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "738:12:11"
															},
															"nodeType": "YulIf",
															"src": "735:2:11"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "847:52:11",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "861:10:11",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "870:1:11",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "861:5:11"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "884:5:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "840:59:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "845:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "915:123:11",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "950:22:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "952:16:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "952:18:11"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "952:18:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "935:8:11"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "945:3:11",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "932:2:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "932:17:11"
																				},
																				"nodeType": "YulIf",
																				"src": "929:2:11"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "985:25:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "998:8:11"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1008:1:11",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "994:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "994:16:11"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "985:5:11"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1023:5:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "908:130:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:1:11",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "827:4:11"
															},
															"nodeType": "YulSwitch",
															"src": "820:218:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1136:70:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1150:28:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1163:4:11"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1169:8:11"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1159:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1159:19:11"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1150:5:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1191:5:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1060:4:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1066:2:11",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1057:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:12:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1074:8:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1084:2:11",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1071:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1071:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1053:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1053:35:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1097:4:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1103:3:11",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1094:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1094:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1112:8:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1109:2:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1109:16:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1090:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1090:36:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1050:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:77:11"
															},
															"nodeType": "YulIf",
															"src": "1047:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1215:57:11",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1257:4:11"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1263:8:11"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "1238:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:34:11"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1219:7:11",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "1228:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1317:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1319:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1319:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1287:7:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1304:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1300:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1300:6:11"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "1308:6:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "1296:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1296:19:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1284:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1284:32:11"
															},
															"nodeType": "YulIf",
															"src": "1281:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1348:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1361:7:11"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1357:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1357:20:11"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1348:5:11"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "607:4:11",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "613:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "626:5:11",
														"type": ""
													}
												],
												"src": "577:806:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1420:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1437:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1449:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1430:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1430:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1430:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1477:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1480:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1470:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1504:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1494:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1388:127:11"
											}
										]
									},
									"contents": "{\n    { }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052601260038190556200001890600a620001af565b6005553480156200002857600080fd5b5062000036600033620000b2565b620000627f3131fc8beb48b895197ad34f21c86afdf6a989a5cd911181952dbf8dfcf1819233620000b2565b6200008e7f3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c33620000b2565b600680546001600160a01b0319163317905567016345785d8a00006004556200028e565b620000be82826200013b565b62000137576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000f63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff165b92915050565b600181815b80851115620001a75781600019048211156200018b576200018b62000278565b808516156200019957918102915b93841c93908002906200016b565b509250929050565b6000620001bd8383620001c4565b9392505050565b600082620001d55750600162000160565b81620001e45750600062000160565b8160018114620001fd5760028114620002085762000228565b600191505062000160565b60ff8411156200021c576200021c62000278565b50506001821b62000160565b5060208310610133831016604e8410600b84101617156200024d575081810a62000160565b62000259838362000166565b806000190482111562000270576200027062000278565b029392505050565b634e487b7160e01b600052601160045260246000fd5b611e5e806200029e6000396000f3fe608060405234801561001057600080fd5b50600436106101d95760003560e01c806391d1485411610104578063b9888d89116100a2578063d547741f11610071578063d547741f14610514578063e6f091f914610527578063f207564e1461055a578063f336ee3c1461056d57600080fd5b8063b9888d8914610448578063c18e397e1461045b578063c46ed45a14610470578063ccaf237f1461047957600080fd5b80639d00c61e116100de5780639d00c61e146103795780639f512e22146103cb578063a217fddf146103de578063b22c376d146103e657600080fd5b806391d148541461033e57806399597b70146103515780639c6236831461036657600080fd5b80632ba671001161017c57806336568abe1161014b57806336568abe146102da5780633e16518f146102ed5780637ad226dc146103005780638da5cb5b1461031357600080fd5b80632ba67100146102985780632d6ef310146102ab5780632f2ff15d146102be578063313ce567146102d157600080fd5b806309a18635116101b857806309a186351461022e578063248a55a114610241578063248a9ca3146102545780632ac5016f1461028557600080fd5b8062f5544f146101de57806301ffc9a7146101f357806306602a481461021b575b600080fd5b6101f16101ec366004611b91565b610580565b005b610206610201366004611bd4565b6105ec565b60405190151581526020015b60405180910390f35b6101f1610229366004611b36565b610623565b6101f161023c366004611b1c565b610711565b6101f161024f366004611b91565b6108b8565b610277610262366004611b91565b60009081526020819052604090206001015490565b604051908152602001610212565b6101f1610293366004611b91565b61094b565b6101f16102a6366004611ba9565b610969565b6101f16102b9366004611b91565b6109e1565b6101f16102cc366004611ba9565b610a3f565b61027760035481565b6101f16102e8366004611ba9565b610a64565b6101f16102fb366004611b1c565b610ae2565b6101f161030e366004611ba9565b610b1f565b600654610326906001600160a01b031681565b6040516001600160a01b039091168152602001610212565b61020661034c366004611ba9565b610d97565b610277600080516020611e0983398151915281565b6101f1610374366004611ba9565b610dc0565b6103b4610387366004611b1c565b6001600160a01b031660009081526001602081905260409091208054910154600160a01b90910460ff1691565b604080519215158352602083019190915201610212565b6101f16103d9366004611b91565b61114a565b610277600081565b6104236103f4366004611b1c565b600160208190526000918252604090912080549101546001600160a01b03821691600160a01b900460ff169083565b604080516001600160a01b039094168452911515602084015290820152606001610212565b610206610456366004611ba9565b6111a0565b610277600080516020611de983398151915281565b61027760045481565b6104d4610487366004611b91565b6002602081905260009182526040909120805460018201549282015460038301546004840154600585015460069095015460ff90941695949293919290916001600160a01b039091169087565b604080519715158852602088019690965294860193909352606085019190915260808401526001600160a01b031660a083015260c082015260e001610212565b6101f1610522366004611ba9565b6112af565b610206610535366004611b1c565b6001600160a01b0316600090815260016020526040902054600160a01b900460ff1690565b6101f1610568366004611b91565b6112d4565b6101f161057b366004611c14565b61165b565b600080516020611e0983398151915261059881611708565b600082815260026020526040908190206001600490910155517f651a9760985edc53055bf2462cb4437b9be3de87aa3eecf2c05782e8b58eba19906105e09084815260200190565b60405180910390a15050565b60006001600160e01b03198216637965db0b60e01b148061061d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080516020611de983398151915261063b81611708565b6001600160a01b038416600081815260016020819052604090912090810185905580546001600160a81b031916600160a01b851515026001600160a01b0319161782179055849063095ea7b3336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526000196024820152604401602060405180830381600087803b1580156106d157600080fd5b505af11580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190611b75565b505050505050565b600061071c81611708565b6001600160a01b038281166000908152600160205260408082205490516370a0823160e01b8152306004820152919216906370a082319060240160206040518083038186803b15801561076e57600080fd5b505afa158015610782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a69190611bfc565b905080156108b3576001600160a01b038381166000908152600160205260409020541663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561081757600080fd5b505af115801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f9190611b75565b6108b35760405162461bcd60e51b815260206004820152602a60248201527f54726f706879204b696e67204172636164653a205265636f6e63696c6961746960448201526937b7103330b4b632b21760b11b60648201526084015b60405180910390fd5b505050565b600080516020611e098339815191526108d081611708565b6000828152600260208181526040808420805460ff191681556001810185905592830184905560038301849055600483018490556005830180546001600160a01b0319169055600690920192909255518381527fd0b153e02e23f4f21d020465b4dac7b1114893d05db395ed2511f879c3ac90b491016105e0565b600080516020611de983398151915261096381611708565b50600455565b600080516020611e0983398151915261098181611708565b60008381526002602090815260408083206001600160a01b0386168085526009909101835281842093909355519182527f34aeefd5030be05fe70eebc8866d82f935a308eb9f334cba88f5e3bea1a0cae8910160405180910390a1505050565b600080516020611e098339815191526109f981611708565b60008281526002602052604080822060040191909155517f827e8bff9f46048f8351964d2c871d09e4f4231513cf2fcb786649c68732e24f906105e09084815260200190565b600082815260208190526040902060010154610a5a81611708565b6108b38383611712565b6001600160a01b0381163314610ad45760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016108aa565b610ade8282611796565b5050565b600080516020611de9833981519152610afa81611708565b506001600160a01b03166000908152600160205260409020805460ff60a01b19169055565b600080516020611e09833981519152610b3781611708565b60008381526002602052604090205460ff166108b35760008381526002602090815260408083206001600160a01b0386168452600801909152902054600114610bdc5760405162461bcd60e51b815260206004820152603160248201527f54726f706879204b696e67204172636164653a204e6f7420726567697374657260448201527032b2103337b9103a3434b99033b0b6b29760791b60648201526084016108aa565b600083815260026020908152604080832060058101546001600160a01b039081168552600190935292819020546003840154915163a9059cbb60e01b8152868416600482015260248101929092529091169063a9059cbb90604401602060405180830381600087803b158015610c5157600080fd5b505af1158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c899190611b75565b610ce05760405162461bcd60e51b815260206004820152602260248201527f54726f706879204b696e67204172636164653a20526566756e64206661696c65604482015261321760f11b60648201526084016108aa565b8060030154816006016000828254610cf89190611d66565b90915550506001600160a01b038316600090815260078201602090815260408083208390556008840190915281208190556001808301805491929091610d3f908490611d66565b90915550506003810154604080518681526001600160a01b038616602082015280820192909252517f21e12a7cad0da5928167e1084ea4d5fdf8d9af66657a2543a9ac76a0ca0814779181900360600190a150505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020611e09833981519152610dd881611708565b60008381526002602052604090205460ff166111415760008381526002602090815260408083206001600160a01b0386168452600801909152902054600114610e7c5760405162461bcd60e51b815260206004820152603060248201527f54726f706879204b696e67204172636164653a204e6f7420726567697374657260448201526f656420666f7220746869732067616d6560801b60648201526084016108aa565b600580546004546000868152600260209081526040808320909501546001600160a01b03168252600190819052938120909301548291610ebb91611d0f565b600087815260026020526040902060060154610ed79190611d47565b610ee19190611d27565b610eeb9190611d27565b60008581526002602052604081206006015491925090610f0b90836117fb565b6000868152600260209081526040808320600501546001600160a01b03908116845260019092528083205490516370a0823160e01b815230600482015293945091929116906370a082319060240160206040518083038186803b158015610f7157600080fd5b505afa158015610f85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa99190611bfc565b905081811015610fb7578091505b6000868152600260209081526040808320600501546001600160a01b03908116845260019092529182902054915163a9059cbb60e01b815287821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561102457600080fd5b505af1158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190611b75565b6110b35760405162461bcd60e51b815260206004820152602260248201527f54726f706879204b696e67204172636164653a205061796f7574206661696c65604482015261321760f11b60648201526084016108aa565b60008681526002602090815260408083206001600160a01b03891684526007018252918290205491519182527f557809284da7314475b1582804ae28e5f1349efc1fe970ea25d50fce75eb4f43910160405180910390a16040518281527f22427047e1a674a9aff59700a2c8d00ea96e017ddf9236690bdedf1f21f28d9d9060200160405180910390a15050505b6108b3836109e1565b60008181526002602090815260408083203380855260099091018352818420939093558051928352517f34aeefd5030be05fe70eebc8866d82f935a308eb9f334cba88f5e3bea1a0cae89281900390910190a150565b6000600080516020611e098339815191526111ba81611708565b60008481526002602090815260408083206001600160a01b038716845260090190915290205460011461125a5760008481526002602090815260408083206001600160a01b038716808552600990910183529281902060019081905581519384529183018790528201527f5621c8071929c7265ce41857be957499346fcbd5c32e82130f48e0907449d1e69060600160405180910390a1600191506112a8565b604080516001600160a01b03851681526020810186905260008183015290517f5621c8071929c7265ce41857be957499346fcbd5c32e82130f48e0907449d1e69181900360600190a1600091505b5092915050565b6000828152602081905260409020600101546112ca81611708565b6108b38383611796565b600081815260026020908152604080832033845260090190915290205460011461134a5760405162461bcd60e51b815260206004820152602160248201527f54726f706879204b696e67204172636164653a20556e617574686f72697a65646044820152601760f91b60648201526084016108aa565b6000818152600260205260409020600401546001146113ab5760405162461bcd60e51b815260206004820181905260248201527f54726f706879204b696e67204172636164653a2047616d6520636c6f7365642e60448201526064016108aa565b60008181526002602081905260409091206001810154910154116114245760405162461bcd60e51b815260206004820152602a60248201527f54726f706879204b696e67204172636164653a2047616d652066756c6c2e20206044820152692a393c9030b3b0b4b71760b11b60648201526084016108aa565b60008181526002602090815260408083203384526008019091529020541561149e5760405162461bcd60e51b815260206004820152602760248201527f54726f706879204b696e67204172636164653a20416c7265616479207265676960448201526639ba32b932b21760c91b60648201526084016108aa565b600081815260026020819052604090912001546115095760405162461bcd60e51b815260206004820152602360248201527f54726f706879204b696e67204172636164653a2047616d65206e6f7420666f7560448201526237321760e91b60648201526084016108aa565b6000818152600260209081526040808320600501546001600160a01b039081168452600190925290912054166323b872dd336000848152600260205260409081902060030154905160e084901b6001600160e01b03191681526001600160a01b0390921660048301523060248301526044820152606401602060405180830381600087803b15801561159a57600080fd5b505af11580156115ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d29190611b75565b6116395760405162461bcd60e51b815260206004820152603260248201527f54726f706879204b696e67204172636164653a204d75737420617070726f7665604482015271103932b3b4b9ba3930ba34b7b7103332b29760711b60648201526084016108aa565b600081815260026020526040902060030154611658908290339061180e565b50565b600080516020611e0983398151915261167381611708565b600086815260026020818152604080842060016004820181905560068201869055600382018b90556005820180546001600160a01b0319166001600160a01b038c16179055810194909455918301869055825460ff191685151517909255518781527f9e5237c6a8bb45df74799cf138ebda4fed0574bed906da41387acdc4a3cbe3d8910160405180910390a1505050505050565b61165881336118ba565b61171c8282610d97565b610ade576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556117523390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6117a08282610d97565b15610ade576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006118078284611d66565b9392505050565b60008381526002602052604081206001808201805492939192909190611835908490611d0f565b90915550506001600160a01b038316600090815260078201602090815260408083208590556008840190915281206001905560068201805484929061187b908490611d0f565b909155505060405184815233907e7dc6ab80cc84c043b7b8d4fcafc802187470087f7ea7fccd2e17aecd0256a19060200160405180910390a250505050565b6118c48282610d97565b610ade576118dc816001600160a01b0316601461191e565b6118e783602061191e565b6040516020016118f8929190611c67565b60408051601f198184030181529082905262461bcd60e51b82526108aa91600401611cdc565b6060600061192d836002611d47565b611938906002611d0f565b67ffffffffffffffff81111561195e57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611988576020820181803683370190505b509050600360fc1b816000815181106119b157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106119ee57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611a12846002611d47565b611a1d906001611d0f565b90505b6001811115611ab1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611a5f57634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611a8357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611aaa81611dad565b9050611a20565b5083156118075760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016108aa565b80356001600160a01b0381168114611b1757600080fd5b919050565b600060208284031215611b2d578081fd5b61180782611b00565b600080600060608486031215611b4a578182fd5b611b5384611b00565b9250602084013591506040840135611b6a81611dda565b809150509250925092565b600060208284031215611b86578081fd5b815161180781611dda565b600060208284031215611ba2578081fd5b5035919050565b60008060408385031215611bbb578182fd5b82359150611bcb60208401611b00565b90509250929050565b600060208284031215611be5578081fd5b81356001600160e01b031981168114611807578182fd5b600060208284031215611c0d578081fd5b5051919050565b600080600080600060a08688031215611c2b578081fd5b8535945060208601359350611c4260408701611b00565b9250606086013591506080860135611c5981611dda565b809150509295509295909350565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611c9f816017850160208801611d7d565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611cd0816028840160208801611d7d565b01602801949350505050565b6020815260008251806020840152611cfb816040850160208701611d7d565b601f01601f19169190910160400192915050565b60008219821115611d2257611d22611dc4565b500190565b600082611d4257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611d6157611d61611dc4565b500290565b600082821015611d7857611d78611dc4565b500390565b60005b83811015611d98578181015183820152602001611d80565b83811115611da7576000848401525b50505050565b600081611dbc57611dbc611dc4565b506000190190565b634e487b7160e01b600052601160045260246000fd5b801515811461165857600080fdfe3131fc8beb48b895197ad34f21c86afdf6a989a5cd911181952dbf8dfcf181923c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059ca264697066735822122028ba609cb92e170949b2720f9b6760aaa336c13fe7580e96efe3d7f2b5974a0364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x12 PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH3 0x18 SWAP1 PUSH1 0xA PUSH3 0x1AF JUMP JUMPDEST PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x36 PUSH1 0x0 CALLER PUSH3 0xB2 JUMP JUMPDEST PUSH3 0x62 PUSH32 0x3131FC8BEB48B895197AD34F21C86AFDF6A989A5CD911181952DBF8DFCF18192 CALLER PUSH3 0xB2 JUMP JUMPDEST PUSH3 0x8E PUSH32 0x3C13B5ABBC85050D426F9500A16CFD9F7D94261C880B9A4E03D584D28C06059C CALLER PUSH3 0xB2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH8 0x16345785D8A0000 PUSH1 0x4 SSTORE PUSH3 0x28E JUMP JUMPDEST PUSH3 0xBE DUP3 DUP3 PUSH3 0x13B JUMP JUMPDEST PUSH3 0x137 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0xF6 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x1A7 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x18B JUMPI PUSH3 0x18B PUSH3 0x278 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x199 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x16B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BD DUP4 DUP4 PUSH3 0x1C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x1D5 JUMPI POP PUSH1 0x1 PUSH3 0x160 JUMP JUMPDEST DUP2 PUSH3 0x1E4 JUMPI POP PUSH1 0x0 PUSH3 0x160 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x1FD JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x208 JUMPI PUSH3 0x228 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x160 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x21C JUMPI PUSH3 0x21C PUSH3 0x278 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x160 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x24D JUMPI POP DUP2 DUP2 EXP PUSH3 0x160 JUMP JUMPDEST PUSH3 0x259 DUP4 DUP4 PUSH3 0x166 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x270 JUMPI PUSH3 0x270 PUSH3 0x278 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E5E DUP1 PUSH3 0x29E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB9888D89 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xE6F091F9 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xF207564E EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xF336EE3C EQ PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB9888D89 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xC18E397E EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xC46ED45A EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xCCAF237F EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D00C61E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9D00C61E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x9F512E22 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0xB22C376D EQ PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x99597B70 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x9C623683 EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BA67100 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x3E16518F EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x7AD226DC EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BA67100 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x2D6EF310 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A18635 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x9A18635 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x248A55A1 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x2AC5016F EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF5544F EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6602A48 EQ PUSH2 0x21B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x206 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x711 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xA3F JUMP JUMPDEST PUSH2 0x277 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x326 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST PUSH2 0x277 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST PUSH2 0x277 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x423 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x277 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x277 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4D4 PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP6 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 ISZERO ISZERO DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x206 PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x568 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x57B CALLDATASIZE PUSH1 0x4 PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x165B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x598 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE MLOAD PUSH32 0x651A9760985EDC53055BF2462CB4437B9BE3DE87AA3EECF2C05782E8B58EBA19 SWAP1 PUSH2 0x5E0 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x61D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x63B DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD DUP6 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP6 ISZERO ISZERO MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR DUP3 OR SWAP1 SSTORE DUP5 SWAP1 PUSH4 0x95EA7B3 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71C DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0x1BFC JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH4 0xA9059CBB CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A205265636F6E63696C69617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x37B7103330B4B632B217 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x8D0 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP6 SWAP1 SSTORE SWAP3 DUP4 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD DUP5 SWAP1 SSTORE PUSH1 0x4 DUP4 ADD DUP5 SWAP1 SSTORE PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD DUP4 DUP2 MSTORE PUSH32 0xD0B153E02E23F4F21D020465B4DAC7B1114893D05DB395ED2511F879C3AC90B4 SWAP2 ADD PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x963 DUP2 PUSH2 0x1708 JUMP JUMPDEST POP PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x981 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE PUSH1 0x9 SWAP1 SWAP2 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0x34AEEFD5030BE05FE70EEBC8866D82F935A308EB9F334CBA88F5E3BEA1A0CAE8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9F9 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x827E8BFF9F46048F8351964D2C871D09E4F4231513CF2FCB786649C68732E24F SWAP1 PUSH2 0x5E0 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA5A DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH2 0x8B3 DUP4 DUP4 PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xAD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH2 0xADE DUP3 DUP3 PUSH2 0x1796 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xAFA DUP2 PUSH2 0x1708 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB37 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE PUSH1 0x8 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A204E6F74207265676973746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x32B2103337B9103A3434B99033B0B6B297 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 SWAP1 SWAP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A20526566756E64206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3217 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x1D66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x8 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xD3F SWAP1 DUP5 SWAP1 PUSH2 0x1D66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0x21E12A7CAD0DA5928167E1084EA4D5FDF8D9AF66657A2543A9AC76A0CA081477 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDD8 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1141 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE PUSH1 0x8 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0xE7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A204E6F74207265676973746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x656420666F7220746869732067616D65 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 SWAP1 MSTORE SWAP4 DUP2 KECCAK256 SWAP1 SWAP4 ADD SLOAD DUP3 SWAP2 PUSH2 0xEBB SWAP2 PUSH2 0x1D0F JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x1D47 JUMP JUMPDEST PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xF0B SWAP1 DUP4 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA9 SWAP2 SWAP1 PUSH2 0x1BFC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFB7 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1038 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0x10B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A205061796F7574206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3217 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE PUSH1 0x7 ADD DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x557809284DA7314475B1582804AE28E5F1349EFC1FE970EA25D50FCE75EB4F43 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x22427047E1A674A9AFF59700A2C8D00EA96E017DDF9236690BDEDF1F21F28D9D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMPDEST PUSH2 0x8B3 DUP4 PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE PUSH1 0x9 SWAP1 SWAP2 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE MLOAD PUSH32 0x34AEEFD5030BE05FE70EEBC8866D82F935A308EB9F334CBA88F5E3BEA1A0CAE8 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x11BA DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0x125A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE PUSH1 0x9 SWAP1 SWAP2 ADD DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE SWAP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 ADD MSTORE PUSH32 0x5621C8071929C7265CE41857BE957499346FCBD5C32E82130F48E0907449D1E6 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x5621C8071929C7265CE41857BE957499346FCBD5C32E82130F48E0907449D1E6 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x12CA DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH2 0x8B3 DUP4 DUP4 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0x134A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A20556E617574686F72697A6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 EQ PUSH2 0x13AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A2047616D6520636C6F7365642E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD GT PUSH2 0x1424 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A2047616D652066756C6C2E2020 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x2A393C9030B3B0B4B717 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x8 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A20416C72656164792072656769 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA32B932B217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x1509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A2047616D65206E6F7420666F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x373217 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND PUSH4 0x23B872DD CALLER PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x159A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15D2 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0x1639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A204D75737420617070726F7665 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x103932B3B4B9BA3930BA34B7B7103332B297 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1658 SWAP1 DUP3 SWAP1 CALLER SWAP1 PUSH2 0x180E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1673 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP12 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND OR SWAP1 SSTORE DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP4 ADD DUP7 SWAP1 SSTORE DUP3 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SWAP3 SSTORE MLOAD DUP8 DUP2 MSTORE PUSH32 0x9E5237C6A8BB45DF74799CF138EBDA4FED0574BED906DA41387ACDC4A3CBE3D8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1658 DUP2 CALLER PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x171C DUP3 DUP3 PUSH2 0xD97 JUMP JUMPDEST PUSH2 0xADE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1752 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x17A0 DUP3 DUP3 PUSH2 0xD97 JUMP JUMPDEST ISZERO PUSH2 0xADE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1807 DUP3 DUP5 PUSH2 0x1D66 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1835 SWAP1 DUP5 SWAP1 PUSH2 0x1D0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x8 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x187B SWAP1 DUP5 SWAP1 PUSH2 0x1D0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH31 0x7DC6AB80CC84C043B7B8D4FCAFC802187470087F7EA7FCCD2E17AECD0256A1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x18C4 DUP3 DUP3 PUSH2 0xD97 JUMP JUMPDEST PUSH2 0xADE JUMPI PUSH2 0x18DC DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x191E JUMP JUMPDEST PUSH2 0x18E7 DUP4 PUSH1 0x20 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18F8 SWAP3 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x8AA SWAP2 PUSH1 0x4 ADD PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x192D DUP4 PUSH1 0x2 PUSH2 0x1D47 JUMP JUMPDEST PUSH2 0x1938 SWAP1 PUSH1 0x2 PUSH2 0x1D0F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x195E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1988 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x19B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x19EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1A12 DUP5 PUSH1 0x2 PUSH2 0x1D47 JUMP JUMPDEST PUSH2 0x1A1D SWAP1 PUSH1 0x1 PUSH2 0x1D0F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1AB1 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1A5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A83 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1AAA DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP1 POP PUSH2 0x1A20 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B2D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1807 DUP3 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B4A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1B53 DUP5 PUSH2 0x1B00 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1B6A DUP2 PUSH2 0x1DDA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B86 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1807 DUP2 PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BBB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1BCB PUSH1 0x20 DUP5 ADD PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1807 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0D JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C2B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1C42 PUSH1 0x40 DUP8 ADD PUSH2 0x1B00 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x1C59 DUP2 PUSH2 0x1DDA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1C9F DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D7D JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1CD0 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D7D JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1CFB DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH2 0x1D22 PUSH2 0x1DC4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D42 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D61 JUMPI PUSH2 0x1D61 PUSH2 0x1DC4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D78 JUMPI PUSH2 0x1D78 PUSH2 0x1DC4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1DA7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1DBC JUMPI PUSH2 0x1DBC PUSH2 0x1DC4 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1658 JUMPI PUSH1 0x0 DUP1 REVERT INVALID BALANCE BALANCE 0xFC DUP12 0xEB 0x48 0xB8 SWAP6 NOT PUSH27 0xD34F21C86AFDF6A989A5CD911181952DBF8DFCF181923C13B5ABBC DUP6 SDIV 0xD TIMESTAMP PUSH16 0x9500A16CFD9F7D94261C880B9A4E03D5 DUP5 0xD2 DUP13 MOD SDIV SWAP13 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xBA PUSH1 0x9C 0xB9 0x2E OR MULMOD 0x49 0xB2 PUSH19 0xF9B6760AAA336C13FE7580E96EFE3D7F2B597 0x4A SUB PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "179:10647:0:-:0;;;1435:2;1409:28;;;;1503:23;;:2;:23;:::i;:::-;1480:46;;1560:235;;;;;;;;;-1:-1:-1;1584:44:0;2072:4:1;719:10:6;1584::0;:44::i;:::-;1638:40;715:27;719:10:6;1584::0;:44::i;1638:40::-;1688:37;786:24;719:10:6;1584::0;:44::i;1688:37::-;1736:5;:20;;-1:-1:-1;;;;;;1736:20:0;719:10:6;1736:20:0;;;1784:4;1767:14;:21;179:10647;;7244:233:1;7327:22;7335:4;7341:7;7327;:22::i;:::-;7322:149;;7365:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7365:29:1;;;;;;;;;:36;;-1:-1:-1;;7365:36:1;7397:4;7365:36;;;7447:12;719:10:6;;640:96;7447:12:1;-1:-1:-1;;;;;7420:40:1;7438:7;-1:-1:-1;;;;;7420:40:1;7432:4;7420:40;;;;;;;;;;7322:149;7244:233;;:::o;2895:145::-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:1;;;;;;;;;;;;2895:145;;;;;:::o;14:422:11:-;103:1;146:5;103:1;160:270;181:7;171:8;168:21;160:270;;;240:4;236:1;232:6;228:17;222:4;219:27;216:2;;;249:18;;:::i;:::-;299:7;289:8;285:22;282:2;;;319:16;;;;282:2;398:22;;;;358:15;;;;160:270;;;164:3;78:358;;;;;:::o;441:131::-;501:5;530:36;557:8;551:4;530:36;:::i;:::-;521:45;511:61;-1:-1:-1;;;511:61:11:o;577:806::-;626:5;656:8;646:2;;-1:-1:-1;697:1:11;711:5;;646:2;745:4;735:2;;-1:-1:-1;782:1:11;796:5;;735:2;827:4;845:1;840:59;;;;913:1;908:130;;;;820:218;;840:59;870:1;861:10;;884:5;;;908:130;945:3;935:8;932:17;929:2;;;952:18;;:::i;:::-;-1:-1:-1;;1008:1:11;994:16;;1023:5;;820:218;;1122:2;1112:8;1109:16;1103:3;1097:4;1094:13;1090:36;1084:2;1074:8;1071:16;1066:2;1060:4;1057:12;1053:35;1050:77;1047:2;;;-1:-1:-1;1159:19:11;;;1191:5;;1047:2;1238:34;1263:8;1257:4;1238:34;:::i;:::-;1308:6;1304:1;1300:6;1296:19;1287:7;1284:32;1281:2;;;1319:18;;:::i;:::-;1357:20;;636:747;-1:-1:-1;;;636:747:11:o;1388:127::-;1449:10;1444:3;1440:20;1437:1;1430:31;1480:4;1477:1;1470:15;1504:4;1501:1;1494:15;1420:95;179:10647:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14535:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:11"
															},
															"nodeType": "YulIf",
															"src": "111:2:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:11",
														"type": ""
													}
												],
												"src": "14:173:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:11"
															},
															"nodeType": "YulIf",
															"src": "272:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:11",
														"type": ""
													}
												],
												"src": "192:196:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "494:292:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "540:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "549:6:11"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "557:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "542:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "542:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "515:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "524:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "511:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "511:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "536:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "507:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "507:32:11"
															},
															"nodeType": "YulIf",
															"src": "504:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "575:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "585:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "585:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "575:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "623:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "650:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "661:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "646:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "646:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "633:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "633:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "623:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "674:45:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "704:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "715:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "700:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "700:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "687:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "687:32:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "678:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "750:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "728:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:28:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "728:28:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "765:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "775:5:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "765:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "444:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "455:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "467:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "475:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "483:6:11",
														"type": ""
													}
												],
												"src": "393:393:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "869:177:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "915:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "924:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "932:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "917:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "917:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "917:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "890:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "899:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "886:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "886:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "911:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "882:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "882:32:11"
															},
															"nodeType": "YulIf",
															"src": "879:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "950:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "969:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "963:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "954:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1010:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "988:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "988:28:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "988:28:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1025:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1035:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1025:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "835:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "846:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "858:6:11",
														"type": ""
													}
												],
												"src": "791:255:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1121:120:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1167:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1176:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1169:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1169:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1169:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1142:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1151:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1138:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1138:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1163:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1134:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:32:11"
															},
															"nodeType": "YulIf",
															"src": "1131:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1202:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1225:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1212:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1212:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1202:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1087:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1098:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1110:6:11",
														"type": ""
													}
												],
												"src": "1051:190:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1333:177:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1379:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1388:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1396:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1381:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1381:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1381:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1354:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1375:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:32:11"
															},
															"nodeType": "YulIf",
															"src": "1343:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1414:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1437:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1424:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1424:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1414:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1456:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1489:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1500:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1485:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1485:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1466:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1291:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1302:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1314:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1322:6:11",
														"type": ""
													}
												],
												"src": "1246:264:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1584:237:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1630:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1639:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1647:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1632:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1632:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1632:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1605:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1614:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1601:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1626:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1597:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:32:11"
															},
															"nodeType": "YulIf",
															"src": "1594:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1665:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1691:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1678:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1669:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1765:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1774:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1782:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1767:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1767:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1767:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1723:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1734:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1745:3:11",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1750:10:11",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1741:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1741:20:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1730:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1730:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1720:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1720:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1713:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1713:51:11"
															},
															"nodeType": "YulIf",
															"src": "1710:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1800:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1810:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1800:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1550:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1561:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1573:6:11",
														"type": ""
													}
												],
												"src": "1515:306:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1896:120:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1942:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1951:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1959:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1944:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1944:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1944:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1917:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1913:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1913:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1938:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1909:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:32:11"
															},
															"nodeType": "YulIf",
															"src": "1906:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1977:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2000:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1987:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1987:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1862:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1873:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1885:6:11",
														"type": ""
													}
												],
												"src": "1826:190:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2102:113:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2148:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2157:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2165:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2150:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2150:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2150:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2123:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2132:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2119:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2119:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2144:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2115:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:32:11"
															},
															"nodeType": "YulIf",
															"src": "2112:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2183:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2199:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2193:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2193:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2068:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2079:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2091:6:11",
														"type": ""
													}
												],
												"src": "2021:194:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2307:177:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2353:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2362:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2370:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2355:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2355:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2355:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2328:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2324:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2324:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2349:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2320:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:32:11"
															},
															"nodeType": "YulIf",
															"src": "2317:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2388:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2411:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2398:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2388:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2430:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2463:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2474:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2459:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2459:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2440:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2440:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2265:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2276:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2288:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2296:6:11",
														"type": ""
													}
												],
												"src": "2220:264:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2624:396:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2671:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2680:6:11"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2688:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2673:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2673:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2673:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2666:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:33:11"
															},
															"nodeType": "YulIf",
															"src": "2634:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2706:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2716:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2706:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2748:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2775:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2786:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2771:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2771:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2758:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2758:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2748:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2799:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2832:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2843:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2828:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2828:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2809:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2809:38:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2799:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2856:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2883:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2894:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2879:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2879:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2866:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2866:32:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2856:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2907:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2937:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2948:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2933:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2933:19:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2920:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:33:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2911:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2984:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2962:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:28:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2962:28:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2999:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3009:5:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2558:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2569:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2581:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2589:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2597:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2605:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2613:6:11",
														"type": ""
													}
												],
												"src": "2489:531:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3414:397:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3431:3:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3436:25:11",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3424:38:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3471:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3491:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3485:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3485:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3475:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3533:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3541:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3552:3:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3557:2:11",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3548:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3548:12:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3562:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3507:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3507:62:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3592:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3597:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3588:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:16:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3582:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3624:2:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3628:2:11",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3620:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3620:11:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3633:19:11",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:40:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:40:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3662:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3684:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3678:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:13:11"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "3666:8:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3726:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3734:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3722:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3722:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3745:2:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3749:2:11",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3741:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3741:11:11"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "3754:8:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3700:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:63:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3700:63:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3772:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3787:2:11"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "3791:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3783:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3783:17:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3802:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3779:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3779:26:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3772:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3382:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3387:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3395:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3406:3:11",
														"type": ""
													}
												],
												"src": "3025:786:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3917:102:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3927:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3939:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3950:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3935:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3935:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3927:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3969:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3984:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4000:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4005:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3996:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3996:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4009:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3992:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3992:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3980:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3980:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3962:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3962:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3962:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3886:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3897:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3908:4:11",
														"type": ""
													}
												],
												"src": "3816:203:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4181:218:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4191:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4203:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4199:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4199:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4191:4:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4226:29:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4244:3:11",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4249:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4240:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4240:11:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4253:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4236:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4236:19:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4230:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4271:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4286:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4294:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4282:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4264:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4264:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4264:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4318:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4329:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4314:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4314:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4338:6:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4346:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4334:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4334:15:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:43:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4307:43:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4370:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4381:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4366:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4366:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4386:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4359:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4359:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4134:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4145:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4153:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4161:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4172:4:11",
														"type": ""
													}
												],
												"src": "4024:375:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4618:145:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4628:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4640:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4651:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4636:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4636:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4628:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4670:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4685:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4701:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4706:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4697:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4697:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4710:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4693:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4693:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4681:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4663:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4734:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4745:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4730:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4730:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4750:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4723:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4723:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4723:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4579:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4590:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4598:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4609:4:11",
														"type": ""
													}
												],
												"src": "4404:359:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4897:145:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4907:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4919:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4930:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4915:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4907:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4949:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4964:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4980:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4985:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4976:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4976:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4989:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4972:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4972:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4960:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4960:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4942:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4942:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5013:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5024:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5009:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5009:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5029:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5002:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5002:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4858:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4869:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4877:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4888:4:11",
														"type": ""
													}
												],
												"src": "4768:274:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5198:204:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5208:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5220:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5231:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5216:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5216:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5208:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5250:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5265:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5281:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5286:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5277:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5277:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5290:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5273:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5273:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5261:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5261:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5243:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5243:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5243:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5314:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5325:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5310:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5310:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5330:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5303:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5303:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5303:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5357:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5368:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5353:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5353:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "5387:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5380:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5380:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5373:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5373:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5346:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5346:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5346:50:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5151:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5162:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5170:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5178:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5189:4:11",
														"type": ""
													}
												],
												"src": "5047:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5502:92:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5512:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5524:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5535:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5520:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5520:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5512:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5554:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5579:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5572:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5572:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5565:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5565:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5547:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5547:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5471:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5482:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5493:4:11",
														"type": ""
													}
												],
												"src": "5407:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5722:135:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5732:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5744:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5755:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5740:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5740:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5732:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5774:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5799:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5792:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5792:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5785:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5785:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5767:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5767:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5767:41:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5828:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5839:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5824:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5824:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5844:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5817:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5817:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5817:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5683:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5694:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5702:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5713:4:11",
														"type": ""
													}
												],
												"src": "5599:258:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6125:380:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6135:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6147:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:3:11",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6143:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6143:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6135:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6178:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6203:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6196:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6196:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6189:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6189:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:41:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6232:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6243:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6228:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6228:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6248:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6221:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6221:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6221:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6275:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6286:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6271:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6271:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6291:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6264:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6264:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6318:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6329:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6314:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6314:18:11"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6334:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6307:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6307:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6361:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6372:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6357:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6357:19:11"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6378:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6350:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6350:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6350:35:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6405:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6416:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6401:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6401:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nodeType": "YulIdentifier",
																				"src": "6426:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6442:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6447:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6438:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6438:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6451:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6434:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6434:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6422:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6422:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6394:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6394:61:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6394:61:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6475:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6486:3:11",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6471:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6471:19:11"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "6492:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6464:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6464:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6464:35:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6046:9:11",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "6057:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6065:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6073:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6081:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6089:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6097:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6105:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6116:4:11",
														"type": ""
													}
												],
												"src": "5862:643:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6611:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6621:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6633:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6644:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6629:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6629:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6621:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6663:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6674:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6656:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6656:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6656:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6580:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6591:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6602:4:11",
														"type": ""
													}
												],
												"src": "6510:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6858:204:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6868:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6880:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6891:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6876:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6868:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6910:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6925:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6941:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6946:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6937:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6937:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6950:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6933:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6933:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6921:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6921:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6903:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6903:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6903:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6974:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6985:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6970:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6970:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "7004:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6997:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6997:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6990:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6990:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6963:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6963:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7033:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7044:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7029:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7029:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7049:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7022:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7022:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7022:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1978_t_bool_t_uint256__to_t_address_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6811:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6822:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6830:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6838:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6849:4:11",
														"type": ""
													}
												],
												"src": "6692:370:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7188:262:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7205:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7216:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7198:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7198:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7198:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7228:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7248:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7242:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7242:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7232:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7275:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7286:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7271:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7271:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7291:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7264:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7264:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7264:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7333:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7341:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7329:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7329:15:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7350:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7361:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7346:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7346:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7366:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7307:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7307:66:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7307:66:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7382:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7398:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7417:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7425:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7413:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7413:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7434:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7430:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7430:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7409:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7409:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7394:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7394:45:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7441:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7390:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7382:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7157:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7168:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7179:4:11",
														"type": ""
													}
												],
												"src": "7067:383:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7629:182:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7646:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7657:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7639:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7639:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7680:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7691:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7676:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7676:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7669:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7669:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7669:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7719:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7730:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7715:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7715:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7735:34:11",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7708:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7708:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7708:62:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7779:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7791:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7802:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7787:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7787:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7779:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7606:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7620:4:11",
														"type": ""
													}
												],
												"src": "7455:356:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7990:182:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8007:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8018:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8000:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8041:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8052:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8037:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8037:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8057:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8030:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8080:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8091:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8076:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8076:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8096:34:11",
																		"type": "",
																		"value": "Trophy King Arcade: Game closed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8069:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8069:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8069:62:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8140:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8152:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8163:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8148:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8140:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3147508d713f5a0416c0b9397acc0c7db67afd004656b898ef9a7aadad32b0ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7967:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7981:4:11",
														"type": ""
													}
												],
												"src": "7816:356:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8351:229:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8368:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8379:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8361:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8361:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8361:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8402:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8413:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8398:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8398:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8418:2:11",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8391:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8391:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8391:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8441:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8452:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8437:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8437:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8457:34:11",
																		"type": "",
																		"value": "Trophy King Arcade: Already regi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8430:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8430:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8512:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8523:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8508:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8528:9:11",
																		"type": "",
																		"value": "stered."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8501:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8501:37:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8547:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8559:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8570:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8555:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8555:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8547:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_39f6ad3a7ba6df7f1bd7790fcaefdbe707fc60fa099bee994b9d93fd1123c24c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8328:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8342:4:11",
														"type": ""
													}
												],
												"src": "8177:403:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:240:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8776:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8769:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8769:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8769:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8810:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8821:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8806:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8806:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8826:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8799:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8799:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8799:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8849:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8860:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8845:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8845:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8865:34:11",
																		"type": "",
																		"value": "Trophy King Arcade: Must approve"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8838:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8838:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8838:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8920:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8931:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8916:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8916:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8936:20:11",
																		"type": "",
																		"value": " registration fee."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8909:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8909:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8909:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8966:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8978:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8989:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8974:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8974:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8966:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_757df3aca1a1c0adbe7add59c897e665a7e972e40c26169ae2b9960374a84d83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8736:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8750:4:11",
														"type": ""
													}
												],
												"src": "8585:414:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9178:224:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9195:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9206:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9188:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9188:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9229:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9240:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9225:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9225:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9245:2:11",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9218:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9218:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9218:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9268:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9279:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9264:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9264:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9284:34:11",
																		"type": "",
																		"value": "Trophy King Arcade: Payout faile"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9257:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9257:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9257:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9339:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9350:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9335:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9335:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9355:4:11",
																		"type": "",
																		"value": "d."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9328:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9328:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9328:32:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9369:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9381:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9392:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9377:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9377:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9369:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93b188d26c0f37e2823e295e6c8f577c6581e30bb2fd55261ffb6fb624e99f18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9155:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9169:4:11",
														"type": ""
													}
												],
												"src": "9004:398:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9581:238:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9598:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9609:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9591:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9591:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9591:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9632:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9643:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9628:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9628:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9648:2:11",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9621:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9621:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9621:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9671:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9682:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9667:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9667:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9687:34:11",
																		"type": "",
																		"value": "Trophy King Arcade: Not register"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9660:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9660:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9660:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9742:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9753:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9738:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9738:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9758:18:11",
																		"type": "",
																		"value": "ed for this game"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9731:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9731:46:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9731:46:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9786:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9798:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9809:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9794:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9794:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9786:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae12d68cb90f20b0d133f70a3a8f97b96ec1725ea66930b92c795330ec4e1b2e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9558:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9572:4:11",
														"type": ""
													}
												],
												"src": "9407:412:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9998:232:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10015:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10026:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10008:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10008:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10008:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10049:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10060:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10045:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10045:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10065:2:11",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10038:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10038:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10038:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10088:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10099:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10084:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10084:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10104:34:11",
																		"type": "",
																		"value": "Trophy King Arcade: Game full.  "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10077:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10077:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10077:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10159:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10170:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10155:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10155:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10175:12:11",
																		"type": "",
																		"value": "Try again."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10148:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10148:40:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10148:40:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10197:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10209:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10220:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10205:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10205:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10197:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d67db45e25e45128e972499cd5e2f048a2288ba2b56fc714cdb6f6fba6c95241__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9975:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9989:4:11",
														"type": ""
													}
												],
												"src": "9824:406:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10409:225:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10426:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10437:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10419:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10419:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10419:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10460:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10471:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10456:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10456:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10476:2:11",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10449:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10449:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10449:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10499:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10510:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10495:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10495:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10515:34:11",
																		"type": "",
																		"value": "Trophy King Arcade: Game not fou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10488:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10488:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10488:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10570:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10581:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10566:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10566:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10586:5:11",
																		"type": "",
																		"value": "nd."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10559:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10559:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10559:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10601:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10613:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10624:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10609:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10609:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10601:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc0f7ef317f79a478ce2f0f5bc392d176cd738d07b68b36645f9677e62b68e9f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10386:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10400:4:11",
														"type": ""
													}
												],
												"src": "10235:399:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10813:232:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10830:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10841:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10823:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10823:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10823:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10864:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10875:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10860:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10860:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10880:2:11",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10853:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10853:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10853:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10903:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10914:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10899:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10899:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10919:34:11",
																		"type": "",
																		"value": "Trophy King Arcade: Reconciliati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10892:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10892:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10892:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10974:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10985:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10970:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10970:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10990:12:11",
																		"type": "",
																		"value": "on failed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10963:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10963:40:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10963:40:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11012:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11024:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11035:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11020:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11020:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11012:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b35d33254f1144795ed9e913b20c719e8155b39790b55609f72cbcc8a314ee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10790:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10804:4:11",
														"type": ""
													}
												],
												"src": "10639:406:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11224:223:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11241:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11252:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11234:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11234:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11234:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11275:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11286:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11271:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11271:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11291:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11264:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11264:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11264:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11314:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11325:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11310:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11310:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11330:34:11",
																		"type": "",
																		"value": "Trophy King Arcade: Unauthorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11303:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11303:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11303:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11385:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11396:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11381:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11381:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11401:3:11",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11374:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11374:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11374:31:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11414:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11426:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11437:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11422:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11422:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11414:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e58036a9a85e0ff3f290e73b4e692a530d20a26bcd7f7164c38ae84b13bd5f10__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11201:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11215:4:11",
														"type": ""
													}
												],
												"src": "11050:397:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11626:239:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11643:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11654:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11636:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11636:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11636:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11677:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11688:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11673:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11673:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11693:2:11",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11666:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11666:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11666:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11716:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11727:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11712:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11712:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11732:34:11",
																		"type": "",
																		"value": "Trophy King Arcade: Not register"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11705:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11705:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11705:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11787:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11798:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11783:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11783:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11803:19:11",
																		"type": "",
																		"value": "ed for this game."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11776:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11776:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11832:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11844:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11855:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11840:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11840:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11832:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8476f6de5c6ff2c50776cc215cd09f73b5d88379dbf65821b397a78399f15ea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11603:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11617:4:11",
														"type": ""
													}
												],
												"src": "11452:413:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12044:224:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12061:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12072:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12054:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12054:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12054:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12095:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12106:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12091:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12091:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12111:2:11",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12084:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12084:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12084:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12134:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12145:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12130:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12130:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12150:34:11",
																		"type": "",
																		"value": "Trophy King Arcade: Refund faile"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12123:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12123:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12123:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12205:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12216:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12201:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12201:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12221:4:11",
																		"type": "",
																		"value": "d."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12194:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12194:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12194:32:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12235:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12247:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12258:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12243:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12243:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12235:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e85a8c2eacb2c795304c1ccf2f876604537ff8637a554b73c978582d5d39df6c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12021:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12035:4:11",
														"type": ""
													}
												],
												"src": "11870:398:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12447:237:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12464:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12475:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12457:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12457:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12457:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12498:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12509:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12494:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12494:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12514:2:11",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12487:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12487:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12487:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12537:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12548:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12533:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12533:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12553:34:11",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12526:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12526:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12526:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12608:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12619:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12604:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12604:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12624:17:11",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12597:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12597:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12597:45:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12651:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12663:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12674:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12659:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12659:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12651:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12424:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12438:4:11",
														"type": ""
													}
												],
												"src": "12273:411:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12790:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12800:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12812:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12823:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12808:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12808:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12800:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12842:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12853:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12835:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12835:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12835:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12759:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12770:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12781:4:11",
														"type": ""
													}
												],
												"src": "12689:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13028:188:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13038:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13050:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13061:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13046:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13046:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13038:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13080:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13091:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13073:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13073:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13073:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13118:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13129:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13114:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13114:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13138:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13154:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13159:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13150:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13150:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13163:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13146:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13146:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13134:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13134:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13107:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13107:60:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13107:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13187:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13198:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13183:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13183:18:11"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13203:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13176:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13176:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13176:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12981:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12992:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13000:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13008:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13019:4:11",
														"type": ""
													}
												],
												"src": "12871:345:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13269:80:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13296:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13298:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13298:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13298:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13285:1:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13292:1:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13288:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13288:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13282:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13282:13:11"
															},
															"nodeType": "YulIf",
															"src": "13279:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13327:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13338:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13341:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13334:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13334:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13327:3:11"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13252:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13255:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13261:3:11",
														"type": ""
													}
												],
												"src": "13221:128:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13400:171:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13431:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "13452:1:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13459:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13464:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "13455:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13455:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13445:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13445:31:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13445:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13496:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13499:4:11",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13489:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13489:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13489:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "13524:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13527:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13517:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13517:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13517:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13420:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13413:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13413:9:11"
															},
															"nodeType": "YulIf",
															"src": "13410:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13551:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13560:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13563:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13556:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13556:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13551:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13385:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13388:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13394:1:11",
														"type": ""
													}
												],
												"src": "13354:217:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13628:116:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13687:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13689:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13689:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13689:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13659:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13652:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13652:9:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13645:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13645:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13667:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13678:1:11",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "13674:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13674:6:11"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13682:1:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "13670:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13670:14:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13664:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13664:21:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13641:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13641:45:11"
															},
															"nodeType": "YulIf",
															"src": "13638:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13718:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13733:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13736:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13729:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13729:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13718:7:11"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13607:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13610:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13616:7:11",
														"type": ""
													}
												],
												"src": "13576:168:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13798:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13820:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13822:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13822:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13822:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13814:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13817:1:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13811:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13811:8:11"
															},
															"nodeType": "YulIf",
															"src": "13808:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13851:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13863:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13866:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13859:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13859:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13851:4:11"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13780:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13783:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13789:4:11",
														"type": ""
													}
												],
												"src": "13749:125:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13932:205:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13942:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13951:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13946:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14011:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14036:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14041:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14032:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14032:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14055:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14060:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14051:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14051:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14045:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14045:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14025:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14025:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14025:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13972:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13975:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13969:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13969:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13983:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13985:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13994:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13997:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13990:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13990:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13985:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13965:3:11",
																"statements": []
															},
															"src": "13961:113:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14100:31:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14113:3:11"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14118:6:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14109:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14109:16:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14127:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14102:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14102:27:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14102:27:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14089:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14092:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14086:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14086:13:11"
															},
															"nodeType": "YulIf",
															"src": "14083:2:11"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13910:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13915:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13920:6:11",
														"type": ""
													}
												],
												"src": "13879:258:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14189:89:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14216:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14218:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14218:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14218:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14209:5:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14202:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14202:13:11"
															},
															"nodeType": "YulIf",
															"src": "14199:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14247:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14258:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14269:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14265:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14265:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14254:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14254:18:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14247:3:11"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14171:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14181:3:11",
														"type": ""
													}
												],
												"src": "14142:136:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14315:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14332:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14339:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14344:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14335:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14335:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14325:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14325:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14325:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14372:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14375:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14365:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14365:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14365:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14396:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14399:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14389:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14389:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14389:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14283:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14457:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14511:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14520:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14523:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14513:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14513:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14513:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14480:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "14501:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "14494:6:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14494:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14487:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14487:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14477:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14477:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14470:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14470:40:11"
															},
															"nodeType": "YulIf",
															"src": "14467:2:11"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14446:5:11",
														"type": ""
													}
												],
												"src": "14415:118:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        validator_revert_bool(value)\n        value4 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bool__to_t_address_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1978_t_bool_t_uint256__to_t_address_t_bool_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3147508d713f5a0416c0b9397acc0c7db67afd004656b898ef9a7aadad32b0ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Game closed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_39f6ad3a7ba6df7f1bd7790fcaefdbe707fc60fa099bee994b9d93fd1123c24c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Already regi\")\n        mstore(add(headStart, 96), \"stered.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_757df3aca1a1c0adbe7add59c897e665a7e972e40c26169ae2b9960374a84d83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Must approve\")\n        mstore(add(headStart, 96), \" registration fee.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_93b188d26c0f37e2823e295e6c8f577c6581e30bb2fd55261ffb6fb624e99f18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Payout faile\")\n        mstore(add(headStart, 96), \"d.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ae12d68cb90f20b0d133f70a3a8f97b96ec1725ea66930b92c795330ec4e1b2e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Not register\")\n        mstore(add(headStart, 96), \"ed for this game\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d67db45e25e45128e972499cd5e2f048a2288ba2b56fc714cdb6f6fba6c95241__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Game full.  \")\n        mstore(add(headStart, 96), \"Try again.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dc0f7ef317f79a478ce2f0f5bc392d176cd738d07b68b36645f9677e62b68e9f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Game not fou\")\n        mstore(add(headStart, 96), \"nd.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e2b35d33254f1144795ed9e913b20c719e8155b39790b55609f72cbcc8a314ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Reconciliati\")\n        mstore(add(headStart, 96), \"on failed.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e58036a9a85e0ff3f290e73b4e692a530d20a26bcd7f7164c38ae84b13bd5f10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Unauthorized\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e8476f6de5c6ff2c50776cc215cd09f73b5d88379dbf65821b397a78399f15ea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Not register\")\n        mstore(add(headStart, 96), \"ed for this game.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e85a8c2eacb2c795304c1ccf2f876604537ff8637a554b73c978582d5d39df6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Refund faile\")\n        mstore(add(headStart, 96), \"d.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101d95760003560e01c806391d1485411610104578063b9888d89116100a2578063d547741f11610071578063d547741f14610514578063e6f091f914610527578063f207564e1461055a578063f336ee3c1461056d57600080fd5b8063b9888d8914610448578063c18e397e1461045b578063c46ed45a14610470578063ccaf237f1461047957600080fd5b80639d00c61e116100de5780639d00c61e146103795780639f512e22146103cb578063a217fddf146103de578063b22c376d146103e657600080fd5b806391d148541461033e57806399597b70146103515780639c6236831461036657600080fd5b80632ba671001161017c57806336568abe1161014b57806336568abe146102da5780633e16518f146102ed5780637ad226dc146103005780638da5cb5b1461031357600080fd5b80632ba67100146102985780632d6ef310146102ab5780632f2ff15d146102be578063313ce567146102d157600080fd5b806309a18635116101b857806309a186351461022e578063248a55a114610241578063248a9ca3146102545780632ac5016f1461028557600080fd5b8062f5544f146101de57806301ffc9a7146101f357806306602a481461021b575b600080fd5b6101f16101ec366004611b91565b610580565b005b610206610201366004611bd4565b6105ec565b60405190151581526020015b60405180910390f35b6101f1610229366004611b36565b610623565b6101f161023c366004611b1c565b610711565b6101f161024f366004611b91565b6108b8565b610277610262366004611b91565b60009081526020819052604090206001015490565b604051908152602001610212565b6101f1610293366004611b91565b61094b565b6101f16102a6366004611ba9565b610969565b6101f16102b9366004611b91565b6109e1565b6101f16102cc366004611ba9565b610a3f565b61027760035481565b6101f16102e8366004611ba9565b610a64565b6101f16102fb366004611b1c565b610ae2565b6101f161030e366004611ba9565b610b1f565b600654610326906001600160a01b031681565b6040516001600160a01b039091168152602001610212565b61020661034c366004611ba9565b610d97565b610277600080516020611e0983398151915281565b6101f1610374366004611ba9565b610dc0565b6103b4610387366004611b1c565b6001600160a01b031660009081526001602081905260409091208054910154600160a01b90910460ff1691565b604080519215158352602083019190915201610212565b6101f16103d9366004611b91565b61114a565b610277600081565b6104236103f4366004611b1c565b600160208190526000918252604090912080549101546001600160a01b03821691600160a01b900460ff169083565b604080516001600160a01b039094168452911515602084015290820152606001610212565b610206610456366004611ba9565b6111a0565b610277600080516020611de983398151915281565b61027760045481565b6104d4610487366004611b91565b6002602081905260009182526040909120805460018201549282015460038301546004840154600585015460069095015460ff90941695949293919290916001600160a01b039091169087565b604080519715158852602088019690965294860193909352606085019190915260808401526001600160a01b031660a083015260c082015260e001610212565b6101f1610522366004611ba9565b6112af565b610206610535366004611b1c565b6001600160a01b0316600090815260016020526040902054600160a01b900460ff1690565b6101f1610568366004611b91565b6112d4565b6101f161057b366004611c14565b61165b565b600080516020611e0983398151915261059881611708565b600082815260026020526040908190206001600490910155517f651a9760985edc53055bf2462cb4437b9be3de87aa3eecf2c05782e8b58eba19906105e09084815260200190565b60405180910390a15050565b60006001600160e01b03198216637965db0b60e01b148061061d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080516020611de983398151915261063b81611708565b6001600160a01b038416600081815260016020819052604090912090810185905580546001600160a81b031916600160a01b851515026001600160a01b0319161782179055849063095ea7b3336040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526000196024820152604401602060405180830381600087803b1580156106d157600080fd5b505af11580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190611b75565b505050505050565b600061071c81611708565b6001600160a01b038281166000908152600160205260408082205490516370a0823160e01b8152306004820152919216906370a082319060240160206040518083038186803b15801561076e57600080fd5b505afa158015610782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a69190611bfc565b905080156108b3576001600160a01b038381166000908152600160205260409020541663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561081757600080fd5b505af115801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f9190611b75565b6108b35760405162461bcd60e51b815260206004820152602a60248201527f54726f706879204b696e67204172636164653a205265636f6e63696c6961746960448201526937b7103330b4b632b21760b11b60648201526084015b60405180910390fd5b505050565b600080516020611e098339815191526108d081611708565b6000828152600260208181526040808420805460ff191681556001810185905592830184905560038301849055600483018490556005830180546001600160a01b0319169055600690920192909255518381527fd0b153e02e23f4f21d020465b4dac7b1114893d05db395ed2511f879c3ac90b491016105e0565b600080516020611de983398151915261096381611708565b50600455565b600080516020611e0983398151915261098181611708565b60008381526002602090815260408083206001600160a01b0386168085526009909101835281842093909355519182527f34aeefd5030be05fe70eebc8866d82f935a308eb9f334cba88f5e3bea1a0cae8910160405180910390a1505050565b600080516020611e098339815191526109f981611708565b60008281526002602052604080822060040191909155517f827e8bff9f46048f8351964d2c871d09e4f4231513cf2fcb786649c68732e24f906105e09084815260200190565b600082815260208190526040902060010154610a5a81611708565b6108b38383611712565b6001600160a01b0381163314610ad45760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016108aa565b610ade8282611796565b5050565b600080516020611de9833981519152610afa81611708565b506001600160a01b03166000908152600160205260409020805460ff60a01b19169055565b600080516020611e09833981519152610b3781611708565b60008381526002602052604090205460ff166108b35760008381526002602090815260408083206001600160a01b0386168452600801909152902054600114610bdc5760405162461bcd60e51b815260206004820152603160248201527f54726f706879204b696e67204172636164653a204e6f7420726567697374657260448201527032b2103337b9103a3434b99033b0b6b29760791b60648201526084016108aa565b600083815260026020908152604080832060058101546001600160a01b039081168552600190935292819020546003840154915163a9059cbb60e01b8152868416600482015260248101929092529091169063a9059cbb90604401602060405180830381600087803b158015610c5157600080fd5b505af1158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c899190611b75565b610ce05760405162461bcd60e51b815260206004820152602260248201527f54726f706879204b696e67204172636164653a20526566756e64206661696c65604482015261321760f11b60648201526084016108aa565b8060030154816006016000828254610cf89190611d66565b90915550506001600160a01b038316600090815260078201602090815260408083208390556008840190915281208190556001808301805491929091610d3f908490611d66565b90915550506003810154604080518681526001600160a01b038616602082015280820192909252517f21e12a7cad0da5928167e1084ea4d5fdf8d9af66657a2543a9ac76a0ca0814779181900360600190a150505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020611e09833981519152610dd881611708565b60008381526002602052604090205460ff166111415760008381526002602090815260408083206001600160a01b0386168452600801909152902054600114610e7c5760405162461bcd60e51b815260206004820152603060248201527f54726f706879204b696e67204172636164653a204e6f7420726567697374657260448201526f656420666f7220746869732067616d6560801b60648201526084016108aa565b600580546004546000868152600260209081526040808320909501546001600160a01b03168252600190819052938120909301548291610ebb91611d0f565b600087815260026020526040902060060154610ed79190611d47565b610ee19190611d27565b610eeb9190611d27565b60008581526002602052604081206006015491925090610f0b90836117fb565b6000868152600260209081526040808320600501546001600160a01b03908116845260019092528083205490516370a0823160e01b815230600482015293945091929116906370a082319060240160206040518083038186803b158015610f7157600080fd5b505afa158015610f85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa99190611bfc565b905081811015610fb7578091505b6000868152600260209081526040808320600501546001600160a01b03908116845260019092529182902054915163a9059cbb60e01b815287821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561102457600080fd5b505af1158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190611b75565b6110b35760405162461bcd60e51b815260206004820152602260248201527f54726f706879204b696e67204172636164653a205061796f7574206661696c65604482015261321760f11b60648201526084016108aa565b60008681526002602090815260408083206001600160a01b03891684526007018252918290205491519182527f557809284da7314475b1582804ae28e5f1349efc1fe970ea25d50fce75eb4f43910160405180910390a16040518281527f22427047e1a674a9aff59700a2c8d00ea96e017ddf9236690bdedf1f21f28d9d9060200160405180910390a15050505b6108b3836109e1565b60008181526002602090815260408083203380855260099091018352818420939093558051928352517f34aeefd5030be05fe70eebc8866d82f935a308eb9f334cba88f5e3bea1a0cae89281900390910190a150565b6000600080516020611e098339815191526111ba81611708565b60008481526002602090815260408083206001600160a01b038716845260090190915290205460011461125a5760008481526002602090815260408083206001600160a01b038716808552600990910183529281902060019081905581519384529183018790528201527f5621c8071929c7265ce41857be957499346fcbd5c32e82130f48e0907449d1e69060600160405180910390a1600191506112a8565b604080516001600160a01b03851681526020810186905260008183015290517f5621c8071929c7265ce41857be957499346fcbd5c32e82130f48e0907449d1e69181900360600190a1600091505b5092915050565b6000828152602081905260409020600101546112ca81611708565b6108b38383611796565b600081815260026020908152604080832033845260090190915290205460011461134a5760405162461bcd60e51b815260206004820152602160248201527f54726f706879204b696e67204172636164653a20556e617574686f72697a65646044820152601760f91b60648201526084016108aa565b6000818152600260205260409020600401546001146113ab5760405162461bcd60e51b815260206004820181905260248201527f54726f706879204b696e67204172636164653a2047616d6520636c6f7365642e60448201526064016108aa565b60008181526002602081905260409091206001810154910154116114245760405162461bcd60e51b815260206004820152602a60248201527f54726f706879204b696e67204172636164653a2047616d652066756c6c2e20206044820152692a393c9030b3b0b4b71760b11b60648201526084016108aa565b60008181526002602090815260408083203384526008019091529020541561149e5760405162461bcd60e51b815260206004820152602760248201527f54726f706879204b696e67204172636164653a20416c7265616479207265676960448201526639ba32b932b21760c91b60648201526084016108aa565b600081815260026020819052604090912001546115095760405162461bcd60e51b815260206004820152602360248201527f54726f706879204b696e67204172636164653a2047616d65206e6f7420666f7560448201526237321760e91b60648201526084016108aa565b6000818152600260209081526040808320600501546001600160a01b039081168452600190925290912054166323b872dd336000848152600260205260409081902060030154905160e084901b6001600160e01b03191681526001600160a01b0390921660048301523060248301526044820152606401602060405180830381600087803b15801561159a57600080fd5b505af11580156115ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d29190611b75565b6116395760405162461bcd60e51b815260206004820152603260248201527f54726f706879204b696e67204172636164653a204d75737420617070726f7665604482015271103932b3b4b9ba3930ba34b7b7103332b29760711b60648201526084016108aa565b600081815260026020526040902060030154611658908290339061180e565b50565b600080516020611e0983398151915261167381611708565b600086815260026020818152604080842060016004820181905560068201869055600382018b90556005820180546001600160a01b0319166001600160a01b038c16179055810194909455918301869055825460ff191685151517909255518781527f9e5237c6a8bb45df74799cf138ebda4fed0574bed906da41387acdc4a3cbe3d8910160405180910390a1505050505050565b61165881336118ba565b61171c8282610d97565b610ade576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556117523390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6117a08282610d97565b15610ade576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006118078284611d66565b9392505050565b60008381526002602052604081206001808201805492939192909190611835908490611d0f565b90915550506001600160a01b038316600090815260078201602090815260408083208590556008840190915281206001905560068201805484929061187b908490611d0f565b909155505060405184815233907e7dc6ab80cc84c043b7b8d4fcafc802187470087f7ea7fccd2e17aecd0256a19060200160405180910390a250505050565b6118c48282610d97565b610ade576118dc816001600160a01b0316601461191e565b6118e783602061191e565b6040516020016118f8929190611c67565b60408051601f198184030181529082905262461bcd60e51b82526108aa91600401611cdc565b6060600061192d836002611d47565b611938906002611d0f565b67ffffffffffffffff81111561195e57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611988576020820181803683370190505b509050600360fc1b816000815181106119b157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106119ee57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506000611a12846002611d47565b611a1d906001611d0f565b90505b6001811115611ab1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611a5f57634e487b7160e01b600052603260045260246000fd5b1a60f81b828281518110611a8357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c93611aaa81611dad565b9050611a20565b5083156118075760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016108aa565b80356001600160a01b0381168114611b1757600080fd5b919050565b600060208284031215611b2d578081fd5b61180782611b00565b600080600060608486031215611b4a578182fd5b611b5384611b00565b9250602084013591506040840135611b6a81611dda565b809150509250925092565b600060208284031215611b86578081fd5b815161180781611dda565b600060208284031215611ba2578081fd5b5035919050565b60008060408385031215611bbb578182fd5b82359150611bcb60208401611b00565b90509250929050565b600060208284031215611be5578081fd5b81356001600160e01b031981168114611807578182fd5b600060208284031215611c0d578081fd5b5051919050565b600080600080600060a08688031215611c2b578081fd5b8535945060208601359350611c4260408701611b00565b9250606086013591506080860135611c5981611dda565b809150509295509295909350565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611c9f816017850160208801611d7d565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611cd0816028840160208801611d7d565b01602801949350505050565b6020815260008251806020840152611cfb816040850160208701611d7d565b601f01601f19169190910160400192915050565b60008219821115611d2257611d22611dc4565b500190565b600082611d4257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611d6157611d61611dc4565b500290565b600082821015611d7857611d78611dc4565b500390565b60005b83811015611d98578181015183820152602001611d80565b83811115611da7576000848401525b50505050565b600081611dbc57611dbc611dc4565b506000190190565b634e487b7160e01b600052601160045260246000fd5b801515811461165857600080fdfe3131fc8beb48b895197ad34f21c86afdf6a989a5cd911181952dbf8dfcf181923c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059ca264697066735822122028ba609cb92e170949b2720f9b6760aaa336c13fe7580e96efe3d7f2b5974a0364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xB9888D89 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xE6F091F9 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xF207564E EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xF336EE3C EQ PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB9888D89 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xC18E397E EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xC46ED45A EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xCCAF237F EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D00C61E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x9D00C61E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x9F512E22 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0xB22C376D EQ PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x99597B70 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x9C623683 EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BA67100 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x3E16518F EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x7AD226DC EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BA67100 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x2D6EF310 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9A18635 GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x9A18635 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x248A55A1 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x2AC5016F EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF5544F EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x6602A48 EQ PUSH2 0x21B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x206 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BD4 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B36 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x711 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x277 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xA3F JUMP JUMPDEST PUSH2 0x277 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x326 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xD97 JUMP JUMPDEST PUSH2 0x277 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x3B4 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST PUSH2 0x277 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x423 PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x206 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x277 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x277 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4D4 PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP6 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 ISZERO ISZERO DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x212 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST PUSH2 0x206 PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x568 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x12D4 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x57B CALLDATASIZE PUSH1 0x4 PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x165B JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x598 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE MLOAD PUSH32 0x651A9760985EDC53055BF2462CB4437B9BE3DE87AA3EECF2C05782E8B58EBA19 SWAP1 PUSH2 0x5E0 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x61D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x63B DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD DUP6 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xA0 SHL DUP6 ISZERO ISZERO MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR DUP3 OR SWAP1 SSTORE DUP5 SWAP1 PUSH4 0x95EA7B3 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x709 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71C DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x76E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0x1BFC JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x8B3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH4 0xA9059CBB CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x82B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84F SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0x8B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A205265636F6E63696C69617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x37B7103330B4B632B217 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x8D0 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP6 SWAP1 SSTORE SWAP3 DUP4 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD DUP5 SWAP1 SSTORE PUSH1 0x4 DUP4 ADD DUP5 SWAP1 SSTORE PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 SSTORE MLOAD DUP4 DUP2 MSTORE PUSH32 0xD0B153E02E23F4F21D020465B4DAC7B1114893D05DB395ED2511F879C3AC90B4 SWAP2 ADD PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x963 DUP2 PUSH2 0x1708 JUMP JUMPDEST POP PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x981 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE PUSH1 0x9 SWAP1 SWAP2 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0x34AEEFD5030BE05FE70EEBC8866D82F935A308EB9F334CBA88F5E3BEA1A0CAE8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9F9 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x827E8BFF9F46048F8351964D2C871D09E4F4231513CF2FCB786649C68732E24F SWAP1 PUSH2 0x5E0 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA5A DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH2 0x8B3 DUP4 DUP4 PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xAD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH2 0xADE DUP3 DUP3 PUSH2 0x1796 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DE9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xAFA DUP2 PUSH2 0x1708 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB37 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8B3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE PUSH1 0x8 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A204E6F74207265676973746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x32B2103337B9103A3434B99033B0B6B297 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 SWAP1 SWAP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC89 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A20526566756E64206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3217 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x1D66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x8 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0xD3F SWAP1 DUP5 SWAP1 PUSH2 0x1D66 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0x21E12A7CAD0DA5928167E1084EA4D5FDF8D9AF66657A2543A9AC76A0CA081477 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xDD8 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1141 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE PUSH1 0x8 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0xE7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A204E6F74207265676973746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x656420666F7220746869732067616D65 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x4 SLOAD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 SWAP1 MSTORE SWAP4 DUP2 KECCAK256 SWAP1 SWAP4 ADD SLOAD DUP3 SWAP2 PUSH2 0xEBB SWAP2 PUSH2 0x1D0F JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x1D47 JUMP JUMPDEST PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH2 0xEEB SWAP2 SWAP1 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xF0B SWAP1 DUP4 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFA9 SWAP2 SWAP1 PUSH2 0x1BFC JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFB7 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1038 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0x10B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A205061796F7574206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3217 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE PUSH1 0x7 ADD DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x557809284DA7314475B1582804AE28E5F1349EFC1FE970EA25D50FCE75EB4F43 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x22427047E1A674A9AFF59700A2C8D00EA96E017DDF9236690BDEDF1F21F28D9D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMPDEST PUSH2 0x8B3 DUP4 PUSH2 0x9E1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE PUSH1 0x9 SWAP1 SWAP2 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD SWAP3 DUP4 MSTORE MLOAD PUSH32 0x34AEEFD5030BE05FE70EEBC8866D82F935A308EB9F334CBA88F5E3BEA1A0CAE8 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x11BA DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0x125A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE PUSH1 0x9 SWAP1 SWAP2 ADD DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP5 MSTORE SWAP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP3 ADD MSTORE PUSH32 0x5621C8071929C7265CE41857BE957499346FCBD5C32E82130F48E0907449D1E6 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP2 POP PUSH2 0x12A8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0x5621C8071929C7265CE41857BE957499346FCBD5C32E82130F48E0907449D1E6 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x12CA DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH2 0x8B3 DUP4 DUP4 PUSH2 0x1796 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x9 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ PUSH2 0x134A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A20556E617574686F72697A6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 EQ PUSH2 0x13AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A2047616D6520636C6F7365642E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 ADD SLOAD GT PUSH2 0x1424 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A2047616D652066756C6C2E2020 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x2A393C9030B3B0B4B717 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x8 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A20416C72656164792072656769 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x39BA32B932B217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x1509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A2047616D65206E6F7420666F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x373217 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD AND PUSH4 0x23B872DD CALLER PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x159A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15D2 SWAP2 SWAP1 PUSH2 0x1B75 JUMP JUMPDEST PUSH2 0x1639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A204D75737420617070726F7665 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x103932B3B4B9BA3930BA34B7B7103332B297 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8AA JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1658 SWAP1 DUP3 SWAP1 CALLER SWAP1 PUSH2 0x180E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1673 DUP2 PUSH2 0x1708 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD DUP7 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP12 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND OR SWAP1 SSTORE DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP4 ADD DUP7 SWAP1 SSTORE DUP3 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SWAP3 SSTORE MLOAD DUP8 DUP2 MSTORE PUSH32 0x9E5237C6A8BB45DF74799CF138EBDA4FED0574BED906DA41387ACDC4A3CBE3D8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1658 DUP2 CALLER PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x171C DUP3 DUP3 PUSH2 0xD97 JUMP JUMPDEST PUSH2 0xADE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1752 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x17A0 DUP3 DUP3 PUSH2 0xD97 JUMP JUMPDEST ISZERO PUSH2 0xADE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1807 DUP3 DUP5 PUSH2 0x1D66 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1835 SWAP1 DUP5 SWAP1 PUSH2 0x1D0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x8 DUP5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x187B SWAP1 DUP5 SWAP1 PUSH2 0x1D0F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH31 0x7DC6AB80CC84C043B7B8D4FCAFC802187470087F7EA7FCCD2E17AECD0256A1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x18C4 DUP3 DUP3 PUSH2 0xD97 JUMP JUMPDEST PUSH2 0xADE JUMPI PUSH2 0x18DC DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x191E JUMP JUMPDEST PUSH2 0x18E7 DUP4 PUSH1 0x20 PUSH2 0x191E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18F8 SWAP3 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x8AA SWAP2 PUSH1 0x4 ADD PUSH2 0x1CDC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x192D DUP4 PUSH1 0x2 PUSH2 0x1D47 JUMP JUMPDEST PUSH2 0x1938 SWAP1 PUSH1 0x2 PUSH2 0x1D0F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x195E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1988 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x19B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x19EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1A12 DUP5 PUSH1 0x2 PUSH2 0x1D47 JUMP JUMPDEST PUSH2 0x1A1D SWAP1 PUSH1 0x1 PUSH2 0x1D0F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1AB1 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1A5F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A83 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1AAA DUP2 PUSH2 0x1DAD JUMP JUMPDEST SWAP1 POP PUSH2 0x1A20 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8AA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B2D JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1807 DUP3 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B4A JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1B53 DUP5 PUSH2 0x1B00 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1B6A DUP2 PUSH2 0x1DDA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B86 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1807 DUP2 PUSH2 0x1DDA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BBB JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1BCB PUSH1 0x20 DUP5 ADD PUSH2 0x1B00 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1807 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0D JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C2B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1C42 PUSH1 0x40 DUP8 ADD PUSH2 0x1B00 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x1C59 DUP2 PUSH2 0x1DDA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x1C9F DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D7D JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x1CD0 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1D7D JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1CFB DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1D7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D22 JUMPI PUSH2 0x1D22 PUSH2 0x1DC4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D42 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D61 JUMPI PUSH2 0x1D61 PUSH2 0x1DC4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D78 JUMPI PUSH2 0x1D78 PUSH2 0x1DC4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1DA7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1DBC JUMPI PUSH2 0x1DBC PUSH2 0x1DC4 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1658 JUMPI PUSH1 0x0 DUP1 REVERT INVALID BALANCE BALANCE 0xFC DUP12 0xEB 0x48 0xB8 SWAP6 NOT PUSH27 0xD34F21C86AFDF6A989A5CD911181952DBF8DFCF181923C13B5ABBC DUP6 SDIV 0xD TIMESTAMP PUSH16 0x9500A16CFD9F7D94261C880B9A4E03D5 DUP5 0xD2 DUP13 MOD SDIV SWAP13 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xBA PUSH1 0x9C 0xB9 0x2E OR MULMOD 0x49 0xB2 PUSH19 0xF9B6760AAA336C13FE7580E96EFE3D7F2B597 0x4A SUB PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "179:10647:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7203:142;;;;;;:::i;:::-;;:::i;:::-;;2606:202:1;;;;;;:::i;:::-;;:::i;:::-;;;5572:14:11;;5565:22;5547:41;;5535:2;5520:18;2606:202:1;;;;;;;;4533:582:0;;;;;;:::i;:::-;;:::i;3515:372::-;;;;;;:::i;:::-;;:::i;6682:142::-;;;;;;:::i;:::-;;:::i;4391:129:1:-;;;;;;:::i;:::-;4465:7;4491:12;;;;;;;;;;:22;;;;4391:129;;;;6656:25:11;;;6644:2;6629:18;4391:129:1;6611:76:11;4052:128:0;;;;;;:::i;:::-;;:::i;9035:172::-;;;;;;:::i;:::-;;:::i;5577:144::-;;;;;;:::i;:::-;;:::i;4770:145:1:-;;;;;;:::i;:::-;;:::i;1409:28:0:-;;;;;;5787:214:1;;;;;;:::i;:::-;;:::i;5277:149:0:-;;;;;;:::i;:::-;;:::i;8189:679::-;;;;;;:::i;:::-;;:::i;1533:20::-;;;;;-1:-1:-1;;;;;1533:20:0;;;;;;-1:-1:-1;;;;;3980:32:11;;;3962:51;;3950:2;3935:18;1533:20:0;3917:102:11;2895:145:1;;;;;;:::i;:::-;;:::i;748:62:0:-;;-1:-1:-1;;;;;;;;;;;748:62:0;;9413:1011;;;;;;:::i;:::-;;:::i;1879:201::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1977:35:0;1944:4;1977:35;;;:20;:35;;;;;;;;:42;;2021:51;;;-1:-1:-1;;;1977:42:0;;;;;;1879:201;;;;;5792:14:11;;5785:22;5767:41;;5839:2;5824:18;;5817:34;;;;5740:18;1879:201:0;5722:135:11;6908:144:0;;;;;;:::i;:::-;;:::i;2027:49:1:-;;2072:4;2027:49;;1292:59:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1292:59:0;;;-1:-1:-1;;;1292:59:0;;;;;;;;;;;-1:-1:-1;;;;;6921:32:11;;;6903:51;;6997:14;;6990:22;6985:2;6970:18;;6963:50;7029:18;;;7022:34;6891:2;6876:18;1292:59:0;6858:204:11;7511:406:0;;;;;;:::i;:::-;;:::i;674:68::-;;-1:-1:-1;;;;;;;;;;;674:68:0;;1444:29;;;;;;1358:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1358:44:0;;;;;;;;;;6196:14:11;;6189:22;6171:41;;6243:2;6228:18;;6221:34;;;;6271:18;;;6264:34;;;;6329:2;6314:18;;6307:34;;;;6372:3;6357:19;;6350:35;-1:-1:-1;;;;;6422:32:11;6442:3;6401:19;;6394:61;6486:3;6471:19;;6464:35;6158:3;6143:19;1358:44:0;6125:380:11;5149:147:1;;;;;;:::i;:::-;;:::i;2169:136:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;2256:35:0;2233:4;2256:35;;;:20;:35;;;;;:42;-1:-1:-1;;;2256:42:0;;;;;2169:136;2512:845;;;;;;:::i;:::-;;:::i;5987:536::-;;;;;;:::i;:::-;;:::i;7203:142::-;-1:-1:-1;;;;;;;;;;;2505:16:1;2516:4;2505:10;:16::i;:::-;7277:17:0::1;::::0;;;:8:::1;:17;::::0;;;;;;7304:1:::1;7277:24;::::0;;::::1;:28:::0;7321:17;::::1;::::0;::::1;::::0;7286:7;6656:25:11;;6644:2;6629:18;;6611:76;7321:17:0::1;;;;;;;;7203:142:::0;;:::o;2606:202:1:-;2691:4;-1:-1:-1;;;;;;2714:47:1;;-1:-1:-1;;;2714:47:1;;:87;;-1:-1:-1;;;;;;;;;;937:40:8;;;2765:36:1;2707:94;2606:202;-1:-1:-1;;2606:202:1:o;4533:582:0:-;-1:-1:-1;;;;;;;;;;;2505:16:1;2516:4;2505:10;:16::i;:::-;-1:-1:-1;;;;;4661:35:0;::::1;;::::0;;;:20:::1;:35;::::0;;;;;;;:51;;::::1;:69:::0;;;4740:52;;-1:-1:-1;;;;;;4868:80:0;-1:-1:-1;;;4740:52:0;::::1;;;-1:-1:-1::0;;;;;;4868:80:0;;;::::1;::::0;;4661:35;;4958:56:::1;719:10:6::0;4958:150:0::1;::::0;-1:-1:-1;;;;;;4958:150:0::1;::::0;;;;;;-1:-1:-1;;;;;4681:32:11;;;4958:150:0::1;::::0;::::1;4663:51:11::0;-1:-1:-1;;4730:18:11;;;4723:34;4636:18;;4958:150:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2531:1:1;4533:582:0::0;;;;:::o;3515:372::-;2072:4:1;2505:16;2072:4;2505:10;:16::i;:::-;-1:-1:-1;;;;;3620:34:0;;::::1;3602:15;3620:34:::0;;;:20:::1;:34;::::0;;;;;:47;:72;;-1:-1:-1;;;3620:72:0;;3686:4:::1;3620:72;::::0;::::1;3962:51:11::0;3602:15:0;;3620:47:::1;::::0;:57:::1;::::0;3935:18:11;;3620:72:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3602:90:::0;-1:-1:-1;3707:11:0;;3703:178:::1;;-1:-1:-1::0;;;;;3742:36:0;;::::1;;::::0;;;:20:::1;:36;::::0;;;;:49;::::1;:58;719:10:6::0;3742:81:0::1;::::0;-1:-1:-1;;;;;;3742:81:0::1;::::0;;;;;;-1:-1:-1;;;;;4681:32:11;;;3742:81:0::1;::::0;::::1;4663:51:11::0;4730:18;;;4723:34;;;4636:18;;3742:81:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3734:136;;;::::0;-1:-1:-1;;;3734:136:0;;10841:2:11;3734:136:0::1;::::0;::::1;10823:21:11::0;10880:2;10860:18;;;10853:30;10919:34;10899:18;;;10892:62;-1:-1:-1;;;10970:18:11;;;10963:40;11020:19;;3734:136:0::1;;;;;;;;;2531:1:1;3515:372:0::0;;:::o;6682:142::-;-1:-1:-1;;;;;;;;;;;2505:16:1;2516:4;2505:10;:16::i;:::-;6765:17:0::1;::::0;;;:8:::1;:17;::::0;;;;;;;6758:24;;-1:-1:-1;;6758:24:0::1;::::0;;-1:-1:-1;6758:24:0;::::1;::::0;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;6758:24:0::1;::::0;;::::1;::::0;;::::1;::::0;;;;6798:19;6656:25:11;;;6798:19:0::1;::::0;6629:18:11;6798:19:0::1;6611:76:11::0;4052:128:0;-1:-1:-1;;;;;;;;;;;2505:16:1;2516:4;2505:10;:16::i;:::-;-1:-1:-1;4146:14:0::1;:27:::0;4052:128::o;9035:172::-;-1:-1:-1;;;;;;;;;;;2505:16:1;2516:4;2505:10;:16::i;:::-;9163:1:0::1;9129:17:::0;;;:8:::1;:17;::::0;;;;;;;-1:-1:-1;;;;;9129:31:0;::::1;::::0;;;:23:::1;::::0;;::::1;:31:::0;;;;;:35;;;;9180:20;3962:51:11;;;9180:20:0::1;::::0;3935:18:11;9180:20:0::1;;;;;;;9035:172:::0;;;:::o;5577:144::-;-1:-1:-1;;;;;;;;;;;2505:16:1;2516:4;2505:10;:16::i;:::-;5679:1:0::1;5652:17:::0;;;:8:::1;:17;::::0;;;;;:24:::1;;:28:::0;;;;5696:18;::::1;::::0;::::1;::::0;5661:7;6656:25:11;;6644:2;6629:18;;6611:76;4770:145:1;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4883:25:::1;4894:4;4900:7;4883:10;:25::i;5787:214::-:0;-1:-1:-1;;;;;5882:23:1;;719:10:6;5882:23:1;5874:83;;;;-1:-1:-1;;;5874:83:1;;12475:2:11;5874:83:1;;;12457:21:11;12514:2;12494:18;;;12487:30;12553:34;12533:18;;;12526:62;-1:-1:-1;;;12604:18:11;;;12597:45;12659:19;;5874:83:1;12447:237:11;5874:83:1;5968:26;5980:4;5986:7;5968:11;:26::i;:::-;5787:214;;:::o;5277:149:0:-;-1:-1:-1;;;;;;;;;;;2505:16:1;2516:4;2505:10;:16::i;:::-;-1:-1:-1;;;;;;5369:35:0::1;5414:5;5369:35:::0;;;:20:::1;:35;::::0;;;;:50;;-1:-1:-1;;;;5369:50:0::1;::::0;;5277:149::o;8189:679::-;-1:-1:-1;;;;;;;;;;;2505:16:1;2516:4;2505:10;:16::i;:::-;8281:17:0::1;::::0;;;:8:::1;:17;::::0;;;;:26;::::1;;8277:585;;8340:17;::::0;;;:8:::1;:17;::::0;;;;;;;-1:-1:-1;;;;;8340:30:0;::::1;::::0;;:22:::1;;:30:::0;;;;;;8374:1:::1;8340:35;8332:97;;;::::0;-1:-1:-1;;;8332:97:0;;11654:2:11;8332:97:0::1;::::0;::::1;11636:21:11::0;11693:2;11673:18;;;11666:30;11732:34;11712:18;;;11705:62;-1:-1:-1;;;11783:18:11;;;11776:47;11840:19;;8332:97:0::1;11626:239:11::0;8332:97:0::1;8444:19;8466:17:::0;;;:8:::1;:17;::::0;;;;;;;8528:15:::1;::::0;::::1;::::0;-1:-1:-1;;;;;8528:15:0;;::::1;8506:39:::0;;:20:::1;:39:::0;;;;;;;:52;8576:19:::1;::::0;::::1;::::0;8506:90;;-1:-1:-1;;;8506:90:0;;4681:32:11;;;8506:90:0::1;::::0;::::1;4663:51:11::0;4730:18;;;4723:34;;;;8506:52:0;;::::1;::::0;:61:::1;::::0;4636:18:11;;8506:90:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8498:137;;;::::0;-1:-1:-1;;;8498:137:0;;12072:2:11;8498:137:0::1;::::0;::::1;12054:21:11::0;12111:2;12091:18;;;12084:30;12150:34;12130:18;;;12123:62;-1:-1:-1;;;12201:18:11;;;12194:32;12243:19;;8498:137:0::1;12044:224:11::0;8498:137:0::1;8667:2;:19;;;8650:2;:12;;;:37;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8702:14:0;::::1;8719:1;8702:14:::0;;;:6:::1;::::0;::::1;:14;::::0;;;;;;;:18;;;8734:7:::1;::::0;::::1;:15:::0;;;;;:19;;;8786:1:::1;8767:15:::0;;::::1;:20:::0;;8786:1;;8767:15;;:20:::1;::::0;8786:1;;8767:20:::1;:::i;:::-;::::0;;;-1:-1:-1;;8831:19:0::1;::::0;::::1;::::0;8807:44:::1;::::0;;13073:25:11;;;-1:-1:-1;;;;;13134:32:11;;13129:2;13114:18;;13107:60;13183:18;;;13176:34;;;;8807:44:0;::::1;::::0;;;;13061:2:11;8807:44:0;;::::1;8277:585;8189:679:::0;;;:::o;2895:145:1:-;2981:4;3004:12;;;;;;;;;;;-1:-1:-1;;;;;3004:29:1;;;;;;;;;;;;;;;2895:145::o;9413:1011:0:-;-1:-1:-1;;;;;;;;;;;2505:16:1;2516:4;2505:10;:16::i;:::-;9508:17:0::1;::::0;;;:8:::1;:17;::::0;;;;:26;::::1;;9504:885;;9567:17;::::0;;;:8:::1;:17;::::0;;;;;;;-1:-1:-1;;;;;9567:30:0;::::1;::::0;;:22:::1;;:30:::0;;;;;;9601:1:::1;9567:35;9559:96;;;::::0;-1:-1:-1;;;9559:96:0;;9609:2:11;9559:96:0::1;::::0;::::1;9591:21:11::0;9648:2;9628:18;;;9621:30;9687:34;9667:18;;;9660:62;-1:-1:-1;;;9738:18:11;;;9731:46;9794:19;;9559:96:0::1;9581:238:11::0;9559:96:0::1;9822:4;::::0;;9796:14:::1;::::0;9670:18:::1;9745:17:::0;;;:8:::1;:17;::::0;;;;;;;:30;;::::1;::::0;-1:-1:-1;;;;;9745:30:0::1;9723:54:::0;;:20:::1;:54:::0;;;;;;;:70;;::::1;::::0;9822:4;;9723:87:::1;::::0;::::1;:::i;:::-;9692:17;::::0;;;:8:::1;:17;::::0;;;;:27:::1;;::::0;:119:::1;::::0;;::::1;:::i;:::-;9691:128;;;;:::i;:::-;:135;;;;:::i;:::-;9840:14;9857:17:::0;;;:8:::1;:17;::::0;;;;:27:::1;;::::0;9670:156;;-1:-1:-1;9840:14:0;9857:43:::1;::::0;9670:156;9857:31:::1;:43::i;:::-;9914:24;9963:17:::0;;;:8:::1;:17;::::0;;;;;;;:30:::1;;::::0;-1:-1:-1;;;;;9963:30:0;;::::1;9941:54:::0;;:20:::1;:54:::0;;;;;;:67;:92;;-1:-1:-1;;;9941:92:0;;10027:4:::1;9941:92;::::0;::::1;3962:51:11::0;9840:60:0;;-1:-1:-1;9914:24:0;;9941:67;::::1;::::0;:77:::1;::::0;3935:18:11;;9941:92:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9914:119;;10071:6;10052:16;:25;10048:89;;;10106:16;10097:25;;10048:89;10159:54;10181:17:::0;;;:8:::1;:17;::::0;;;;;;;:30:::1;;::::0;-1:-1:-1;;;;;10181:30:0;;::::1;10159:54:::0;;:20:::1;:54:::0;;;;;;;:67;:92;;-1:-1:-1;;;10159:92:0;;4681:32:11;;;10159:92:0::1;::::0;::::1;4663:51:11::0;4730:18;;;4723:34;;;10159:67:0;::::1;::::0;:76:::1;::::0;4636:18:11;;10159:92:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10151:139;;;::::0;-1:-1:-1;;;10151:139:0;;9206:2:11;10151:139:0::1;::::0;::::1;9188:21:11::0;9245:2;9225:18;;;9218:30;9284:34;9264:18;;;9257:62;-1:-1:-1;;;9335:18:11;;;9328:32;9377:19;;10151:139:0::1;9178:224:11::0;10151:139:0::1;10314:17;::::0;;;:8:::1;:17;::::0;;;;;;;-1:-1:-1;;;;;10314:29:0;::::1;::::0;;:21:::1;;:29:::0;;;;;;;10310:34;;6656:25:11;;;10310:34:0::1;::::0;6629:18:11;10310:34:0::1;;;;;;;10364:14;::::0;6656:25:11;;;10364:14:0::1;::::0;6644:2:11;6629:18;10364:14:0::1;;;;;;;9504:885;;;;10399:18;10409:7;10399:9;:18::i;6908:144::-:0;7002:1;6962:17;;;:8;:17;;;;;;;;719:10:6;6962:37:0;;;:23;;;;:37;;;;;:41;;;;7019:26;;3962:51:11;;;7019:26:0;;;;;;;;;;;6908:144;:::o;7511:406::-;7603:4;-1:-1:-1;;;;;;;;;;;2505:16:1;2516:4;2505:10;:16::i;:::-;7623:17:0::1;::::0;;;:8:::1;:17;::::0;;;;;;;-1:-1:-1;;;;;7623:31:0;::::1;::::0;;:23:::1;;:31:::0;;;;;;7658:1:::1;7623:36;7619:292;;7675:17;::::0;;;:8:::1;:17;::::0;;;;;;;-1:-1:-1;;;;;7675:31:0;::::1;::::0;;;:23:::1;::::0;;::::1;:31:::0;;;;;;7709:1:::1;7675:35:::0;;;;7742:34;;5243:51:11;;;5310:18;;;5303:34;;;5353:18;;5346:50;7742:34:0::1;::::0;5231:2:11;5216:18;7742:34:0::1;;;;;;;7798:4;7791:11;;;;7619:292;7838:35;::::0;;-1:-1:-1;;;;;5261:32:11;;5243:51;;5325:2;5310:18;;5303:34;;;-1:-1:-1;5353:18:11;;;5346:50;7838:35:0;;::::1;::::0;;;;5231:2:11;7838:35:0;;::::1;7895:5;7888:12;;7619:292;7511:406:::0;;;;;:::o;5149:147:1:-;4465:7;4491:12;;;;;;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5263:26:::1;5275:4;5281:7;5263:11;:26::i;2512:845:0:-:0;2572:17;;;;:8;:17;;;;;;;;2596:10;2572:35;;:23;;:35;;;;;;2611:1;2572:40;2564:86;;;;-1:-1:-1;;;2564:86:0;;11252:2:11;2564:86:0;;;11234:21:11;11291:2;11271:18;;;11264:30;11330:34;11310:18;;;11303:62;-1:-1:-1;;;11381:18:11;;;11374:31;11422:19;;2564:86:0;11224:223:11;2564:86:0;2668:17;;;;:8;:17;;;;;:24;;;2696:1;2668:29;2660:74;;;;-1:-1:-1;;;2660:74:0;;8018:2:11;2660:74:0;;;8000:21:11;;;8037:18;;;8030:30;8096:34;8076:18;;;8069:62;8148:18;;2660:74:0;7990:182:11;2660:74:0;2785:17;;;;:8;:17;;;;;;;;:30;;;;2752;;;:63;2744:118;;;;-1:-1:-1;;;2744:118:0;;10026:2:11;2744:118:0;;;10008:21:11;10065:2;10045:18;;;10038:30;10104:34;10084:18;;;10077:62;-1:-1:-1;;;10155:18:11;;;10148:40;10205:19;;2744:118:0;9998:232:11;2744:118:0;2880:17;;;;:8;:17;;;;;;;;2903:10;2880:34;;:22;;:34;;;;;;:39;2872:91;;;;-1:-1:-1;;;2872:91:0;;8379:2:11;2872:91:0;;;8361:21:11;8418:2;8398:18;;;8391:30;8457:34;8437:18;;;8430:62;-1:-1:-1;;;8508:18:11;;;8501:37;8555:19;;2872:91:0;8351:229:11;2872:91:0;3014:1;2981:17;;;:8;:17;;;;;;;;:30;;2973:82;;;;-1:-1:-1;;;2973:82:0;;10437:2:11;2973:82:0;;;10419:21:11;10476:2;10456:18;;;10449:30;10515:34;10495:18;;;10488:62;-1:-1:-1;;;10566:18:11;;;10559:33;10609:19;;2973:82:0;10409:225:11;2973:82:0;3073:54;3095:17;;;:8;:17;;;;;;;;:30;;;-1:-1:-1;;;;;3095:30:0;;;3073:54;;:20;:54;;;;;;:67;;:80;719:10:6;3183:17:0;;;;:8;:17;;;;;;;:34;;;3073:145;;;;;;-1:-1:-1;;;;;;3073:145:0;;;-1:-1:-1;;;;;4282:15:11;;;3073:145:0;;;4264:34:11;3176:4:0;4314:18:11;;;4307:43;4366:18;;;4359:34;4199:18;;3073:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3065:208;;;;-1:-1:-1;;;3065:208:0;;8787:2:11;3065:208:0;;;8769:21:11;8826:2;8806:18;;;8799:30;8865:34;8845:18;;;8838:62;-1:-1:-1;;;8916:18:11;;;8909:48;8974:19;;3065:208:0;8759:240:11;3065:208:0;3315:17;;;;:8;:17;;;;;:34;;;3284:66;;3294:7;;3303:10;;3284:9;:66::i;:::-;2512:845;:::o;5987:536::-;-1:-1:-1;;;;;;;;;;;2505:16:1;2516:4;2505:10;:16::i;:::-;6148:17:0::1;::::0;;;:8:::1;:17;::::0;;;;;;;6175:1:::1;6148:24;::::0;::::1;:28:::0;;;6186:27:::1;::::0;::::1;:31:::0;;;6227:34:::1;::::0;::::1;:53:::0;;;6290:30:::1;::::0;::::1;:45:::0;;-1:-1:-1;;;;;;6290:45:0::1;-1:-1:-1::0;;;;;6290:45:0;::::1;;::::0;;6345:30;::::1;:34:::0;;;;6389:30;;::::1;:45:::0;;;6444:37;;-1:-1:-1;;6444:37:0::1;::::0;::::1;;;::::0;;;6497:19;6656:25:11;;;6497:19:0::1;::::0;6629:18:11;6497:19:0::1;;;;;;;5987:536:::0;;;;;;:::o;3334:103:1:-;3400:30;3411:4;719:10:6;3400::1;:30::i;7244:233::-;7327:22;7335:4;7341:7;7327;:22::i;:::-;7322:149;;7365:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7365:29:1;;;;;;;;;:36;;-1:-1:-1;;7365:36:1;7397:4;7365:36;;;7447:12;719:10:6;;640:96;7447:12:1;-1:-1:-1;;;;;7420:40:1;7438:7;-1:-1:-1;;;;;7420:40:1;7432:4;7420:40;;;;;;;;;;7244:233;;:::o;7602:234::-;7685:22;7693:4;7699:7;7685;:22::i;:::-;7681:149;;;7755:5;7723:12;;;;;;;;;;;-1:-1:-1;;;;;7723:29:1;;;;;;;;;;:37;;-1:-1:-1;;7723:37:1;;;7779:40;719:10:6;;7723:12:1;;7779:40;;7755:5;7779:40;7602:234;;:::o;3122:96:10:-;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:10:o;10489:335:0:-;10584:19;10606:17;;;:8;:17;;;;;10653:1;10634:15;;;:20;;10606:17;;10653:1;;10634:15;;10584:19;10634:20;;10653:1;;10634:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10664:22:0;;;;;;:6;;;:22;;;;;;;;:31;;;10705:7;;;:23;;;;;10731:1;10705:27;;10742:12;;;:22;;10689:6;;10664:22;10742;;10689:6;;10742:22;:::i;:::-;;;;-1:-1:-1;;10788:29:0;;6656:25:11;;;10797:10:0;;10788:29;;6644:2:11;6629:18;10788:29:0;;;;;;;10489:335;;;;:::o;3718:492:1:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:1;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:1;;;;;;;;;;-1:-1:-1;;;3844:349:1;;;;;;;:::i;1588:441:7:-;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;-1:-1:-1;;;1710:25:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:7;;1688:47;;-1:-1:-1;;;1745:6:7;1752:1;1745:9;;;;;;-1:-1:-1;;;1745:9:7;;;;;;;;;;;;:15;-1:-1:-1;;;;;1745:15:7;;;;;;;;;-1:-1:-1;;;1770:6:7;1777:1;1770:9;;;;;;-1:-1:-1;;;1770:9:7;;;;;;;;;;;;:15;-1:-1:-1;;;;;1770:15:7;;;;;;;;-1:-1:-1;1800:9:7;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;-1:-1:-1;;;1879:5:7;1887:3;1879:11;1866:25;;;;;-1:-1:-1;;;1866:25:7;;;;;;;;;;;;1854:6;1861:1;1854:9;;;;;;-1:-1:-1;;;1854:9:7;;;;;;;;;;;;:37;-1:-1:-1;;;;;1854:37:7;;;;;;;;-1:-1:-1;1915:1:7;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:7;;1936:55;;;;-1:-1:-1;;;1936:55:7;;7657:2:11;1936:55:7;;;7639:21:11;;;7676:18;;;7669:30;7735:34;7715:18;;;7708:62;7787:18;;1936:55:7;7629:182:11;14:173;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:393::-;467:6;475;483;536:2;524:9;515:7;511:23;507:32;504:2;;;557:6;549;542:22;504:2;585:29;604:9;585:29;:::i;:::-;575:39;;661:2;650:9;646:18;633:32;623:42;;715:2;704:9;700:18;687:32;728:28;750:5;728:28;:::i;:::-;775:5;765:15;;;494:292;;;;;:::o;791:255::-;858:6;911:2;899:9;890:7;886:23;882:32;879:2;;;932:6;924;917:22;879:2;969:9;963:16;988:28;1010:5;988:28;:::i;1051:190::-;1110:6;1163:2;1151:9;1142:7;1138:23;1134:32;1131:2;;;1184:6;1176;1169:22;1131:2;-1:-1:-1;1212:23:11;;1121:120;-1:-1:-1;1121:120:11:o;1246:264::-;1314:6;1322;1375:2;1363:9;1354:7;1350:23;1346:32;1343:2;;;1396:6;1388;1381:22;1343:2;1437:9;1424:23;1414:33;;1466:38;1500:2;1489:9;1485:18;1466:38;:::i;:::-;1456:48;;1333:177;;;;;:::o;1515:306::-;1573:6;1626:2;1614:9;1605:7;1601:23;1597:32;1594:2;;;1647:6;1639;1632:22;1594:2;1678:23;;-1:-1:-1;;;;;;1730:32:11;;1720:43;;1710:2;;1782:6;1774;1767:22;2021:194;2091:6;2144:2;2132:9;2123:7;2119:23;2115:32;2112:2;;;2165:6;2157;2150:22;2112:2;-1:-1:-1;2193:16:11;;2102:113;-1:-1:-1;2102:113:11:o;2489:531::-;2581:6;2589;2597;2605;2613;2666:3;2654:9;2645:7;2641:23;2637:33;2634:2;;;2688:6;2680;2673:22;2634:2;2729:9;2716:23;2706:33;;2786:2;2775:9;2771:18;2758:32;2748:42;;2809:38;2843:2;2832:9;2828:18;2809:38;:::i;:::-;2799:48;;2894:2;2883:9;2879:18;2866:32;2856:42;;2948:3;2937:9;2933:19;2920:33;2962:28;2984:5;2962:28;:::i;:::-;3009:5;2999:15;;;2624:396;;;;;;;;:::o;3025:786::-;3436:25;3431:3;3424:38;3406:3;3491:6;3485:13;3507:62;3562:6;3557:2;3552:3;3548:12;3541:4;3533:6;3529:17;3507:62;:::i;:::-;-1:-1:-1;;;3628:2:11;3588:16;;;3620:11;;;3613:40;3678:13;;3700:63;3678:13;3749:2;3741:11;;3734:4;3722:17;;3700:63;:::i;:::-;3783:17;3802:2;3779:26;;3414:397;-1:-1:-1;;;;3414:397:11:o;7067:383::-;7216:2;7205:9;7198:21;7179:4;7248:6;7242:13;7291:6;7286:2;7275:9;7271:18;7264:34;7307:66;7366:6;7361:2;7350:9;7346:18;7341:2;7333:6;7329:15;7307:66;:::i;:::-;7434:2;7413:15;-1:-1:-1;;7409:29:11;7394:45;;;;7441:2;7390:54;;7188:262;-1:-1:-1;;7188:262:11:o;13221:128::-;13261:3;13292:1;13288:6;13285:1;13282:13;13279:2;;;13298:18;;:::i;:::-;-1:-1:-1;13334:9:11;;13269:80::o;13354:217::-;13394:1;13420;13410:2;;-1:-1:-1;;;13445:31:11;;13499:4;13496:1;13489:15;13527:4;13452:1;13517:15;13410:2;-1:-1:-1;13556:9:11;;13400:171::o;13576:168::-;13616:7;13682:1;13678;13674:6;13670:14;13667:1;13664:21;13659:1;13652:9;13645:17;13641:45;13638:2;;;13689:18;;:::i;:::-;-1:-1:-1;13729:9:11;;13628:116::o;13749:125::-;13789:4;13817:1;13814;13811:8;13808:2;;;13822:18;;:::i;:::-;-1:-1:-1;13859:9:11;;13798:76::o;13879:258::-;13951:1;13961:113;13975:6;13972:1;13969:13;13961:113;;;14051:11;;;14045:18;14032:11;;;14025:39;13997:2;13990:10;13961:113;;;14092:6;14089:1;14086:13;14083:2;;;14127:1;14118:6;14113:3;14109:16;14102:27;14083:2;;13932:205;;;:::o;14142:136::-;14181:3;14209:5;14199:2;;14218:18;;:::i;:::-;-1:-1:-1;;;14254:18:11;;14189:89::o;14283:127::-;14344:10;14339:3;14335:20;14332:1;14325:31;14375:4;14372:1;14365:15;14399:4;14396:1;14389:15;14415:118;14501:5;14494:13;14487:21;14480:5;14477:32;14467:2;;14523:1;14520;14513:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1554800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ARCADE_MANAGER()": "infinite",
								"DEFAULT_ADMIN_ROLE()": "284",
								"GAME_MASTER()": "infinite",
								"acceptedArcadeTokens(address)": "2261",
								"addArcadeToken(address,uint256,bool)": "infinite",
								"arcadeToken(address)": "2156",
								"closeGame(uint256)": "infinite",
								"createGame(uint256,uint256,address,uint256,bool)": "infinite",
								"decimals()": "1107",
								"deleteGame(uint256)": "infinite",
								"fee_percentage()": "1084",
								"gameData(uint256)": "6325",
								"getRoleAdmin(bytes32)": "1237",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "1397",
								"isAccepted(address)": "1321",
								"leaveMatch(uint256)": "6511",
								"openGame(uint256)": "infinite",
								"owner()": "1148",
								"placePlayer(uint256,address)": "infinite",
								"reconcile(address)": "infinite",
								"refund(uint256,address)": "infinite",
								"register(uint256)": "infinite",
								"removeArcadeToken(address)": "infinite",
								"removePlayer(uint256,address)": "infinite",
								"renounceRole(bytes32,address)": "24340",
								"revokeRole(bytes32,address)": "infinite",
								"setArcadeFeePercentage(uint256)": "infinite",
								"setWinner(uint256,address)": "infinite",
								"supportsInterface(bytes4)": "495"
							},
							"internal": {
								"_register(uint256,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 10826,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 179,
									"end": 10826,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 179,
									"end": 10826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1435,
									"end": 1437,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1409,
									"end": 1437,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1409,
									"end": 1437,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1409,
									"end": 1437,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1409,
									"end": 1437,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1503,
									"end": 1526,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1503,
									"end": 1505,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1503,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1503,
									"end": 1526,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1503,
									"end": 1526,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1503,
									"end": 1526,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1480,
									"end": 1526,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1480,
									"end": 1526,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1560,
									"end": 1795,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1560,
									"end": 1795,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1560,
									"end": 1795,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1560,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1560,
									"end": 1795,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1560,
									"end": 1795,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1560,
									"end": 1795,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1560,
									"end": 1795,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1560,
									"end": 1795,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1560,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1584,
									"end": 1628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1584,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1584,
									"end": 1628,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1584,
									"end": 1628,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1584,
									"end": 1628,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1638,
									"end": 1678,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 715,
									"end": 742,
									"name": "PUSH",
									"source": 0,
									"value": "3131FC8BEB48B895197AD34F21C86AFDF6A989A5CD911181952DBF8DFCF18192"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1584,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1584,
									"end": 1628,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1638,
									"end": 1678,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1638,
									"end": 1678,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1688,
									"end": 1725,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 786,
									"end": 810,
									"name": "PUSH",
									"source": 0,
									"value": "3C13B5ABBC85050D426F9500A16CFD9F7D94261C880B9A4E03D584D28C06059C"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1584,
									"end": 1594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1584,
									"end": 1628,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1688,
									"end": 1725,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1688,
									"end": 1725,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1736,
									"end": 1741,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1736,
									"end": 1756,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1736,
									"end": 1756,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1736,
									"end": 1756,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1736,
									"end": 1756,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1736,
									"end": 1756,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1736,
									"end": 1756,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1784,
									"end": 1788,
									"name": "PUSH",
									"source": 0,
									"value": "16345785D8A0000"
								},
								{
									"begin": 1767,
									"end": 1781,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1767,
									"end": 1788,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 10826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 179,
									"end": 10826,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7327,
									"end": 7349,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7335,
									"end": 7339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7341,
									"end": 7348,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7327,
									"end": 7334,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 7327,
									"end": 7349,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 7327,
									"end": 7349,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7327,
									"end": 7349,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7377,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7394,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7397,
									"end": 7401,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7365,
									"end": 7401,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7447,
									"end": 7459,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7447,
									"end": 7459,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 7447,
									"end": 7459,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7438,
									"end": 7445,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7432,
									"end": 7436,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7420,
									"end": 7460,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7322,
									"end": 7471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7244,
									"end": 7477,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 436,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 14,
									"end": 436,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 151,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 103,
									"end": 104,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 160,
									"end": 430,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 160,
									"end": 430,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 181,
									"end": 188,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 171,
									"end": 179,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 168,
									"end": 189,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 160,
									"end": 430,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 160,
									"end": 430,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 160,
									"end": 430,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 240,
									"end": 244,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 236,
									"end": 237,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 238,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 228,
									"end": 245,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 222,
									"end": 226,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 219,
									"end": 246,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 216,
									"end": 218,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 216,
									"end": 218,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 249,
									"end": 267,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 249,
									"end": 267,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 249,
									"end": 267,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 249,
									"end": 267,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 249,
									"end": 267,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 299,
									"end": 306,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 289,
									"end": 297,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 285,
									"end": 307,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 282,
									"end": 284,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 282,
									"end": 284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 282,
									"end": 284,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 319,
									"end": 335,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 319,
									"end": 335,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 319,
									"end": 335,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 319,
									"end": 335,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 282,
									"end": 284,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 282,
									"end": 284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 398,
									"end": 420,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 398,
									"end": 420,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 398,
									"end": 420,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 398,
									"end": 420,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 358,
									"end": 373,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 358,
									"end": 373,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 358,
									"end": 373,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 358,
									"end": 373,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 160,
									"end": 430,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 160,
									"end": 430,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 160,
									"end": 430,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 160,
									"end": 430,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 164,
									"end": 167,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 78,
									"end": 436,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 78,
									"end": 436,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 78,
									"end": 436,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 78,
									"end": 436,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 78,
									"end": 436,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 78,
									"end": 436,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 441,
									"end": 572,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 441,
									"end": 572,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 501,
									"end": 506,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 530,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 557,
									"end": 565,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 551,
									"end": 555,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 530,
									"end": 566,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 530,
									"end": 566,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 530,
									"end": 566,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 530,
									"end": 566,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 566,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 511,
									"end": 572,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 511,
									"end": 572,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 577,
									"end": 1383,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 577,
									"end": 1383,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 626,
									"end": 631,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 656,
									"end": 664,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 646,
									"end": 648,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 646,
									"end": 648,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 697,
									"end": 698,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 711,
									"end": 716,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 711,
									"end": 716,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 646,
									"end": 648,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 646,
									"end": 648,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 745,
									"end": 749,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 735,
									"end": 737,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 735,
									"end": 737,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 782,
									"end": 783,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 796,
									"end": 801,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 796,
									"end": 801,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 735,
									"end": 737,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 735,
									"end": 737,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 827,
									"end": 831,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 845,
									"end": 846,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 840,
									"end": 899,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 840,
									"end": 899,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 840,
									"end": 899,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 840,
									"end": 899,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 913,
									"end": 914,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 908,
									"end": 1038,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 908,
									"end": 1038,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 908,
									"end": 1038,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 908,
									"end": 1038,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 820,
									"end": 1038,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 820,
									"end": 1038,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 840,
									"end": 899,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 840,
									"end": 899,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 870,
									"end": 871,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 861,
									"end": 871,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 861,
									"end": 871,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 884,
									"end": 889,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 884,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 884,
									"end": 889,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 908,
									"end": 1038,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 908,
									"end": 1038,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 945,
									"end": 948,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 935,
									"end": 943,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 932,
									"end": 949,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 929,
									"end": 931,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 929,
									"end": 931,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 929,
									"end": 931,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 952,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 952,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 952,
									"end": 970,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 952,
									"end": 970,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 952,
									"end": 970,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1008,
									"end": 1009,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 994,
									"end": 1010,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 994,
									"end": 1010,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1023,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1023,
									"end": 1028,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 820,
									"end": 1038,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 820,
									"end": 1038,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 820,
									"end": 1038,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1112,
									"end": 1120,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1109,
									"end": 1125,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1103,
									"end": 1106,
									"name": "PUSH",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 1097,
									"end": 1101,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1090,
									"end": 1126,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1084,
									"end": 1086,
									"name": "PUSH",
									"source": 11,
									"value": "4E"
								},
								{
									"begin": 1074,
									"end": 1082,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1071,
									"end": 1087,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1066,
									"end": 1068,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1060,
									"end": 1064,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1057,
									"end": 1069,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1053,
									"end": 1088,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1050,
									"end": 1127,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1047,
									"end": 1049,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1047,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 1047,
									"end": 1049,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1159,
									"end": 1178,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1159,
									"end": 1178,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1159,
									"end": 1178,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1191,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1191,
									"end": 1196,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1047,
									"end": 1049,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 1047,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1263,
									"end": 1271,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1257,
									"end": 1261,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1272,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1238,
									"end": 1272,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1238,
									"end": 1272,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 1238,
									"end": 1272,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1308,
									"end": 1314,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1304,
									"end": 1305,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1300,
									"end": 1306,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1315,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 1287,
									"end": 1294,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1284,
									"end": 1316,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1281,
									"end": 1283,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1281,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1281,
									"end": 1283,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1357,
									"end": 1377,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1357,
									"end": 1377,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 636,
									"end": 1383,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 636,
									"end": 1383,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1388,
									"end": 1515,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 1388,
									"end": 1515,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1449,
									"end": 1459,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 1444,
									"end": 1447,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 1440,
									"end": 1460,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1437,
									"end": 1438,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1430,
									"end": 1461,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1480,
									"end": 1484,
									"name": "PUSH",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 1477,
									"end": 1478,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1470,
									"end": 1485,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1504,
									"end": 1508,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1501,
									"end": 1502,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1494,
									"end": 1509,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1420,
									"end": 1515,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1420,
									"end": 1515,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 179,
									"end": 10826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 10826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 10826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 10826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 10826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 179,
									"end": 10826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 10826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122028ba609cb92e170949b2720f9b6760aaa336c13fe7580e96efe3d7f2b5974a0364736f6c63430008040033",
									".code": [
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "B9888D89"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "E6F091F9"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "F207564E"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "F336EE3C"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "B9888D89"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "C18E397E"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "C46ED45A"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "CCAF237F"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "9D00C61E"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "9D00C61E"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "9F512E22"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "B22C376D"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "99597B70"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "9C623683"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "2BA67100"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "3E16518F"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "7AD226DC"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "2BA67100"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "2D6EF310"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "9A18635"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "9A18635"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "248A55A1"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "2AC5016F"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "F5544F"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "6602A48"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 179,
											"end": 10826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5572,
											"end": 5586,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5565,
											"end": 5587,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5547,
											"end": 5588,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5547,
											"end": 5588,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5535,
											"end": 5537,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5520,
											"end": 5538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6611,
											"end": 6687,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1409,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1409,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1409,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1409,
											"end": 1437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1437,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3980,
											"end": 4012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4012,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4012,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3962,
											"end": 4013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3962,
											"end": 4013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 3952,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1533,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3917,
											"end": 4019,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 748,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "806DB7640BCC104A4B7B53EBC0C09B63EEFD92FE89197BC684D91AA66A17455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 748,
											"end": 810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1944,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 1997,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2012,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1977,
											"end": 2019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5792,
											"end": 5806,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5792,
											"end": 5806,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5785,
											"end": 5807,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5767,
											"end": 5808,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5767,
											"end": 5808,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5824,
											"end": 5842,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5824,
											"end": 5842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5817,
											"end": 5851,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5817,
											"end": 5851,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5817,
											"end": 5851,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5817,
											"end": 5851,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5722,
											"end": 5857,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6921,
											"end": 6953,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6921,
											"end": 6953,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6921,
											"end": 6953,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6903,
											"end": 6954,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6903,
											"end": 6954,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6997,
											"end": 7011,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6997,
											"end": 7011,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6990,
											"end": 7012,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6985,
											"end": 6987,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 7013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7029,
											"end": 7047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7029,
											"end": 7047,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7029,
											"end": 7047,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7022,
											"end": 7056,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6891,
											"end": 6893,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6858,
											"end": 7062,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 674,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 674,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "23264ABF97B17654B97D38BD81099EB2064D5CCA6DBD4E398FF8BDBAB67B82D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 674,
											"end": 742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 674,
											"end": 742,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1473,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1444,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1444,
											"end": 1473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1444,
											"end": 1473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1473,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6196,
											"end": 6210,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 6196,
											"end": 6210,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6189,
											"end": 6211,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6171,
											"end": 6212,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6171,
											"end": 6212,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6243,
											"end": 6245,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6228,
											"end": 6246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6255,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6255,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 6221,
											"end": 6255,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6271,
											"end": 6289,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6271,
											"end": 6289,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6271,
											"end": 6289,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6264,
											"end": 6298,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6264,
											"end": 6298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6264,
											"end": 6298,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6264,
											"end": 6298,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6331,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6341,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6341,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6372,
											"end": 6375,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6357,
											"end": 6376,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6376,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6350,
											"end": 6385,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6422,
											"end": 6454,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6442,
											"end": 6445,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6401,
											"end": 6420,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6394,
											"end": 6455,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6486,
											"end": 6489,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 6471,
											"end": 6490,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6471,
											"end": 6490,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6464,
											"end": 6499,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6158,
											"end": 6161,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6143,
											"end": 6162,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1358,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6125,
											"end": 6505,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2169,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2169,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2169,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2169,
											"end": 2305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2169,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2169,
											"end": 2305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2169,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2169,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2291,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2256,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2298,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2256,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2256,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2305,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "806DB7640BCC104A4B7B53EBC0C09B63EEFD92FE89197BC684D91AA66A17455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7304,
											"end": 7305,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7277,
											"end": 7301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7277,
											"end": 7301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7305,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "651A9760985EDC53055BF2462CB4437B9BE3DE87AA3EECF2C05782E8B58EBA19"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7293,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6611,
											"end": 6687,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7203,
											"end": 7345,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "23264ABF97B17654B97D38BD81099EB2064D5CCA6DBD4E398FF8BDBAB67B82D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4681,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4730,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4730,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4740,
											"end": 4792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4740,
											"end": 4792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4868,
											"end": 4948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4740,
											"end": 4792,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4740,
											"end": 4792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4740,
											"end": 4792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4740,
											"end": 4792,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4868,
											"end": 4948,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4948,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4948,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4868,
											"end": 4948,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4663,
											"end": 4714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 5108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 5115,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3640,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3667,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3962,
											"end": 4013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3617,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3677,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 3620,
											"end": 3677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3620,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3602,
											"end": 3692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3707,
											"end": 3718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3703,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3703,
											"end": 3881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4663,
											"end": 4714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3742,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10843,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10823,
											"end": 10844,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10880,
											"end": 10882,
											"name": "PUSH",
											"source": 11,
											"value": "2A"
										},
										{
											"begin": 10860,
											"end": 10878,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10860,
											"end": 10878,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10860,
											"end": 10878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10853,
											"end": 10883,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10919,
											"end": 10953,
											"name": "PUSH",
											"source": 11,
											"value": "54726F706879204B696E67204172636164653A205265636F6E63696C69617469"
										},
										{
											"begin": 10899,
											"end": 10917,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10899,
											"end": 10917,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10899,
											"end": 10917,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10892,
											"end": 10954,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7103330B4B632B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10970,
											"end": 10988,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10970,
											"end": 10988,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10970,
											"end": 10988,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10963,
											"end": 11003,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11020,
											"end": 11039,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 11020,
											"end": 11039,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3734,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3887,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6682,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "806DB7640BCC104A4B7B53EBC0C09B63EEFD92FE89197BC684D91AA66A17455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6773,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6765,
											"end": 6782,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6798,
											"end": 6817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6798,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "D0B153E02E23F4F21D020465B4DAC7B1114893D05DB395ED2511F879C3AC90B4"
										},
										{
											"begin": 6798,
											"end": 6817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6798,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6611,
											"end": 6687,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "23264ABF97B17654B97D38BD81099EB2064D5CCA6DBD4E398FF8BDBAB67B82D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4146,
											"end": 4160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4146,
											"end": 4173,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4052,
											"end": 4180,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "806DB7640BCC104A4B7B53EBC0C09B63EEFD92FE89197BC684D91AA66A17455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9163,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9137,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9146,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9129,
											"end": 9160,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9160,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9152,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9129,
											"end": 9152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9160,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9160,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9160,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9164,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9164,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3962,
											"end": 4013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3962,
											"end": 4013,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3962,
											"end": 4013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "PUSH",
											"source": 0,
											"value": "34AEEFD5030BE05FE70EEBC8866D82F935A308EB9F334CBA88F5E3BEA1A0CAE8"
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9180,
											"end": 9200,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9035,
											"end": 9207,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5577,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "806DB7640BCC104A4B7B53EBC0C09B63EEFD92FE89197BC684D91AA66A17455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5660,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5652,
											"end": 5669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5652,
											"end": 5669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5652,
											"end": 5669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5669,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5652,
											"end": 5676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5652,
											"end": 5680,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5714,
											"name": "PUSH",
											"source": 0,
											"value": "827E8BFF9F46048F8351964D2C871D09E4F4231513CF2FCB786649C68732E24F"
										},
										{
											"begin": 5696,
											"end": 5714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5696,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5696,
											"end": 5714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5661,
											"end": 5668,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6611,
											"end": 6687,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4770,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4894,
											"end": 4898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4883,
											"end": 4908,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5882,
											"end": 5905,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12477,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12478,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12514,
											"end": 12516,
											"name": "PUSH",
											"source": 11,
											"value": "2F"
										},
										{
											"begin": 12494,
											"end": 12512,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12494,
											"end": 12512,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12494,
											"end": 12512,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12487,
											"end": 12517,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12553,
											"end": 12587,
											"name": "PUSH",
											"source": 11,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12533,
											"end": 12551,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12526,
											"end": 12588,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12604,
											"end": 12622,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12604,
											"end": 12622,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12604,
											"end": 12622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12597,
											"end": 12642,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12659,
											"end": 12678,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 12659,
											"end": 12678,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 12447,
											"end": 12684,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5874,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5980,
											"end": 5984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 5979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5968,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 6001,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "23264ABF97B17654B97D38BD81099EB2064D5CCA6DBD4E398FF8BDBAB67B82D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5369,
											"end": 5404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5369,
											"end": 5404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5389,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5369,
											"end": 5404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5369,
											"end": 5404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5369,
											"end": 5404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5404,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5369,
											"end": 5419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5369,
											"end": 5419,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5277,
											"end": 5426,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "806DB7640BCC104A4B7B53EBC0C09B63EEFD92FE89197BC684D91AA66A17455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8289,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8281,
											"end": 8307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8277,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 8277,
											"end": 8862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8348,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8340,
											"end": 8370,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8370,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8362,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8340,
											"end": 8362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8370,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8340,
											"end": 8370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8375,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8340,
											"end": 8375,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11654,
											"end": 11656,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11657,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11693,
											"end": 11695,
											"name": "PUSH",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11666,
											"end": 11696,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11732,
											"end": 11766,
											"name": "PUSH",
											"source": 11,
											"value": "54726F706879204B696E67204172636164653A204E6F74207265676973746572"
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11705,
											"end": 11767,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B2103337B9103A3434B99033B0B6B297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11783,
											"end": 11801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11776,
											"end": 11823,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11840,
											"end": 11859,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 11840,
											"end": 11859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 11626,
											"end": 11865,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 8332,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8444,
											"end": 8463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8474,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8528,
											"end": 8543,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8528,
											"end": 8543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8528,
											"end": 8543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8528,
											"end": 8543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8528,
											"end": 8543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8528,
											"end": 8543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8528,
											"end": 8543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8545,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8526,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8506,
											"end": 8545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8545,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8545,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8595,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8576,
											"end": 8595,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4663,
											"end": 4714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8506,
											"end": 8558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8567,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 8506,
											"end": 8567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8506,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12072,
											"end": 12074,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12054,
											"end": 12075,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12111,
											"end": 12113,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 12091,
											"end": 12109,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12091,
											"end": 12109,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12091,
											"end": 12109,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12084,
											"end": 12114,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12150,
											"end": 12184,
											"name": "PUSH",
											"source": 11,
											"value": "54726F706879204B696E67204172636164653A20526566756E64206661696C65"
										},
										{
											"begin": 12130,
											"end": 12148,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 12130,
											"end": 12148,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12130,
											"end": 12148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12123,
											"end": 12185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12201,
											"end": 12219,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12201,
											"end": 12219,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12201,
											"end": 12219,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12194,
											"end": 12226,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12243,
											"end": 12262,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 12243,
											"end": 12262,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 12044,
											"end": 12268,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8498,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8667,
											"end": 8686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8662,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8650,
											"end": 8662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8650,
											"end": 8687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8719,
											"end": 8720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8708,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8702,
											"end": 8708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8716,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8702,
											"end": 8720,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8741,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8734,
											"end": 8741,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8753,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8786,
											"end": 8787,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8767,
											"end": 8782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8786,
											"end": 8787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8786,
											"end": 8787,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 8767,
											"end": 8787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8786,
											"end": 8787,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8786,
											"end": 8787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 8767,
											"end": 8787,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8767,
											"end": 8787,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 8767,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8787,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8831,
											"end": 8850,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8831,
											"end": 8850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8831,
											"end": 8850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13073,
											"end": 13098,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13073,
											"end": 13098,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13073,
											"end": 13098,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13134,
											"end": 13166,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13134,
											"end": 13166,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13129,
											"end": 13131,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13107,
											"end": 13167,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13183,
											"end": 13201,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13176,
											"end": 13210,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13176,
											"end": 13210,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13176,
											"end": 13210,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13176,
											"end": 13210,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "PUSH",
											"source": 0,
											"value": "21E12A7CAD0DA5928167E1084EA4D5FDF8D9AF66657A2543A9AC76A0CA081477"
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13061,
											"end": 13063,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 8277,
											"end": 8862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8868,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9413,
											"end": 10424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "806DB7640BCC104A4B7B53EBC0C09B63EEFD92FE89197BC684D91AA66A17455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9508,
											"end": 9525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9508,
											"end": 9525,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9516,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9508,
											"end": 9525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9508,
											"end": 9525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9508,
											"end": 9534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 10389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 9504,
											"end": 10389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9575,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9589,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9567,
											"end": 9589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9601,
											"end": 9602,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9567,
											"end": 9602,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9609,
											"end": 9611,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9591,
											"end": 9612,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9648,
											"end": 9650,
											"name": "PUSH",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9621,
											"end": 9651,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9687,
											"end": 9721,
											"name": "PUSH",
											"source": 11,
											"value": "54726F706879204B696E67204172636164653A204E6F74207265676973746572"
										},
										{
											"begin": 9667,
											"end": 9685,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 9667,
											"end": 9685,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9667,
											"end": 9685,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9660,
											"end": 9722,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "656420666F7220746869732067616D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9738,
											"end": 9756,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 9738,
											"end": 9756,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9738,
											"end": 9756,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9731,
											"end": 9777,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9581,
											"end": 9819,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 9559,
											"end": 9655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9822,
											"end": 9826,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9822,
											"end": 9826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9822,
											"end": 9826,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9796,
											"end": 9810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9796,
											"end": 9810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9775,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9745,
											"end": 9775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9745,
											"end": 9775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9723,
											"end": 9777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9777,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9793,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9822,
											"end": 9826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9822,
											"end": 9826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 9723,
											"end": 9810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9723,
											"end": 9810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 9723,
											"end": 9810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9723,
											"end": 9810,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 9723,
											"end": 9810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9692,
											"end": 9709,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9700,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9692,
											"end": 9709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9692,
											"end": 9709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9692,
											"end": 9709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9709,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9719,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9692,
											"end": 9719,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9719,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 9692,
											"end": 9811,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 9692,
											"end": 9811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9692,
											"end": 9811,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 9692,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9691,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 9691,
											"end": 9819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9691,
											"end": 9819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9691,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 9691,
											"end": 9819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9691,
											"end": 9819,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 9691,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9691,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 9691,
											"end": 9826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9691,
											"end": 9826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9691,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 9691,
											"end": 9826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9691,
											"end": 9826,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 9691,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9857,
											"end": 9874,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9857,
											"end": 9874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9857,
											"end": 9874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9857,
											"end": 9865,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9857,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9857,
											"end": 9874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9857,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9857,
											"end": 9874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9857,
											"end": 9874,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9857,
											"end": 9884,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9857,
											"end": 9884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9857,
											"end": 9884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9826,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9840,
											"end": 9854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9857,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 9857,
											"end": 9900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9857,
											"end": 9888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 9857,
											"end": 9900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9857,
											"end": 9900,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 9857,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9914,
											"end": 9938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9971,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9980,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9993,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9963,
											"end": 9993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9963,
											"end": 9993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9963,
											"end": 9993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9995,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9941,
											"end": 9995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9995,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 9995,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10031,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3962,
											"end": 4013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9840,
											"end": 9900,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9900,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9914,
											"end": 9938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9914,
											"end": 9938,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10018,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9941,
											"end": 10018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3935,
											"end": 3953,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 9941,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9914,
											"end": 10033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9914,
											"end": 10033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10071,
											"end": 10077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10052,
											"end": 10077,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 10048,
											"end": 10137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10106,
											"end": 10122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10097,
											"end": 10122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10048,
											"end": 10137,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 10048,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10189,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10198,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10211,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10181,
											"end": 10211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10181,
											"end": 10211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10213,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10179,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10159,
											"end": 10213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10226,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4681,
											"end": 4713,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4663,
											"end": 4714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4748,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4757,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10159,
											"end": 10226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10235,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 10159,
											"end": 10235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4636,
											"end": 4654,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10159,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9206,
											"end": 9208,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9209,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9245,
											"end": 9247,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9225,
											"end": 9243,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9218,
											"end": 9248,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9284,
											"end": 9318,
											"name": "PUSH",
											"source": 11,
											"value": "54726F706879204B696E67204172636164653A205061796F7574206661696C65"
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9257,
											"end": 9319,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9335,
											"end": 9353,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 9335,
											"end": 9353,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9328,
											"end": 9360,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9377,
											"end": 9396,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 9377,
											"end": 9396,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9178,
											"end": 9402,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 10151,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10322,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10331,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10335,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10314,
											"end": 10335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "PUSH",
											"source": 0,
											"value": "557809284DA7314475B1582804AE28E5F1349EFC1FE970EA25D50FCE75EB4F43"
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10344,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "PUSH",
											"source": 0,
											"value": "22427047E1A674A9AFF59700A2C8D00EA96E017DDF9236690BDEDF1F21F28D9D"
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10378,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 10389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 10389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 10389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 10389,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 9504,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 10409,
											"end": 10416,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10399,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7002,
											"end": 7003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6970,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6979,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6962,
											"end": 6999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6999,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6999,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 6999,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 7003,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 7003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 7003,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6962,
											"end": 7003,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3962,
											"end": 4013,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3962,
											"end": 4013,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3962,
											"end": 4013,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "PUSH",
											"source": 0,
											"value": "34AEEFD5030BE05FE70EEBC8866D82F935A308EB9F334CBA88F5E3BEA1A0CAE8"
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7045,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6908,
											"end": 7052,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7603,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "806DB7640BCC104A4B7B53EBC0C09B63EEFD92FE89197BC684D91AA66A17455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7640,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7623,
											"end": 7654,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7654,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7646,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7623,
											"end": 7646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7654,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7623,
											"end": 7654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7658,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7623,
											"end": 7659,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 7619,
											"end": 7911,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7683,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7692,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7675,
											"end": 7706,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7706,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7698,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7675,
											"end": 7698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7706,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7706,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7709,
											"end": 7710,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7675,
											"end": 7710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7675,
											"end": 7710,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5243,
											"end": 5294,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5294,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5294,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5328,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5328,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5328,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5337,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5337,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5396,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7742,
											"end": 7776,
											"name": "PUSH",
											"source": 0,
											"value": "5621C8071929C7265CE41857BE957499346FCBD5C32E82130F48E0907449D1E6"
										},
										{
											"begin": 7742,
											"end": 7776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5233,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7742,
											"end": 7776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7742,
											"end": 7776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7776,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7802,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7791,
											"end": 7802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7791,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7791,
											"end": 7802,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7911,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 7619,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5261,
											"end": 5293,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5261,
											"end": 5293,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5294,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5294,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5325,
											"end": 5327,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5310,
											"end": 5328,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5310,
											"end": 5328,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5337,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5337,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5353,
											"end": 5371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5396,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "PUSH",
											"source": 0,
											"value": "5621C8071929C7265CE41857BE957499346FCBD5C32E82130F48E0907449D1E6"
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5231,
											"end": 5233,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7838,
											"end": 7873,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 7895,
											"end": 7900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7888,
											"end": 7900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 7900,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7911,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7619,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7917,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 5149,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 5275,
											"end": 5279,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5288,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 5263,
											"end": 5289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2580,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2589,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2596,
											"end": 2606,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2607,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2572,
											"end": 2607,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2572,
											"end": 2612,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11252,
											"end": 11254,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11234,
											"end": 11255,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11291,
											"end": 11293,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 11271,
											"end": 11289,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11271,
											"end": 11289,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11271,
											"end": 11289,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11264,
											"end": 11294,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11330,
											"end": 11364,
											"name": "PUSH",
											"source": 11,
											"value": "54726F706879204B696E67204172636164653A20556E617574686F72697A6564"
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11303,
											"end": 11365,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11381,
											"end": 11399,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 11381,
											"end": 11399,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11381,
											"end": 11399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11374,
											"end": 11405,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11422,
											"end": 11441,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 11422,
											"end": 11441,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 11224,
											"end": 11447,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2564,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2676,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2668,
											"end": 2692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2692,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2697,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2668,
											"end": 2697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8020,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8000,
											"end": 8021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8000,
											"end": 8021,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8000,
											"end": 8021,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8037,
											"end": 8055,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8030,
											"end": 8060,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8096,
											"end": 8130,
											"name": "PUSH",
											"source": 11,
											"value": "54726F706879204B696E67204172636164653A2047616D6520636C6F7365642E"
										},
										{
											"begin": 8076,
											"end": 8094,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8076,
											"end": 8094,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8094,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8069,
											"end": 8131,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8148,
											"end": 8166,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8148,
											"end": 8166,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 7990,
											"end": 8172,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 2660,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2793,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2802,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2815,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2785,
											"end": 2815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2785,
											"end": 2815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2815,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10026,
											"end": 10028,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10029,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10065,
											"end": 10067,
											"name": "PUSH",
											"source": 11,
											"value": "2A"
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10038,
											"end": 10068,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10138,
											"name": "PUSH",
											"source": 11,
											"value": "54726F706879204B696E67204172636164653A2047616D652066756C6C2E2020"
										},
										{
											"begin": 10084,
											"end": 10102,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10084,
											"end": 10102,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10102,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10077,
											"end": 10139,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A393C9030B3B0B4B717"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10155,
											"end": 10173,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10155,
											"end": 10173,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10155,
											"end": 10173,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10148,
											"end": 10188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10205,
											"end": 10224,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 10205,
											"end": 10224,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9998,
											"end": 10230,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 2744,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2888,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 2913,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2914,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2902,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2880,
											"end": 2902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8379,
											"end": 8381,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8361,
											"end": 8382,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8418,
											"end": 8420,
											"name": "PUSH",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8398,
											"end": 8416,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8391,
											"end": 8421,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8457,
											"end": 8491,
											"name": "PUSH",
											"source": 11,
											"value": "54726F706879204B696E67204172636164653A20416C72656164792072656769"
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8430,
											"end": 8492,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39BA32B932B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8508,
											"end": 8526,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8508,
											"end": 8526,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8508,
											"end": 8526,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8501,
											"end": 8538,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8555,
											"end": 8574,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 8555,
											"end": 8574,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 8351,
											"end": 8580,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 2872,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2989,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2998,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 3011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10437,
											"end": 10439,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10419,
											"end": 10440,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10476,
											"end": 10478,
											"name": "PUSH",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 10456,
											"end": 10474,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10456,
											"end": 10474,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10456,
											"end": 10474,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10449,
											"end": 10479,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10515,
											"end": 10549,
											"name": "PUSH",
											"source": 11,
											"value": "54726F706879204B696E67204172636164653A2047616D65206E6F7420666F75"
										},
										{
											"begin": 10495,
											"end": 10513,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10495,
											"end": 10513,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10495,
											"end": 10513,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10488,
											"end": 10550,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "373217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10566,
											"end": 10584,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10566,
											"end": 10584,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10566,
											"end": 10584,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10559,
											"end": 10592,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10609,
											"end": 10628,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 10609,
											"end": 10628,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10409,
											"end": 10634,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 2973,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3103,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3112,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3125,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3095,
											"end": 3125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3093,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3073,
											"end": 3127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3153,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3191,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3200,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3217,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3183,
											"end": 3217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4298,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 3180,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4314,
											"end": 4332,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4314,
											"end": 4332,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4314,
											"end": 4332,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4307,
											"end": 4350,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4366,
											"end": 4384,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4366,
											"end": 4384,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4366,
											"end": 4384,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4393,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 3073,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8769,
											"end": 8790,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8799,
											"end": 8829,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8865,
											"end": 8899,
											"name": "PUSH",
											"source": 11,
											"value": "54726F706879204B696E67204172636164653A204D75737420617070726F7665"
										},
										{
											"begin": 8845,
											"end": 8863,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8845,
											"end": 8863,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8845,
											"end": 8863,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8838,
											"end": 8900,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103932B3B4B9BA3930BA34B7B7103332B297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8909,
											"end": 8957,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8974,
											"end": 8993,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 8974,
											"end": 8993,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 8759,
											"end": 8999,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 3065,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3323,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3315,
											"end": 3332,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3315,
											"end": 3332,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3332,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3332,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3349,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3315,
											"end": 3349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3284,
											"end": 3350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3294,
											"end": 3301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3313,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3303,
											"end": 3313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 3284,
											"end": 3350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3284,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 3284,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2512,
											"end": 3357,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "806DB7640BCC104A4B7B53EBC0C09B63EEFD92FE89197BC684D91AA66A17455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6156,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6165,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6148,
											"end": 6176,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6213,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6186,
											"end": 6213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6217,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6186,
											"end": 6217,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6227,
											"end": 6261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6227,
											"end": 6280,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 6227,
											"end": 6280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6227,
											"end": 6280,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6290,
											"end": 6320,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6290,
											"end": 6335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6290,
											"end": 6335,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6335,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6335,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6379,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6379,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6345,
											"end": 6379,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6419,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6419,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6434,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6434,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6444,
											"end": 6481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6481,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6481,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6481,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6481,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6481,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6444,
											"end": 6481,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6497,
											"end": 6516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6497,
											"end": 6516,
											"name": "PUSH",
											"source": 0,
											"value": "9E5237C6A8BB45DF74799CF138EBDA4FED0574BED906DA41387ACDC4A3CBE3D8"
										},
										{
											"begin": 6497,
											"end": 6516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6497,
											"end": 6516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6497,
											"end": 6516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6497,
											"end": 6516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6497,
											"end": 6516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6497,
											"end": 6516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6497,
											"end": 6516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6497,
											"end": 6516,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 6523,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 7335,
											"end": 7339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7341,
											"end": 7348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 7327,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7322,
											"end": 7471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7377,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7394,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7397,
											"end": 7401,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7401,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 7447,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7436,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7460,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7477,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7699,
											"end": 7706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7685,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 7685,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7681,
											"end": 7830,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7752,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7760,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7779,
											"end": 7819,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7836,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10489,
											"end": 10824,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 10489,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10606,
											"end": 10614,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10653,
											"end": 10654,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10634,
											"end": 10649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10634,
											"end": 10649,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10634,
											"end": 10649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10606,
											"end": 10623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10653,
											"end": 10654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10653,
											"end": 10654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10634,
											"end": 10649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10634,
											"end": 10649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10584,
											"end": 10603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10653,
											"end": 10654,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10653,
											"end": 10654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10634,
											"end": 10654,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10670,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10664,
											"end": 10670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10695,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10695,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10712,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10705,
											"end": 10712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10731,
											"end": 10732,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10705,
											"end": 10732,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10754,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10742,
											"end": 10754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10664,
											"end": 10686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10742,
											"end": 10764,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10788,
											"end": 10817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10788,
											"end": 10817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6656,
											"end": 6681,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10797,
											"end": 10807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10788,
											"end": 10817,
											"name": "PUSH",
											"source": 0,
											"value": "7DC6AB80CC84C043B7B8D4FCAFC802187470087F7EA7FCCD2E17AECD0256A1"
										},
										{
											"begin": 10788,
											"end": 10817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10788,
											"end": 10817,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10788,
											"end": 10817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10788,
											"end": 10817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10788,
											"end": 10817,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10788,
											"end": 10817,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10788,
											"end": 10817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10788,
											"end": 10817,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 10489,
											"end": 10824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10489,
											"end": 10824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10489,
											"end": 10824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10489,
											"end": 10824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10489,
											"end": 10824,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4138,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 1588,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1676,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1688,
											"end": 1707,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 1724,
											"end": 1730,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 1720,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 1720,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1688,
											"end": 1735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1760,
											"name": "POP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1785,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1826,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 1812,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1832,
											"end": 1833,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 1833,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1879,
											"end": 1884,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 1879,
											"end": 1890,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 1866,
											"end": 1891,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "BYTE",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1891,
											"name": "MSTORE8",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1916,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1835,
											"end": 1838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1795,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1944,
											"end": 1954,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7657,
											"end": 7659,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7639,
											"end": 7660,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7639,
											"end": 7660,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7639,
											"end": 7660,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7694,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7676,
											"end": 7694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7669,
											"end": 7699,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7735,
											"end": 7769,
											"name": "PUSH",
											"source": 11,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 7715,
											"end": 7733,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7715,
											"end": 7733,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7715,
											"end": 7733,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7708,
											"end": 7770,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7787,
											"end": 7805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1936,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 7629,
											"end": 7811,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 786,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 393,
											"end": 786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 467,
											"end": 473,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 483,
											"end": 489,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 515,
											"end": 522,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 511,
											"end": 534,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 507,
											"end": 539,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 504,
											"end": 506,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 504,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 504,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 557,
											"end": 563,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 549,
											"end": 555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 542,
											"end": 564,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 504,
											"end": 506,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 504,
											"end": 506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 604,
											"end": 613,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 585,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 585,
											"end": 614,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 585,
											"end": 614,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 585,
											"end": 614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 575,
											"end": 614,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 575,
											"end": 614,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 646,
											"end": 664,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 633,
											"end": 665,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 623,
											"end": 665,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 623,
											"end": 665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 713,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 700,
											"end": 718,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 687,
											"end": 719,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 728,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 750,
											"end": 755,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 728,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 728,
											"end": 756,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 728,
											"end": 756,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 728,
											"end": 756,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 775,
											"end": 780,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 765,
											"end": 780,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 765,
											"end": 780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 765,
											"end": 780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 494,
											"end": 786,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 494,
											"end": 786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 494,
											"end": 786,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 494,
											"end": 786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 494,
											"end": 786,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 494,
											"end": 786,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 1046,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 791,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 858,
											"end": 864,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 913,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 899,
											"end": 908,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 890,
											"end": 897,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 886,
											"end": 909,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 882,
											"end": 914,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 879,
											"end": 881,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 879,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 879,
											"end": 881,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 932,
											"end": 938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 924,
											"end": 930,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 917,
											"end": 939,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 879,
											"end": 881,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 879,
											"end": 881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 963,
											"end": 979,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 988,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 988,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 988,
											"end": 1016,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1051,
											"end": 1241,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1051,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1165,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1149,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1138,
											"end": 1161,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1134,
											"end": 1166,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1169,
											"end": 1191,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1212,
											"end": 1235,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1235,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1121,
											"end": 1241,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1121,
											"end": 1241,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1246,
											"end": 1510,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 1246,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1375,
											"end": 1377,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1363,
											"end": 1372,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1354,
											"end": 1361,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1350,
											"end": 1373,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1378,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1345,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 1343,
											"end": 1345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1381,
											"end": 1403,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1343,
											"end": 1345,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 1343,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1437,
											"end": 1446,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1424,
											"end": 1447,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1447,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 1500,
											"end": 1502,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1498,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1485,
											"end": 1503,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 1466,
											"end": 1504,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1466,
											"end": 1504,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 1466,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1456,
											"end": 1504,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1456,
											"end": 1504,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1333,
											"end": 1510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1333,
											"end": 1510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1333,
											"end": 1510,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1333,
											"end": 1510,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1333,
											"end": 1510,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1333,
											"end": 1510,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1515,
											"end": 1821,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1515,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1628,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1614,
											"end": 1623,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1605,
											"end": 1612,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1624,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1597,
											"end": 1629,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1596,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 1594,
											"end": 1596,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1632,
											"end": 1654,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1594,
											"end": 1596,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 1594,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1678,
											"end": 1701,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1678,
											"end": 1701,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1730,
											"end": 1762,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1730,
											"end": 1762,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1720,
											"end": 1763,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1720,
											"end": 1763,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1710,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 1710,
											"end": 1712,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1774,
											"end": 1780,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2021,
											"end": 2215,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2021,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2146,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2130,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2142,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2115,
											"end": 2147,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2150,
											"end": 2172,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2209,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2102,
											"end": 2215,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2102,
											"end": 2215,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 2489,
											"end": 3020,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2489,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2581,
											"end": 2587,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2597,
											"end": 2603,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2669,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2637,
											"end": 2670,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2636,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 2634,
											"end": 2636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2694,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2673,
											"end": 2695,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2636,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 2634,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2739,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2739,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2706,
											"end": 2739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2786,
											"end": 2788,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2771,
											"end": 2789,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2790,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2748,
											"end": 2790,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2748,
											"end": 2790,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2809,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 2843,
											"end": 2845,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2832,
											"end": 2841,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2809,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 2809,
											"end": 2847,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2809,
											"end": 2847,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 2809,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2799,
											"end": 2847,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2799,
											"end": 2847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2894,
											"end": 2896,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2883,
											"end": 2892,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2866,
											"end": 2898,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2898,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2898,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2948,
											"end": 2951,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 2952,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2920,
											"end": 2953,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2962,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 2984,
											"end": 2989,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2962,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 2962,
											"end": 2990,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 2990,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 2962,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3014,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3014,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2999,
											"end": 3014,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 3020,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 3020,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 3020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 3020,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 3020,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 3020,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 3020,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 3020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 3020,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 3025,
											"end": 3811,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 3025,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"source": 11,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3424,
											"end": 3462,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3498,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3507,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 3562,
											"end": 3568,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3559,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 3552,
											"end": 3555,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3560,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3545,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3533,
											"end": 3539,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3507,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 3507,
											"end": 3569,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3507,
											"end": 3569,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 3507,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 3588,
											"end": 3604,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3604,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3604,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3631,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3631,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3631,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3653,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3691,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3678,
											"end": 3691,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 3678,
											"end": 3691,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 3741,
											"end": 3752,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3741,
											"end": 3752,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3734,
											"end": 3738,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 3739,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3700,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 3700,
											"end": 3763,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 3700,
											"end": 3763,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 3700,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3783,
											"end": 3800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3802,
											"end": 3804,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 3779,
											"end": 3805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3779,
											"end": 3805,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3811,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3414,
											"end": 3811,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 7067,
											"end": 7450,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 7067,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7216,
											"end": 7218,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7205,
											"end": 7214,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7198,
											"end": 7219,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7179,
											"end": 7183,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7242,
											"end": 7255,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7291,
											"end": 7297,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7286,
											"end": 7288,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7271,
											"end": 7289,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7264,
											"end": 7298,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7307,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 7366,
											"end": 7372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7350,
											"end": 7359,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7346,
											"end": 7364,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7341,
											"end": 7343,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7333,
											"end": 7339,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7329,
											"end": 7344,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7307,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 7307,
											"end": 7373,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 7307,
											"end": 7373,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 7307,
											"end": 7373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7436,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 7413,
											"end": 7428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7409,
											"end": 7438,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7439,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7394,
											"end": 7439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7441,
											"end": 7443,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7390,
											"end": 7444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7390,
											"end": 7444,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7188,
											"end": 7450,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7188,
											"end": 7450,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13221,
											"end": 13349,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 13221,
											"end": 13349,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13261,
											"end": 13264,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13292,
											"end": 13293,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13288,
											"end": 13294,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 13285,
											"end": 13286,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13282,
											"end": 13295,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13279,
											"end": 13281,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13279,
											"end": 13281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 13279,
											"end": 13281,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13334,
											"end": 13343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13334,
											"end": 13343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13269,
											"end": 13349,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13354,
											"end": 13571,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 13354,
											"end": 13571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13394,
											"end": 13395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13421,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13410,
											"end": 13412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 13410,
											"end": 13412,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13445,
											"end": 13476,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13445,
											"end": 13476,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13499,
											"end": 13503,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 13496,
											"end": 13497,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13489,
											"end": 13504,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13527,
											"end": 13531,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13452,
											"end": 13453,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13517,
											"end": 13532,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13410,
											"end": 13412,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 13410,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13556,
											"end": 13565,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13556,
											"end": 13565,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13400,
											"end": 13571,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13576,
											"end": 13744,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 13576,
											"end": 13744,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13616,
											"end": 13623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13682,
											"end": 13683,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13678,
											"end": 13679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13674,
											"end": 13680,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 13670,
											"end": 13684,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 13668,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13664,
											"end": 13685,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13659,
											"end": 13660,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13652,
											"end": 13661,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13645,
											"end": 13662,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13641,
											"end": 13686,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13638,
											"end": 13640,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13638,
											"end": 13640,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 13638,
											"end": 13640,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13689,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 13689,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 13689,
											"end": 13707,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13689,
											"end": 13707,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 13689,
											"end": 13707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13729,
											"end": 13738,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13729,
											"end": 13738,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13628,
											"end": 13744,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13749,
											"end": 13874,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 13749,
											"end": 13874,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13789,
											"end": 13793,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13817,
											"end": 13818,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13814,
											"end": 13815,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13811,
											"end": 13819,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13808,
											"end": 13810,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13808,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 13808,
											"end": 13810,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 13822,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 13822,
											"end": 13840,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 13822,
											"end": 13840,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 13822,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13859,
											"end": 13868,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13859,
											"end": 13868,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13798,
											"end": 13874,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 13879,
											"end": 14137,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 13879,
											"end": 14137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13951,
											"end": 13952,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13961,
											"end": 14074,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 13961,
											"end": 14074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13975,
											"end": 13981,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13972,
											"end": 13973,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13969,
											"end": 13982,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 13961,
											"end": 14074,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13961,
											"end": 14074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 13961,
											"end": 14074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14051,
											"end": 14062,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14051,
											"end": 14062,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14051,
											"end": 14062,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14045,
											"end": 14063,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14032,
											"end": 14043,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14032,
											"end": 14043,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14032,
											"end": 14043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14025,
											"end": 14064,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13997,
											"end": 13999,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13990,
											"end": 14000,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13961,
											"end": 14074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 13961,
											"end": 14074,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13961,
											"end": 14074,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 13961,
											"end": 14074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14098,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14089,
											"end": 14090,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14086,
											"end": 14099,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14083,
											"end": 14085,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14083,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 14083,
											"end": 14085,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14127,
											"end": 14128,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14118,
											"end": 14124,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14113,
											"end": 14116,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14109,
											"end": 14125,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14102,
											"end": 14129,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14083,
											"end": 14085,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 14083,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14083,
											"end": 14085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13932,
											"end": 14137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13932,
											"end": 14137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13932,
											"end": 14137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13932,
											"end": 14137,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14142,
											"end": 14278,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 14142,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14181,
											"end": 14184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14209,
											"end": 14214,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14199,
											"end": 14201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 14199,
											"end": 14201,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14218,
											"end": 14236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 14218,
											"end": 14236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 14218,
											"end": 14236,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 14218,
											"end": 14236,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 14218,
											"end": 14236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14254,
											"end": 14272,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14254,
											"end": 14272,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14189,
											"end": 14278,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 14283,
											"end": 14410,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 14283,
											"end": 14410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14344,
											"end": 14354,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 14339,
											"end": 14342,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 14335,
											"end": 14355,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 14332,
											"end": 14333,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14325,
											"end": 14356,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14375,
											"end": 14379,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 14372,
											"end": 14373,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14365,
											"end": 14380,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14399,
											"end": 14403,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14396,
											"end": 14397,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14389,
											"end": 14404,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14415,
											"end": 14533,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 14415,
											"end": 14533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14501,
											"end": 14506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14494,
											"end": 14507,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14487,
											"end": 14508,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14480,
											"end": 14485,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14477,
											"end": 14509,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14467,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 14467,
											"end": 14469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14523,
											"end": 14524,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14520,
											"end": 14521,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14513,
											"end": 14525,
											"name": "REVERT",
											"source": 11
										}
									],
									".data": {
										"23264ABF97B17654B97D38BD81099EB2064D5CCA6DBD4E398FF8BDBAB67B82D": "3131fc8beb48b895197ad34f21c86afdf6a989a5cd911181952dbf8dfcf18192",
										"806DB7640BCC104A4B7B53EBC0C09B63EEFD92FE89197BC684D91AA66A17455C": "3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c"
									}
								}
							}
						},
						"methodIdentifiers": {
							"ARCADE_MANAGER()": "c18e397e",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"GAME_MASTER()": "99597b70",
							"acceptedArcadeTokens(address)": "b22c376d",
							"addArcadeToken(address,uint256,bool)": "06602a48",
							"arcadeToken(address)": "9d00c61e",
							"closeGame(uint256)": "2d6ef310",
							"createGame(uint256,uint256,address,uint256,bool)": "f336ee3c",
							"decimals()": "313ce567",
							"deleteGame(uint256)": "248a55a1",
							"fee_percentage()": "c46ed45a",
							"gameData(uint256)": "ccaf237f",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isAccepted(address)": "e6f091f9",
							"leaveMatch(uint256)": "9f512e22",
							"openGame(uint256)": "00f5544f",
							"owner()": "8da5cb5b",
							"placePlayer(uint256,address)": "b9888d89",
							"reconcile(address)": "09a18635",
							"refund(uint256,address)": "7ad226dc",
							"register(uint256)": "f207564e",
							"removeArcadeToken(address)": "3e16518f",
							"removePlayer(uint256,address)": "2ba67100",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setArcadeFeePercentage(uint256)": "2ac5016f",
							"setWinner(uint256,address)": "9c623683",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"CloseGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"CreateGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"DeleteGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Fee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"OpenGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Payout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"PlacePlayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RemovePlayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARCADE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAME_MASTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"acceptedArcadeTokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"native_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"redemption_rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redemption_rate\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"addArcadeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"}],\"name\":\"arcadeToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"}],\"name\":\"closeGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registration_fee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"arcade_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"player_limit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exchange\",\"type\":\"bool\"}],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"}],\"name\":\"deleteGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee_percentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exchange\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"player_count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"player_limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registration_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"arcade_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"total_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"}],\"name\":\"isAccepted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"}],\"name\":\"leaveMatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"}],\"name\":\"openGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"placePlayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"arcade_token\",\"type\":\"address\"}],\"name\":\"reconcile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_address\",\"type\":\"address\"}],\"name\":\"removeArcadeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"removePlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"setArcadeFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"setWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addArcadeToken(address,uint256,bool)\":{\"details\":\"Adds token to {acceptedArcadeTokens} Require `token_address` for proxy balance exchange.   `redemption_rate` is set and determines the rate that proxy balance is exchanged.   Set `active` to reflect status of exchange. Requirements: - the caller must have arcade manager role.\"},\"arcadeToken(address)\":{\"details\":\"Returns {ArcadeToken} struct for `token_address`.\"},\"closeGame(uint256)\":{\"details\":\"Changes {#}.status for `game_id`. Requirements: - the caller must have game master role.\"},\"createGame(uint256,uint256,address,uint256,bool)\":{\"details\":\"Mutates {gameData} structure with game configuration. Sets {#} for `game_id`, `registration_fee`, `arcade_token`, `player_limit`, `exchange`  Requirements: - the caller must have game master role.\"},\"deleteGame(uint256)\":{\"details\":\"Deletes {#} for {gameData} for `game_id`. Requirements: - the caller must have game master role.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAccepted(address)\":{\"details\":\"Returns {active} as boolean value for `token_address`.\"},\"leaveMatch(uint256)\":{\"details\":\"Updates {gameData} sets {#}.seats[`player`] to 0.\"},\"openGame(uint256)\":{\"details\":\"Changes {#}.status for `game_id`. Requirements: - the caller must have game master role.\"},\"placePlayer(uint256,address)\":{\"details\":\"Gives `player` access to register for `game_id`. Requirements: - the caller must have game master role.\"},\"reconcile(address)\":{\"details\":\"Transfer balance of `arcade_token` to caller. Requirements: - the caller must have admin role.\"},\"refund(uint256,address)\":{\"details\":\"Returns {#}.registration_fee for `player` at `game_id`. Requirements: - the caller must have game master role. - `player` must be registered. - contract balance should exceed {#}.registration_fee\"},\"register(uint256)\":{\"details\":\"Validates game configuration for caller. Transfers {#}.registration_fee to arcade contract. Requirements: - Valid game configuration\"},\"removeArcadeToken(address)\":{\"details\":\"Disable token for proxy balance exchange. Requirements: - the caller must have arcade manager role.\"},\"removePlayer(uint256,address)\":{\"details\":\"Updates {gameData} sets {#}.seats[`player`] to 0. Requirements: - the caller must have game master role.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"setArcadeFeePercentage(uint256)\":{\"details\":\"Set fee percentage for arcade contract. Requirements: - the caller must have arcade manager role.     \"},\"setWinner(uint256,address)\":{\"details\":\"Updates {gameData} defines `winner` as address to receive {#}.total_fee less arcade_fee. Requirements: - the caller must have game master role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Arcade.sol\":\"Arcade\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Arcade.sol\":{\"keccak256\":\"0x67e48079fc58f1c18bc70ae56648c9af5c86f4283093c445affc75105d28ad58\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://81a95946d8594eaada08fce1b6505c31540a63e14d435f6b79cea3d4937ec99a\",\"dweb:/ipfs/QmRMCozRSEfb5kZxMLVDLnZDLhWxgL4sQVEHKd9cbc75Fo\"]},\"contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 946,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)941_storage)"
							},
							{
								"astId": 109,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "acceptedArcadeTokens",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(ArcadeToken)104_storage)"
							},
							{
								"astId": 114,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "gameData",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(GameInfo)96_storage)"
							},
							{
								"astId": 117,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "decimals",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 119,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "fee_percentage",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 128,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "base",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)1978": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(ArcadeToken)104_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Arcade.ArcadeToken)",
								"numberOfBytes": "32",
								"value": "t_struct(ArcadeToken)104_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)941_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)941_storage"
							},
							"t_mapping(t_uint256,t_struct(GameInfo)96_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Arcade.GameInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(GameInfo)96_storage"
							},
							"t_struct(ArcadeToken)104_storage": {
								"encoding": "inplace",
								"label": "struct Arcade.ArcadeToken",
								"members": [
									{
										"astId": 99,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "native_token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)1978"
									},
									{
										"astId": 101,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "active",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 103,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "redemption_rate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(GameInfo)96_storage": {
								"encoding": "inplace",
								"label": "struct Arcade.GameInfo",
								"members": [
									{
										"astId": 71,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "exchange",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 73,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "player_count",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 75,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "player_limit",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 77,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "registration_fee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 79,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "status",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 81,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "arcade_token",
										"offset": 0,
										"slot": "5",
										"type": "t_address"
									},
									{
										"astId": 83,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "total_fee",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 87,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "fee",
										"offset": 0,
										"slot": "7",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 91,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "paid",
										"offset": 0,
										"slot": "8",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 95,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "seats",
										"offset": 0,
										"slot": "9",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "320"
							},
							"t_struct(RoleData)941_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 938,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 940,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb4d87ee2ead4bd192b41c128f287d4b7f24b9e0cd740cc9b476881c461286007\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://861c3abaa2b388a0228469080470d2254e8e91fd09aa0abda8b9ef3babf03ee5\",\"dweb:/ipfs/QmZFg88WPesuMo6GMtf3fi9NHQ5tENYLDZsFQSWgoq13TN\"]},\"contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 946,
								"contract": "contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)941_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)941_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)941_storage"
							},
							"t_struct(RoleData)941_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 938,
										"contract": "contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 940,
										"contract": "contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:923   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:90   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":143:148   */\n  dup1\n    /* \"#utility.yul\":136:141   */\n  dup2\n    /* \"#utility.yul\":129:149   */\n  revert\n    /* \"#utility.yul\":88:90   */\ntag_24:\n    /* \"#utility.yul\":170:183   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":232:242   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":229:231   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":245:263   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":320:322   */\n  0x40\n    /* \"#utility.yul\":314:323   */\n  mload\n    /* \"#utility.yul\":288:290   */\n  0x1f\n    /* \"#utility.yul\":374:387   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":370:392   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":394:396   */\n  0x3f\n    /* \"#utility.yul\":366:397   */\n  add\n    /* \"#utility.yul\":362:402   */\n  and\n    /* \"#utility.yul\":350:403   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":418:436   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":438:460   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":415:461   */\n  or\n    /* \"#utility.yul\":412:414   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":464:482   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":504:514   */\n  dup2\n    /* \"#utility.yul\":500:502   */\n  0x40\n    /* \"#utility.yul\":493:515   */\n  mstore\n    /* \"#utility.yul\":539:541   */\n  dup4\n    /* \"#utility.yul\":531:537   */\n  dup2\n    /* \"#utility.yul\":524:542   */\n  mstore\n    /* \"#utility.yul\":561:565   */\n  0x20\n    /* \"#utility.yul\":551:565   */\n  swap3\n  pop\n    /* \"#utility.yul\":606:609   */\n  dup7\n    /* \"#utility.yul\":601:603   */\n  dup4\n    /* \"#utility.yul\":596:598   */\n  dup6\n    /* \"#utility.yul\":588:594   */\n  dup9\n    /* \"#utility.yul\":584:599   */\n  add\n    /* \"#utility.yul\":580:604   */\n  add\n    /* \"#utility.yul\":577:610   */\n  gt\n    /* \"#utility.yul\":574:576   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":627:632   */\n  dup5\n    /* \"#utility.yul\":620:625   */\n  dup6\n    /* \"#utility.yul\":613:633   */\n  revert\n    /* \"#utility.yul\":574:576   */\ntag_30:\n    /* \"#utility.yul\":653:658   */\n  dup5\n    /* \"#utility.yul\":644:658   */\n  swap2\n  pop\n    /* \"#utility.yul\":667:800   */\ntag_31:\n    /* \"#utility.yul\":681:683   */\n  dup4\n    /* \"#utility.yul\":678:679   */\n  dup3\n    /* \"#utility.yul\":675:684   */\n  lt\n    /* \"#utility.yul\":667:800   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":769:783   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":765:788   */\n  dup4\n  add\n    /* \"#utility.yul\":759:789   */\n  mload\n    /* \"#utility.yul\":738:752   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":734:757   */\n  dup5\n  add\n    /* \"#utility.yul\":727:790   */\n  mstore\n    /* \"#utility.yul\":692:702   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":667:800   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":818:820   */\n  dup4\n    /* \"#utility.yul\":815:816   */\n  dup3\n    /* \"#utility.yul\":812:821   */\n  gt\n    /* \"#utility.yul\":809:811   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":877:882   */\n  dup5\n    /* \"#utility.yul\":872:874   */\n  dup4\n    /* \"#utility.yul\":867:869   */\n  dup6\n    /* \"#utility.yul\":859:865   */\n  dup4\n    /* \"#utility.yul\":855:870   */\n  add\n    /* \"#utility.yul\":851:875   */\n  add\n    /* \"#utility.yul\":844:883   */\n  mstore\n    /* \"#utility.yul\":809:811   */\ntag_34:\n    /* \"#utility.yul\":911:917   */\n  swap7\n    /* \"#utility.yul\":78:923   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1520   */\ntag_3:\n    /* \"#utility.yul\":1027:1033   */\n  0x00\n    /* \"#utility.yul\":1035:1041   */\n  dup1\n    /* \"#utility.yul\":1088:1090   */\n  0x40\n    /* \"#utility.yul\":1076:1085   */\n  dup4\n    /* \"#utility.yul\":1067:1074   */\n  dup6\n    /* \"#utility.yul\":1063:1086   */\n  sub\n    /* \"#utility.yul\":1059:1091   */\n  slt\n    /* \"#utility.yul\":1056:1058   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1109:1115   */\n  dup2\n    /* \"#utility.yul\":1101:1107   */\n  dup3\n    /* \"#utility.yul\":1094:1116   */\n  revert\n    /* \"#utility.yul\":1056:1058   */\ntag_36:\n    /* \"#utility.yul\":1141:1157   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1206:1220   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1203:1205   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1238:1244   */\n  dup4\n    /* \"#utility.yul\":1230:1236   */\n  dup5\n    /* \"#utility.yul\":1223:1245   */\n  revert\n    /* \"#utility.yul\":1203:1205   */\ntag_37:\n    /* \"#utility.yul\":1266:1327   */\n  tag_38\n    /* \"#utility.yul\":1319:1326   */\n  dup7\n    /* \"#utility.yul\":1310:1316   */\n  dup4\n    /* \"#utility.yul\":1299:1308   */\n  dup8\n    /* \"#utility.yul\":1295:1317   */\n  add\n    /* \"#utility.yul\":1266:1327   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1256:1327   */\n  swap4\n  pop\n    /* \"#utility.yul\":1373:1375   */\n  0x20\n    /* \"#utility.yul\":1362:1371   */\n  dup6\n    /* \"#utility.yul\":1358:1376   */\n  add\n    /* \"#utility.yul\":1352:1377   */\n  mload\n    /* \"#utility.yul\":1336:1377   */\n  swap2\n  pop\n    /* \"#utility.yul\":1402:1404   */\n  dup1\n    /* \"#utility.yul\":1392:1400   */\n  dup3\n    /* \"#utility.yul\":1389:1405   */\n  gt\n    /* \"#utility.yul\":1386:1388   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1423:1429   */\n  dup3\n    /* \"#utility.yul\":1415:1421   */\n  dup4\n    /* \"#utility.yul\":1408:1430   */\n  revert\n    /* \"#utility.yul\":1386:1388   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1451:1514   */\n  tag_40\n    /* \"#utility.yul\":1506:1513   */\n  dup6\n    /* \"#utility.yul\":1495:1503   */\n  dup3\n    /* \"#utility.yul\":1484:1493   */\n  dup7\n    /* \"#utility.yul\":1480:1504   */\n  add\n    /* \"#utility.yul\":1451:1514   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1441:1514   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1046:1520   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1525:1905   */\ntag_11:\n    /* \"#utility.yul\":1604:1605   */\n  0x01\n    /* \"#utility.yul\":1600:1612   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1647:1659   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1668:1670   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1722:1726   */\n  0x7f\n    /* \"#utility.yul\":1714:1720   */\n  dup3\n    /* \"#utility.yul\":1710:1727   */\n  and\n    /* \"#utility.yul\":1700:1727   */\n  swap2\n  pop\n    /* \"#utility.yul\":1668:1670   */\ntag_42:\n    /* \"#utility.yul\":1775:1777   */\n  0x20\n    /* \"#utility.yul\":1767:1773   */\n  dup3\n    /* \"#utility.yul\":1764:1778   */\n  lt\n    /* \"#utility.yul\":1744:1762   */\n  dup2\n    /* \"#utility.yul\":1741:1779   */\n  eq\n    /* \"#utility.yul\":1738:1740   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1821:1831   */\n  0x4e487b71\n    /* \"#utility.yul\":1816:1819   */\n  0xe0\n    /* \"#utility.yul\":1812:1832   */\n  shl\n    /* \"#utility.yul\":1809:1810   */\n  0x00\n    /* \"#utility.yul\":1802:1833   */\n  mstore\n    /* \"#utility.yul\":1856:1860   */\n  0x22\n    /* \"#utility.yul\":1853:1854   */\n  0x04\n    /* \"#utility.yul\":1846:1861   */\n  mstore\n    /* \"#utility.yul\":1884:1888   */\n  0x24\n    /* \"#utility.yul\":1881:1882   */\n  0x00\n    /* \"#utility.yul\":1874:1889   */\n  revert\n    /* \"#utility.yul\":1738:1740   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1580:1905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1910:2037   */\ntag_27:\n    /* \"#utility.yul\":1971:1981   */\n  0x4e487b71\n    /* \"#utility.yul\":1966:1969   */\n  0xe0\n    /* \"#utility.yul\":1962:1982   */\n  shl\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1983   */\n  mstore\n    /* \"#utility.yul\":2002:2006   */\n  0x41\n    /* \"#utility.yul\":1999:2000   */\n  0x04\n    /* \"#utility.yul\":1992:2007   */\n  mstore\n    /* \"#utility.yul\":2026:2030   */\n  0x24\n    /* \"#utility.yul\":2023:2024   */\n  0x00\n    /* \"#utility.yul\":2016:2031   */\n  revert\n    /* \"#utility.yul\":1942:2037   */\ntag_21:\n    /* \"contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1445:1459   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1438:1460   */\n      iszero\n        /* \"#utility.yul\":1420:1461   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1408:1410   */\n      0x20\n        /* \"#utility.yul\":1393:1411   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1375:1467   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5015:5040   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5003:5005   */\n      0x20\n        /* \"#utility.yul\":4988:5006   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4970:5046   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":5193:5229   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5181:5183   */\n      0x20\n        /* \"#utility.yul\":5166:5184   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5148:5235   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_73\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_74\n        /* \"contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_32:\n        /* \"contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_79\n        /* \"contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_80\n        /* \"contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_81\n        /* \"contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_86\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_61\n        /* \"contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_74\n        /* \"contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_98\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_61\n        /* \"contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4665:4667   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4647:4668   */\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x25\n        /* \"#utility.yul\":4684:4702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4677:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4777   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4723:4741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4716:4778   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4794:4812   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4787:4822   */\n      mstore\n        /* \"#utility.yul\":4839:4858   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_74\n        /* \"contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_73\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_81\n        /* \"contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":10119:10489  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":10250:10269  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4260:4262   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4242:4263   */\n      mstore\n        /* \"#utility.yul\":4299:4301   */\n      0x24\n        /* \"#utility.yul\":4279:4297   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4272:4302   */\n      mstore\n        /* \"#utility.yul\":4338:4372   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4318:4336   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4311:4373   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4389:4407   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4382:4416   */\n      mstore\n        /* \"#utility.yul\":4433:4452   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4232:4458   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":10328:10349  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2686:2688   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2668:2689   */\n      mstore\n        /* \"#utility.yul\":2725:2727   */\n      0x22\n        /* \"#utility.yul\":2705:2723   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2698:2728   */\n      mstore\n        /* \"#utility.yul\":2764:2798   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2744:2762   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2737:2799   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2815:2833   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2808:2840   */\n      mstore\n        /* \"#utility.yul\":2857:2876   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":2658:2882   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":10399:10417  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":10399:10410  _allowances */\n      0x01\n        /* \"contracts/token/ERC20/ERC20.sol\":10399:10417  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":10399:10426  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":10399:10435  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5015:5040   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4988:5006   */\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":10119:10489  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n    tag_79:\n        /* \"contracts/token/ERC20/ERC20.sol\":10900:10924  uint256 currentAllowance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      tag_117\n        /* \"contracts/token/ERC20/ERC20.sol\":10937:10942  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10944:10951  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":10927:10936  allowance */\n      tag_61\n        /* \"contracts/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/token/ERC20/ERC20.sol\":10900:10952  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"contracts/token/ERC20/ERC20.sol\":10966:10982  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":10966:11003  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/token/ERC20/ERC20.sol\":10962:11205  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"contracts/token/ERC20/ERC20.sol\":11047:11053  amount */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":11027:11043  currentAllowance */\n      dup2\n        /* \"contracts/token/ERC20/ERC20.sol\":11027:11053  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3089:3091   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3071:3092   */\n      mstore\n        /* \"#utility.yul\":3128:3130   */\n      0x1d\n        /* \"#utility.yul\":3108:3126   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3101:3131   */\n      mstore\n        /* \"#utility.yul\":3167:3198   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3147:3165   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3140:3199   */\n      mstore\n        /* \"#utility.yul\":3216:3234   */\n      0x64\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":3061:3240   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"contracts/token/ERC20/ERC20.sol\":11138:11143  owner */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":11145:11152  spender */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":11173:11179  amount */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":11154:11170  currentAllowance */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":11154:11179  currentAllowance - amount */\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":11129:11137  _approve */\n      tag_74\n        /* \"contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/ERC20/ERC20.sol\":7484:8135  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":7610:7628  from != address(0) */\n      dup4\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3854:3856   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3836:3857   */\n      mstore\n        /* \"#utility.yul\":3893:3895   */\n      0x25\n        /* \"#utility.yul\":3873:3891   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3866:3896   */\n      mstore\n        /* \"#utility.yul\":3932:3966   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3912:3930   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3905:3967   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3983:4001   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3976:4011   */\n      mstore\n        /* \"#utility.yul\":4028:4047   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3826:4053   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":7688:7704  to != address(0) */\n      dup3\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2282:2284   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2264:2285   */\n      mstore\n        /* \"#utility.yul\":2321:2323   */\n      0x23\n        /* \"#utility.yul\":2301:2319   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2294:2324   */\n      mstore\n        /* \"#utility.yul\":2360:2394   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2340:2358   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2333:2395   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2411:2429   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2404:2437   */\n      mstore\n        /* \"#utility.yul\":2454:2473   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":2254:2479   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":7826:7841  _balances[from] */\n      dup4\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":7804:7823  uint256 fromBalance */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":7826:7841  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":7859:7880  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3429:3450   */\n      mstore\n        /* \"#utility.yul\":3486:3488   */\n      0x26\n        /* \"#utility.yul\":3466:3484   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3459:3489   */\n      mstore\n        /* \"#utility.yul\":3525:3559   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3505:3523   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3498:3560   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3576:3594   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3569:3605   */\n      mstore\n        /* \"#utility.yul\":3622:3641   */\n      0x84\n      add\n        /* \"contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":3419:3647   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":7957:7972  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":7957:7966  _balances */\n      0x00\n        /* \"contracts/token/ERC20/ERC20.sol\":7957:7972  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":7975:7995  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/token/ERC20/ERC20.sol\":7957:7995  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/token/ERC20/ERC20.sol\":8015:8028  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      dup1\n      sload\n        /* \"contracts/token/ERC20/ERC20.sol\":7989:7995  amount */\n      dup5\n      swap3\n        /* \"contracts/token/ERC20/ERC20.sol\":7957:7966  _balances */\n      swap1\n        /* \"contracts/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"contracts/token/ERC20/ERC20.sol\":7989:7995  amount */\n      dup5\n      swap1\n        /* \"contracts/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/ERC20/ERC20.sol\":8069:8071  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      and\n        /* \"contracts/token/ERC20/ERC20.sol\":8063:8067  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/token/ERC20/ERC20.sol\":8073:8079  amount */\n      dup5\n        /* \"contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":5015:5040   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5003:5005   */\n      0x20\n        /* \"#utility.yul\":4988:5006   */\n      add\n      swap1\n        /* \"#utility.yul\":4970:5046   */\n      jump\n        /* \"contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/ERC20/ERC20.sol\":8091:8128  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"contracts/token/ERC20/ERC20.sol\":11795:11916  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_142:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_144:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:388   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_146:\n        /* \"#utility.yul\":353:382   */\n      tag_147\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_142\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":343:382   */\n      swap4\n        /* \"#utility.yul\":262:388   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":393:663   */\n    tag_60:\n        /* \"#utility.yul\":461:467   */\n      0x00\n        /* \"#utility.yul\":469:475   */\n      dup1\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":510:519   */\n      dup4\n        /* \"#utility.yul\":501:508   */\n      dup6\n        /* \"#utility.yul\":497:520   */\n      sub\n        /* \"#utility.yul\":493:525   */\n      slt\n        /* \"#utility.yul\":490:492   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":543:549   */\n      dup1\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":528:550   */\n      revert\n        /* \"#utility.yul\":490:492   */\n    tag_149:\n        /* \"#utility.yul\":571:600   */\n      tag_150\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":571:600   */\n      tag_142\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":561:600   */\n      swap2\n      pop\n        /* \"#utility.yul\":619:657   */\n      tag_151\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":642:651   */\n      dup5\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"#utility.yul\":619:657   */\n      tag_142\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":609:657   */\n      swap1\n      pop\n        /* \"#utility.yul\":480:663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:1006   */\n    tag_31:\n        /* \"#utility.yul\":745:751   */\n      0x00\n        /* \"#utility.yul\":753:759   */\n      dup1\n        /* \"#utility.yul\":761:767   */\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x60\n        /* \"#utility.yul\":802:811   */\n      dup5\n        /* \"#utility.yul\":793:800   */\n      dup7\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:784   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":835:841   */\n      dup1\n        /* \"#utility.yul\":827:833   */\n      dup2\n        /* \"#utility.yul\":820:842   */\n      revert\n        /* \"#utility.yul\":782:784   */\n    tag_153:\n        /* \"#utility.yul\":863:892   */\n      tag_154\n        /* \"#utility.yul\":882:891   */\n      dup5\n        /* \"#utility.yul\":863:892   */\n      tag_142\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":853:892   */\n      swap3\n      pop\n        /* \"#utility.yul\":911:949   */\n      tag_155\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup6\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":911:949   */\n      tag_142\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":901:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":996:998   */\n      0x40\n        /* \"#utility.yul\":985:994   */\n      dup5\n        /* \"#utility.yul\":981:999   */\n      add\n        /* \"#utility.yul\":968:1000   */\n      calldataload\n        /* \"#utility.yul\":958:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":772:1006   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1011:1275   */\n    tag_21:\n        /* \"#utility.yul\":1079:1085   */\n      0x00\n        /* \"#utility.yul\":1087:1093   */\n      dup1\n        /* \"#utility.yul\":1140:1142   */\n      0x40\n        /* \"#utility.yul\":1128:1137   */\n      dup4\n        /* \"#utility.yul\":1119:1126   */\n      dup6\n        /* \"#utility.yul\":1115:1138   */\n      sub\n        /* \"#utility.yul\":1111:1143   */\n      slt\n        /* \"#utility.yul\":1108:1110   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1161:1167   */\n      dup2\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1146:1168   */\n      revert\n        /* \"#utility.yul\":1108:1110   */\n    tag_157:\n        /* \"#utility.yul\":1189:1218   */\n      tag_158\n        /* \"#utility.yul\":1208:1217   */\n      dup4\n        /* \"#utility.yul\":1189:1218   */\n      tag_142\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1179:1218   */\n      swap5\n        /* \"#utility.yul\":1265:1267   */\n      0x20\n        /* \"#utility.yul\":1250:1268   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1237:1269   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1275   */\n      jump\t// out\n        /* \"#utility.yul\":1472:2075   */\n    tag_18:\n        /* \"#utility.yul\":1584:1588   */\n      0x00\n        /* \"#utility.yul\":1613:1615   */\n      0x20\n        /* \"#utility.yul\":1642:1644   */\n      dup1\n        /* \"#utility.yul\":1631:1640   */\n      dup4\n        /* \"#utility.yul\":1624:1645   */\n      mstore\n        /* \"#utility.yul\":1674:1680   */\n      dup4\n        /* \"#utility.yul\":1668:1681   */\n      mload\n        /* \"#utility.yul\":1717:1723   */\n      dup1\n        /* \"#utility.yul\":1712:1714   */\n      dup3\n        /* \"#utility.yul\":1701:1710   */\n      dup6\n        /* \"#utility.yul\":1697:1715   */\n      add\n        /* \"#utility.yul\":1690:1724   */\n      mstore\n        /* \"#utility.yul\":1742:1746   */\n      dup3\n        /* \"#utility.yul\":1755:1895   */\n    tag_161:\n        /* \"#utility.yul\":1769:1775   */\n      dup2\n        /* \"#utility.yul\":1766:1767   */\n      dup2\n        /* \"#utility.yul\":1763:1776   */\n      lt\n        /* \"#utility.yul\":1755:1895   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1864:1878   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1860:1883   */\n      dup4\n      add\n        /* \"#utility.yul\":1854:1884   */\n      mload\n        /* \"#utility.yul\":1830:1847   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1849:1851   */\n      0x40\n        /* \"#utility.yul\":1826:1852   */\n      add\n        /* \"#utility.yul\":1819:1885   */\n      mstore\n        /* \"#utility.yul\":1784:1794   */\n      dup3\n      add\n        /* \"#utility.yul\":1755:1895   */\n      jump(tag_161)\n    tag_163:\n        /* \"#utility.yul\":1913:1919   */\n      dup2\n        /* \"#utility.yul\":1910:1911   */\n      dup2\n        /* \"#utility.yul\":1907:1920   */\n      gt\n        /* \"#utility.yul\":1904:1906   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":1983:1987   */\n      dup4\n        /* \"#utility.yul\":1978:1980   */\n      0x40\n        /* \"#utility.yul\":1969:1975   */\n      dup4\n        /* \"#utility.yul\":1958:1967   */\n      dup8\n        /* \"#utility.yul\":1954:1976   */\n      add\n        /* \"#utility.yul\":1950:1981   */\n      add\n        /* \"#utility.yul\":1943:1988   */\n      mstore\n        /* \"#utility.yul\":1904:1906   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2059:2061   */\n      0x1f\n        /* \"#utility.yul\":2038:2053   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2034:2063   */\n      and\n        /* \"#utility.yul\":2019:2064   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2066:2068   */\n      0x40\n        /* \"#utility.yul\":2015:2069   */\n      add\n      swap4\n        /* \"#utility.yul\":1593:2075   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5240:5469   */\n    tag_88:\n        /* \"#utility.yul\":5280:5283   */\n      0x00\n        /* \"#utility.yul\":5311:5312   */\n      dup3\n        /* \"#utility.yul\":5307:5313   */\n      not\n        /* \"#utility.yul\":5304:5305   */\n      dup3\n        /* \"#utility.yul\":5301:5314   */\n      gt\n        /* \"#utility.yul\":5298:5300   */\n      iszero\n      tag_175\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5337:5370   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5393:5397   */\n      0x11\n        /* \"#utility.yul\":5390:5391   */\n      0x04\n        /* \"#utility.yul\":5383:5398   */\n      mstore\n        /* \"#utility.yul\":5423:5427   */\n      0x24\n        /* \"#utility.yul\":5344:5347   */\n      dup2\n        /* \"#utility.yul\":5411:5428   */\n      revert\n        /* \"#utility.yul\":5298:5300   */\n    tag_175:\n      pop\n        /* \"#utility.yul\":5454:5463   */\n      add\n      swap1\n        /* \"#utility.yul\":5288:5469   */\n      jump\t// out\n        /* \"#utility.yul\":5474:5854   */\n    tag_65:\n        /* \"#utility.yul\":5553:5554   */\n      0x01\n        /* \"#utility.yul\":5549:5561   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5596:5608   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5617:5619   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5671:5675   */\n      0x7f\n        /* \"#utility.yul\":5663:5669   */\n      dup3\n        /* \"#utility.yul\":5659:5676   */\n      and\n        /* \"#utility.yul\":5649:5676   */\n      swap2\n      pop\n        /* \"#utility.yul\":5617:5619   */\n    tag_177:\n        /* \"#utility.yul\":5724:5726   */\n      0x20\n        /* \"#utility.yul\":5716:5722   */\n      dup3\n        /* \"#utility.yul\":5713:5727   */\n      lt\n        /* \"#utility.yul\":5693:5711   */\n      dup2\n        /* \"#utility.yul\":5690:5728   */\n      eq\n        /* \"#utility.yul\":5687:5689   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":5770:5780   */\n      0x4e487b71\n        /* \"#utility.yul\":5765:5768   */\n      0xe0\n        /* \"#utility.yul\":5761:5781   */\n      shl\n        /* \"#utility.yul\":5758:5759   */\n      0x00\n        /* \"#utility.yul\":5751:5782   */\n      mstore\n        /* \"#utility.yul\":5805:5809   */\n      0x22\n        /* \"#utility.yul\":5802:5803   */\n      0x04\n        /* \"#utility.yul\":5795:5810   */\n      mstore\n        /* \"#utility.yul\":5833:5837   */\n      0x24\n        /* \"#utility.yul\":5830:5831   */\n      0x00\n        /* \"#utility.yul\":5823:5838   */\n      revert\n        /* \"#utility.yul\":5687:5689   */\n    tag_178:\n      pop\n        /* \"#utility.yul\":5529:5854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b93e94c52789aa39536ab06657bd591a0caf66a9355b3f85adbb60df30cafa0564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2039:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:845:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:24:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "136:5:11"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "143:5:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:20:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:20:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:11"
															},
															"nodeType": "YulIf",
															"src": "88:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "160:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "176:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "170:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "170:13:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "164:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "192:28:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "210:2:11",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "214:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "206:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "206:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "218:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "202:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:18:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "196:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "243:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "245:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "245:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "245:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "235:2:11"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "239:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "232:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:10:11"
															},
															"nodeType": "YulIf",
															"src": "229:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "274:17:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "284:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "284:7:11"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "278:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "300:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "314:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "314:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "304:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "332:71:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "354:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "378:2:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "382:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "374:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "374:13:11"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "389:2:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "370:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "370:22:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "394:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "366:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "366:31:11"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "399:2:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:40:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "350:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:53:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "336:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "464:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "421:10:11"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "433:2:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "441:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "453:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "438:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "438:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "415:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:46:11"
															},
															"nodeType": "YulIf",
															"src": "412:2:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "504:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "539:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "524:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "524:18:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "524:18:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "551:14:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "561:4:11",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "555:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "611:24:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "620:5:11"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "627:5:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "613:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "613:20:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "613:20:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "588:6:11"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "596:2:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "584:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "584:15:11"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "601:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "580:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "580:24:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "606:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "577:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:33:11"
															},
															"nodeType": "YulIf",
															"src": "574:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "644:14:11",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "653:5:11"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "648:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "713:87:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "742:6:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "750:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "738:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "738:14:11"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "754:2:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "734:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "734:23:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "773:6:11"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "781:1:11"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "769:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "769:14:11"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "785:2:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "765:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "765:23:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "759:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "759:30:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:63:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:63:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "678:1:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "681:2:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "675:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:9:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "685:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "687:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "696:1:11"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "699:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "692:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "687:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "671:3:11",
																"statements": []
															},
															"src": "667:133:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "830:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "859:6:11"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "867:2:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "855:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "855:15:11"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "872:2:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "851:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "851:24:11"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "877:5:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "844:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "844:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "844:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "815:1:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "818:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "812:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "812:9:11"
															},
															"nodeType": "YulIf",
															"src": "809:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "902:15:11",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "911:6:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "902:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:11",
														"type": ""
													}
												],
												"src": "14:909:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:474:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1092:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1101:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1109:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1067:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1076:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1063:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1063:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1088:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:32:11"
															},
															"nodeType": "YulIf",
															"src": "1056:2:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1127:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1147:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1141:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:16:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1131:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1166:28:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1184:2:11",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1188:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1180:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1176:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:18:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1170:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1221:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1230:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1238:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1223:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1209:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1217:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1206:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:14:11"
															},
															"nodeType": "YulIf",
															"src": "1203:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:71:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1299:9:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1310:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1319:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1266:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:61:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1336:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1362:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1373:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:18:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1352:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:25:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1340:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1406:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1415:6:11"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1423:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1408:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1408:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1392:8:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1402:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1389:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:16:11"
															},
															"nodeType": "YulIf",
															"src": "1386:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1441:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1484:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1495:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1480:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1480:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1506:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1451:28:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:63:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1004:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1015:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1027:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1035:6:11",
														"type": ""
													}
												],
												"src": "928:592:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:325:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1607:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1621:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1651:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1625:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1698:31:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1700:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1714:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1722:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1710:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1710:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1700:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1678:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:26:11"
															},
															"nodeType": "YulIf",
															"src": "1668:2:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1788:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1809:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1816:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1821:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1802:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1802:31:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1802:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1853:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1856:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1846:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1846:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1846:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1881:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1744:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1767:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1775:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1764:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1741:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1741:38:11"
															},
															"nodeType": "YulIf",
															"src": "1738:2:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1560:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1569:6:11",
														"type": ""
													}
												],
												"src": "1525:380:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1942:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1966:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1971:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1952:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1952:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1992:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2023:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1910:127:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b0a38038062000b0a8339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61087f806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c39190610797565b60405180910390f35b6100df6100da36600461076e565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610733565b61024a565b604051601281526020016100c3565b6100df61013136600461076e565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461076e565b61029f565b6100df61018836600461076e565b61031f565b6100f361019b366004610701565b61032d565b6060600380546101af9061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101db9061080e565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107ea565b610358565b6060600480546101af9061080e565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b9084906107ea565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f1578081fd5b6106fa826106c4565b9392505050565b60008060408385031215610713578081fd5b61071c836106c4565b915061072a602084016106c4565b90509250929050565b600080600060608486031215610747578081fd5b610750846106c4565b925061075e602085016106c4565b9150604084013590509250925092565b60008060408385031215610780578182fd5b610789836106c4565b946020939093013593505050565b6000602080835283518082850152825b818110156107c3578581018301518582016040015282016107a7565b818111156107d45783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220b93e94c52789aa39536ab06657bd591a0caf66a9355b3f85adbb60df30cafa0564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB0A CODESIZE SUB DUP1 PUSH3 0xB0A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C1 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x27B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x228 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x167 JUMPI PUSH3 0x167 PUSH3 0x265 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x183 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A6 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x187 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1B7 JUMPI DUP5 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1EB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F9 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x20F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x21E DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x23D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x25F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x87F DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x701 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F1 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6FA DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x713 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x71C DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72A PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x747 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x750 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x75E PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x780 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x789 DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY SWAP5 0xC5 0x27 DUP10 0xAA CODECOPY MSTORE8 PUSH11 0xB06657BD591A0CAF66A935 JUMPDEST EXTCODEHASH DUP6 0xAD 0xBB PUSH1 0xDF ADDRESS 0xCA STATICCALL SDIV PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "1403:11223:3:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:3;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11223;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11223:3;;;-1:-1:-1;1403:11223:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:11;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:11;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:11;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:11:o;928:592::-;1027:6;1035;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:11;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1604:1;1600:12;;;;1647;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;1403:11223:3;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5856:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:11"
															},
															"nodeType": "YulIf",
															"src": "111:2:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:11",
														"type": ""
													}
												],
												"src": "14:173:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:11"
															},
															"nodeType": "YulIf",
															"src": "272:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:11",
														"type": ""
													}
												],
												"src": "192:196:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:183:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "535:6:11"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "543:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "528:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "528:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "528:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "501:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:32:11"
															},
															"nodeType": "YulIf",
															"src": "490:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "571:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "609:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "619:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "438:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "449:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "461:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "469:6:11",
														"type": ""
													}
												],
												"src": "393:270:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:234:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "827:6:11"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:11"
															},
															"nodeType": "YulIf",
															"src": "782:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "863:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "945:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "911:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:32:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "722:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "733:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "745:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "753:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "761:6:11",
														"type": ""
													}
												],
												"src": "668:338:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:177:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1144:26:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1153:6:11"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1161:6:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:22:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:22:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1119:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:32:11"
															},
															"nodeType": "YulIf",
															"src": "1108:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1179:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1189:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1265:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1237:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1056:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1067:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1087:6:11",
														"type": ""
													}
												],
												"src": "1011:264:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1375:92:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1385:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1397:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1408:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1393:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1385:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1427:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1452:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1445:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1445:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1438:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1438:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1420:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1344:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1355:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1366:4:11",
														"type": ""
													}
												],
												"src": "1280:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1593:482:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1603:12:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1613:2:11",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1607:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1642:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1624:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1658:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1701:9:11"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1712:2:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:18:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1717:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1690:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1733:13:11",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1742:4:11"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1737:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1805:90:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1834:9:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1845:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1830:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1830:17:11"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:2:11",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1826:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1826:26:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1868:6:11"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1876:1:11"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1864:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1864:14:11"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1880:2:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1860:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1860:23:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1854:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1854:30:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1819:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1819:66:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1819:66:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1766:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1769:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1777:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1779:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1788:1:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1791:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1784:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1784:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1779:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1759:3:11",
																"statements": []
															},
															"src": "1755:140:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1929:69:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1958:9:11"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1969:6:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1954:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1954:22:11"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1978:2:11",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1950:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1950:31:11"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "1983:4:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1943:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1943:45:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1943:45:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1910:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1907:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:13:11"
															},
															"nodeType": "YulIf",
															"src": "1904:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2007:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2042:6:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2050:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2038:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2038:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2059:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2055:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2055:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:45:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2007:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1562:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1573:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1584:4:11",
														"type": ""
													}
												],
												"src": "1472:603:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:225:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2271:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2264:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2305:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2316:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2321:2:11",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2344:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2355:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2340:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2340:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2360:34:11",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2333:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2333:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2415:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2426:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2431:5:11",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:33:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2446:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2458:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2469:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2454:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2446:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2231:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2245:4:11",
														"type": ""
													}
												],
												"src": "2080:399:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2658:224:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2675:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2668:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2668:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2725:2:11",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2698:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2698:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2748:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2759:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2744:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2764:34:11",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2737:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2737:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2819:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2830:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2815:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2835:4:11",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2808:32:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2849:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2861:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2857:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2849:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2635:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2649:4:11",
														"type": ""
													}
												],
												"src": "2484:398:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3078:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3089:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3071:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3101:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3101:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3151:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3162:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3167:31:11",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3208:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3220:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3231:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3208:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3038:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3052:4:11",
														"type": ""
													}
												],
												"src": "2887:353:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3419:228:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3436:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3429:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3429:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3470:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3481:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3466:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3466:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3486:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3459:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3459:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3509:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3520:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3505:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3505:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3525:34:11",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3498:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3498:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3498:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3580:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3591:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3576:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3576:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3596:8:11",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3614:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3626:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3637:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3622:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3614:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3396:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3410:4:11",
														"type": ""
													}
												],
												"src": "3245:402:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3826:227:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3843:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3854:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3836:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3836:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3877:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3888:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3873:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3873:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3893:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3866:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3916:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3927:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3932:34:11",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3905:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3998:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4003:7:11",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3976:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3976:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4020:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4032:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4043:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4028:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4028:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4020:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3803:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3817:4:11",
														"type": ""
													}
												],
												"src": "3652:401:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4232:226:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4249:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4260:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4242:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4242:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4242:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4283:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4294:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4279:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4279:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:2:11",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4272:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4272:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4272:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4322:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4333:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4318:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4318:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4338:34:11",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4311:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4311:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4393:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4404:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4389:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4389:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4409:6:11",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4382:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4382:34:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4425:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4437:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4433:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4425:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4209:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4223:4:11",
														"type": ""
													}
												],
												"src": "4058:400:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4637:227:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4654:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4665:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4647:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4688:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4699:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4684:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4684:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4677:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4677:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4743:34:11",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4798:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4809:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4794:18:11"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4814:7:11",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4787:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4831:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4843:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4854:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4839:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4839:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4831:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4614:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4628:4:11",
														"type": ""
													}
												],
												"src": "4463:401:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4970:76:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4980:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4992:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5003:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4988:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4988:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4980:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5022:9:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5033:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5015:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5015:25:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5015:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4939:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4950:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4961:4:11",
														"type": ""
													}
												],
												"src": "4869:177:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5148:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5158:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5170:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5158:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5215:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5223:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5193:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5193:36:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5117:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5128:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5139:4:11",
														"type": ""
													}
												],
												"src": "5051:184:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5288:181:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:115:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5344:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5353:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5358:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5349:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5349:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5337:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5337:33:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5337:33:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5390:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:4:11",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5383:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5383:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5383:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5418:3:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5423:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5411:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5411:17:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5411:17:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5304:1:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5311:1:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5307:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5307:6:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5301:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5301:13:11"
															},
															"nodeType": "YulIf",
															"src": "5298:2:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5447:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5458:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5461:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5454:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5454:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5447:3:11"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5271:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5274:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5280:3:11",
														"type": ""
													}
												],
												"src": "5240:229:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5529:325:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5539:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5553:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5556:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5539:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5570:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5596:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5574:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5647:31:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5649:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5663:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5671:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5659:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5659:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5649:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5627:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5620:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5620:26:11"
															},
															"nodeType": "YulIf",
															"src": "5617:2:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5737:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5758:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5765:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5770:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5761:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5761:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5751:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5751:31:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5751:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5802:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5805:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5795:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5795:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5795:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5830:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5833:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5823:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5823:15:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5823:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5693:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5716:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5724:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5713:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5690:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:38:11"
															},
															"nodeType": "YulIf",
															"src": "5687:2:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5509:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5518:6:11",
														"type": ""
													}
												],
												"src": "5474:380:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c39190610797565b60405180910390f35b6100df6100da36600461076e565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610733565b61024a565b604051601281526020016100c3565b6100df61013136600461076e565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461076e565b61029f565b6100df61018836600461076e565b61031f565b6100f361019b366004610701565b61032d565b6060600380546101af9061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101db9061080e565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107ea565b610358565b6060600480546101af9061080e565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b9084906107ea565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f1578081fd5b6106fa826106c4565b9392505050565b60008060408385031215610713578081fd5b61071c836106c4565b915061072a602084016106c4565b90509250929050565b600080600060608486031215610747578081fd5b610750846106c4565b925061075e602085016106c4565b9150604084013590509250925092565b60008060408385031215610780578182fd5b610789836106c4565b946020939093013593505050565b6000602080835283518082850152825b818110156107c3578581018301518582016040015282016107a7565b818111156107d45783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220b93e94c52789aa39536ab06657bd591a0caf66a9355b3f85adbb60df30cafa0564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x701 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F1 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6FA DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x713 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x71C DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72A PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x747 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x750 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x75E PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x780 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x789 DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 RETURNDATACOPY SWAP5 0xC5 0x27 DUP10 0xAA CODECOPY MSTORE8 PUSH11 0xB06657BD591A0CAF66A935 JUMPDEST EXTCODEHASH DUP6 0xAD 0xBB PUSH1 0xDF ADDRESS 0xCA STATICCALL SDIV PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "1403:11223:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1445:14:11;;1438:22;1420:41;;1408:2;1393:18;4433:197:3;1375:92:11;3244:106:3;3331:12;;3244:106;;;5015:25:11;;;5003:2;4988:18;3244:106:3;4970:76:11;5192:286:3;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;5193:36:11;;5181:2;5166:18;3093:91:3;5148:87:11;5873:234:3;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:3;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:6;4570:32:3;719:10:6;4586:7:3;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:3;;4433:197;-1:-1:-1;;;4433:197:3:o;5192:286::-;5319:4;719:10:6;5375:38:3;5391:4;719:10:6;5406:6:3;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:3;;5192:286;-1:-1:-1;;;;5192:286:3:o;5873:234::-;5961:4;719:10:6;6015:64:3;719:10:6;6031:7:3;6068:10;6040:25;719:10:6;6031:7:3;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:6;6687:4:3;6768:25;719:10:6;6785:7:3;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:3;;4665:2:11;6803:85:3;;;4647:21:11;4704:2;4684:18;;;4677:30;4743:34;4723:18;;;4716:62;-1:-1:-1;;;4794:18:11;;;4787:35;4839:19;;6803:85:3;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:6;3862:28:3;719:10:6;3879:2:3;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:3;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10119:370::-;-1:-1:-1;;;;;10250:19:3;;10242:68;;;;-1:-1:-1;;;10242:68:3;;4260:2:11;10242:68:3;;;4242:21:11;4299:2;4279:18;;;4272:30;4338:34;4318:18;;;4311:62;-1:-1:-1;;;4389:18:11;;;4382:34;4433:19;;10242:68:3;4232:226:11;10242:68:3;-1:-1:-1;;;;;10328:21:3;;10320:68;;;;-1:-1:-1;;;10320:68:3;;2686:2:11;10320:68:3;;;2668:21:11;2725:2;2705:18;;;2698:30;2764:34;2744:18;;;2737:62;-1:-1:-1;;;2815:18:11;;;2808:32;2857:19;;10320:68:3;2658:224:11;10320:68:3;-1:-1:-1;;;;;10399:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;5015:25:11;;;10450:32:3;;4988:18:11;10450:32:3;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:3;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:3;;3089:2:11;11019:68:3;;;3071:21:11;3128:2;3108:18;;;3101:30;3167:31;3147:18;;;3140:59;3216:18;;11019:68:3;3061:179:11;11019:68:3;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10770:441;;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:3;;7602:68;;;;-1:-1:-1;;;7602:68:3;;3854:2:11;7602:68:3;;;3836:21:11;3893:2;3873:18;;;3866:30;3932:34;3912:18;;;3905:62;-1:-1:-1;;;3983:18:11;;;3976:35;4028:19;;7602:68:3;3826:227:11;7602:68:3;-1:-1:-1;;;;;7688:16:3;;7680:64;;;;-1:-1:-1;;;7680:64:3;;2282:2:11;7680:64:3;;;2264:21:11;2321:2;2301:18;;;2294:30;2360:34;2340:18;;;2333:62;-1:-1:-1;;;2411:18:11;;;2404:33;2454:19;;7680:64:3;2254:225:11;7680:64:3;-1:-1:-1;;;;;7826:15:3;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:3;;3447:2:11;7851:72:3;;;3429:21:11;3486:2;3466:18;;;3459:30;3525:34;3505:18;;;3498:62;-1:-1:-1;;;3576:18:11;;;3569:36;3622:19;;7851:72:3;3419:228:11;7851:72:3;-1:-1:-1;;;;;7957:15:3;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:3;8063:4;-1:-1:-1;;;;;8054:26:3;;8073:6;8054:26;;;;5015:25:11;;5003:2;4988:18;;4970:76;8054:26:3;;;;;;;;8091:37;11795:121;14:173:11;82:20;;-1:-1:-1;;;;;131:31:11;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:11:o;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:11:o;1472:603::-;1584:4;1613:2;1642;1631:9;1624:21;1674:6;1668:13;1717:6;1712:2;1701:9;1697:18;1690:34;1742:4;1755:140;1769:6;1766:1;1763:13;1755:140;;;1864:14;;;1860:23;;1854:30;1830:17;;;1849:2;1826:26;1819:66;1784:10;;1755:140;;;1913:6;1910:1;1907:13;1904:2;;;1983:4;1978:2;1969:6;1958:9;1954:22;1950:31;1943:45;1904:2;-1:-1:-1;2059:2:11;2038:15;-1:-1:-1;;2034:29:11;2019:45;;;;2066:2;2015:54;;1593:482;-1:-1:-1;;;1593:482:11:o;5240:229::-;5280:3;5311:1;5307:6;5304:1;5301:13;5298:2;;;-1:-1:-1;;;5337:33:11;;5393:4;5390:1;5383:15;5423:4;5344:3;5411:17;5298:2;-1:-1:-1;5454:9:11;;5288:181::o;5474:380::-;5553:1;5549:12;;;;5596;;;5617:2;;5671:4;5663:6;5659:17;5649:27;;5617:2;5724;5716:6;5713:14;5693:18;5690:38;5687:2;;;5770:10;5765:3;5761:20;5758:1;5751:31;5805:4;5802:1;5795:15;5833:4;5830:1;5823:15;5687:2;;5529:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "435000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22524",
								"balanceOf(address)": "1262",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "23616",
								"increaseAllowance(address,uint256)": "23578",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1026",
								"transfer(address,uint256)": "44470",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 923,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 923,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 88,
									"end": 90,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 143,
									"end": 148,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 136,
									"end": 141,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 129,
									"end": 149,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 88,
									"end": 90,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 170,
									"end": 183,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 170,
									"end": 183,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 232,
									"end": 242,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 229,
									"end": 231,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 229,
									"end": 231,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 229,
									"end": 231,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 320,
									"end": 322,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 323,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 288,
									"end": 290,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 374,
									"end": 387,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 374,
									"end": 387,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 370,
									"end": 392,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 370,
									"end": 392,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 370,
									"end": 392,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 394,
									"end": 396,
									"name": "PUSH",
									"source": 11,
									"value": "3F"
								},
								{
									"begin": 366,
									"end": 397,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 362,
									"end": 402,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 350,
									"end": 403,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 350,
									"end": 403,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 350,
									"end": 403,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 418,
									"end": 436,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 438,
									"end": 460,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 415,
									"end": 461,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 412,
									"end": 414,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 412,
									"end": 414,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 504,
									"end": 514,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 493,
									"end": 515,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 539,
									"end": 541,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 531,
									"end": 537,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 524,
									"end": 542,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 561,
									"end": 565,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 551,
									"end": 565,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 551,
									"end": 565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 606,
									"end": 609,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 601,
									"end": 603,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 596,
									"end": 598,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 588,
									"end": 594,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 584,
									"end": 599,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 580,
									"end": 604,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 577,
									"end": 610,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 574,
									"end": 576,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 574,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 627,
									"end": 632,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 620,
									"end": 625,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 613,
									"end": 633,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 574,
									"end": 576,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 653,
									"end": 658,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 644,
									"end": 658,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 644,
									"end": 658,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 681,
									"end": 683,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 678,
									"end": 679,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 675,
									"end": 684,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 667,
									"end": 800,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 783,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 765,
									"end": 788,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 765,
									"end": 788,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 759,
									"end": 789,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 738,
									"end": 752,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 734,
									"end": 757,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 734,
									"end": 757,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 727,
									"end": 790,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 692,
									"end": 702,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 692,
									"end": 702,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 815,
									"end": 816,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 812,
									"end": 821,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 809,
									"end": 811,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 809,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 877,
									"end": 882,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 872,
									"end": 874,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 867,
									"end": 869,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 859,
									"end": 865,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 855,
									"end": 870,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 851,
									"end": 875,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 844,
									"end": 883,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 809,
									"end": 811,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 911,
									"end": 917,
									"name": "SWAP7",
									"source": 11
								},
								{
									"begin": 78,
									"end": 923,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 78,
									"end": 923,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1027,
									"end": 1033,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1035,
									"end": 1041,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1088,
									"end": 1090,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1085,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1067,
									"end": 1074,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1063,
									"end": 1086,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1059,
									"end": 1091,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1109,
									"end": 1115,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1094,
									"end": 1116,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1230,
									"end": 1236,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1223,
									"end": 1245,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 1319,
									"end": 1326,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1299,
									"end": 1308,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1295,
									"end": 1317,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1373,
									"end": 1375,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1362,
									"end": 1371,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1376,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1352,
									"end": 1377,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1402,
									"end": 1404,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1392,
									"end": 1400,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1389,
									"end": 1405,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1423,
									"end": 1429,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1415,
									"end": 1421,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1408,
									"end": 1430,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1506,
									"end": 1513,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1495,
									"end": 1503,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1484,
									"end": 1493,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1480,
									"end": 1504,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMP",
									"source": 11,
									"value": "[in]"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1722,
									"end": 1726,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1710,
									"end": 1727,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1775,
									"end": 1777,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1773,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1764,
									"end": 1778,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1744,
									"end": 1762,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1741,
									"end": 1779,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1821,
									"end": 1831,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 1816,
									"end": 1819,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1809,
									"end": 1810,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1802,
									"end": 1833,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1856,
									"end": 1860,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1853,
									"end": 1854,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1846,
									"end": 1861,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1881,
									"end": 1882,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 1889,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "JUMP",
									"source": 11,
									"value": "[out]"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1971,
									"end": 1981,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 1966,
									"end": 1969,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 1962,
									"end": 1982,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1983,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1992,
									"end": 2007,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2026,
									"end": 2030,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 2023,
									"end": 2024,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2016,
									"end": 2031,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b93e94c52789aa39536ab06657bd591a0caf66a9355b3f85adbb60df30cafa0564736f6c63430008040033",
									".code": [
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1459,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1445,
											"end": 1459,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1438,
											"end": 1460,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1420,
											"end": 1461,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1420,
											"end": 1461,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1375,
											"end": 1467,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4970,
											"end": 5046,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5193,
											"end": 5229,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5229,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 5148,
											"end": 5235,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4665,
											"end": 4667,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4647,
											"end": 4668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4677,
											"end": 4707,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4777,
											"name": "PUSH",
											"source": 11,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4716,
											"end": 4778,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 4822,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 4858,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4839,
											"end": 4858,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10250,
											"end": 10269,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10250,
											"end": 10269,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4260,
											"end": 4262,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4242,
											"end": 4263,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4299,
											"end": 4301,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4272,
											"end": 4302,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4338,
											"end": 4372,
											"name": "PUSH",
											"source": 11,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4311,
											"end": 4373,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4382,
											"end": 4416,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4232,
											"end": 4458,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2686,
											"end": 2688,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2689,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2725,
											"end": 2727,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2764,
											"end": 2798,
											"name": "PUSH",
											"source": 11,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2737,
											"end": 2799,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2840,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2876,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2857,
											"end": 2876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2658,
											"end": 2882,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10410,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 10937,
											"end": 10942,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10944,
											"end": 10951,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10927,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "POP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 10982,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10966,
											"end": 11003,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11047,
											"end": 11053,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11027,
											"end": 11043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3089,
											"end": 3091,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3092,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "PUSH",
											"source": 11,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3140,
											"end": 3199,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3061,
											"end": 3240,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11138,
											"end": 11143,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11145,
											"end": 11152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11173,
											"end": 11179,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11154,
											"end": 11170,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11154,
											"end": 11179,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11129,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7484,
											"end": 8135,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 7484,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3893,
											"end": 3895,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3866,
											"end": 3896,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3932,
											"end": 3966,
											"name": "PUSH",
											"source": 11,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3905,
											"end": 3967,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4011,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4028,
											"end": 4047,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 4028,
											"end": 4047,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3826,
											"end": 4053,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7688,
											"end": 7704,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7688,
											"end": 7704,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2324,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "PUSH",
											"source": 11,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2395,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2473,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 2454,
											"end": 2473,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2254,
											"end": 2479,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3429,
											"end": 3450,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3459,
											"end": 3489,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "PUSH",
											"source": 11,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3498,
											"end": 3560,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3569,
											"end": 3605,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3622,
											"end": 3641,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 3622,
											"end": 3641,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3419,
											"end": 3647,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7995,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8069,
											"end": 8071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8063,
											"end": 8067,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8073,
											"end": 8079,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4970,
											"end": 5046,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 8091,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 343,
											"end": 382,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 262,
											"end": 388,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 461,
											"end": 467,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 501,
											"end": 508,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 497,
											"end": 520,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 493,
											"end": 525,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 490,
											"end": 492,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 528,
											"end": 550,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 490,
											"end": 492,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 600,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 609,
											"end": 657,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 609,
											"end": 657,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 663,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 761,
											"end": 767,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 782,
											"end": 784,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 820,
											"end": 842,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 782,
											"end": 784,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 853,
											"end": 892,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 853,
											"end": 892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 901,
											"end": 949,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 901,
											"end": 949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 981,
											"end": 999,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1115,
											"end": 1138,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1179,
											"end": 1218,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1275,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 1472,
											"end": 2075,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1472,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1588,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1615,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1644,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1714,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1710,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1690,
											"end": 1724,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1742,
											"end": 1746,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1775,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1852,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1819,
											"end": 1885,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1978,
											"end": 1980,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1954,
											"end": 1976,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 1988,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2059,
											"end": 2061,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2034,
											"end": 2063,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2068,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2069,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2015,
											"end": 2069,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1593,
											"end": 2075,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 2075,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5240,
											"end": 5469,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5240,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5312,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5337,
											"end": 5370,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5337,
											"end": 5370,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5390,
											"end": 5391,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5427,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5344,
											"end": 5347,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5288,
											"end": 5469,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": 5474,
											"end": 5854,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 5474,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5553,
											"end": 5554,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 5675,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 5663,
											"end": 5669,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5659,
											"end": 5676,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5724,
											"end": 5726,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5716,
											"end": 5722,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5713,
											"end": 5727,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5690,
											"end": 5728,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5770,
											"end": 5780,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5761,
											"end": 5781,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5758,
											"end": 5759,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5782,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5809,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 5802,
											"end": 5803,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5795,
											"end": 5810,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5833,
											"end": 5837,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5830,
											"end": 5831,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5838,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1330,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1336,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1338,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1340,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1342,
								"contract": "contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e42f2cbb6e656aedf12c40c0a4365000b22aa2c7ca06224d2d2c8f8f29c4348364736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e42f2cbb6e656aedf12c40c0a4365000b22aa2c7ca06224d2d2c8f8f29c4348364736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x2F 0x2C 0xBB PUSH15 0x656AEDF12C40C0A4365000B22AA2C7 0xCA MOD 0x22 0x4D 0x2D 0x2C DUP16 DUP16 0x29 0xC4 CALLVALUE DUP4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "146:1885:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e42f2cbb6e656aedf12c40c0a4365000b22aa2c7ca06224d2d2c8f8f29c4348364736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x2F 0x2C 0xBB PUSH15 0x656AEDF12C40C0A4365000B22AA2C7 0xCA MOD 0x22 0x4D 0x2D 0x2C DUP16 DUP16 0x29 0xC4 CALLVALUE DUP4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "146:1885:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e42f2cbb6e656aedf12c40c0a4365000b22aa2c7ca06224d2d2c8f8f29c4348364736f6c63430008040033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220339c83dc2530b1b5057ac9b73ce69c6f9143f597297200768ac92744dcd3b66864736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220339c83dc2530b1b5057ac9b73ce69c6f9143f597297200768ac92744dcd3b66864736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP13 DUP4 0xDC 0x25 ADDRESS 0xB1 0xB5 SDIV PUSH27 0xC9B73CE69C6F9143F597297200768AC92744DCD3B66864736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "482:6300:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220339c83dc2530b1b5057ac9b73ce69c6f9143f597297200768ac92744dcd3b66864736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP13 DUP4 0xDC 0x25 ADDRESS 0xB1 0xB5 SDIV PUSH27 0xC9B73CE69C6F9143F597297200768AC92744DCD3B66864736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "482:6300:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220339c83dc2530b1b5057ac9b73ce69c6f9143f597297200768ac92744dcd3b66864736f6c63430008040033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Arcade.sol": {
				"ast": {
					"absolutePath": "contracts/Arcade.sol",
					"exportedSymbols": {
						"AccessControl": [
							1241
						],
						"Arcade": [
							921
						],
						"Context": [
							2025
						],
						"ERC165": [
							2252
						],
						"ERC20": [
							1900
						],
						"IAccessControl": [
							1314
						],
						"IERC165": [
							2264
						],
						"IERC20": [
							1978
						],
						"IERC20Metadata": [
							2003
						],
						"SafeMath": [
							2576
						],
						"Strings": [
							2228
						]
					},
					"id": 922,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:0"
						},
						{
							"absolutePath": "contracts/access/AccessControl.sol",
							"file": "./access/AccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 922,
							"sourceUnit": 1242,
							"src": "71:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/ERC20.sol",
							"file": "./token/ERC20/ERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 922,
							"sourceUnit": 1901,
							"src": "108:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/math/SafeMath.sol",
							"file": "./utils/math/SafeMath.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 922,
							"sourceUnit": 2577,
							"src": "142:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1241,
										"src": "198:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "198:13:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 921,
							"linearizedBaseContracts": [
								921,
								1241,
								2252,
								2264,
								1314,
								2025
							],
							"name": "Arcade",
							"nameLocation": "188:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 9,
									"libraryName": {
										"id": 7,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2576,
										"src": "224:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "218:27:0",
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "237:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "CloseGame",
									"nameLocation": "261:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "279:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "271:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:12:0"
									},
									"src": "255:28:0"
								},
								{
									"anonymous": false,
									"id": 17,
									"name": "CreateGame",
									"nameLocation": "294:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "313:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "305:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "304:12:0"
									},
									"src": "288:29:0"
								},
								{
									"anonymous": false,
									"id": 21,
									"name": "DeleteGame",
									"nameLocation": "328:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "347:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "339:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:12:0"
									},
									"src": "322:29:0"
								},
								{
									"anonymous": false,
									"id": 25,
									"name": "Fee",
									"nameLocation": "362:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "374:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "366:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:13:0"
									},
									"src": "356:23:0"
								},
								{
									"anonymous": false,
									"id": 29,
									"name": "OpenGame",
									"nameLocation": "390:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "407:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "399:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:12:0"
									},
									"src": "384:27:0"
								},
								{
									"anonymous": false,
									"id": 33,
									"name": "Payout",
									"nameLocation": "422:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "payout",
												"nameLocation": "437:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "429:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:16:0"
									},
									"src": "416:29:0"
								},
								{
									"anonymous": false,
									"id": 41,
									"name": "PlacePlayer",
									"nameLocation": "456:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "476:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "468:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "492:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "484:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "501:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "496:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 38,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "496:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:41:0"
									},
									"src": "450:59:0"
								},
								{
									"anonymous": false,
									"id": 49,
									"name": "Refund",
									"nameLocation": "520:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "535:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "527:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "547:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "539:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "563:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "555:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:44:0"
									},
									"src": "514:57:0"
								},
								{
									"anonymous": false,
									"id": 55,
									"name": "Register",
									"nameLocation": "582:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "_player",
												"nameLocation": "607:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "591:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "624:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "616:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:37:0"
									},
									"src": "576:52:0"
								},
								{
									"anonymous": false,
									"id": 59,
									"name": "RemovePlayer",
									"nameLocation": "639:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:16:0"
									},
									"src": "633:35:0"
								},
								{
									"constant": true,
									"functionSelector": "c18e397e",
									"id": 64,
									"mutability": "constant",
									"name": "ARCADE_MANAGER",
									"nameLocation": "698:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "674:68:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 60,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "674:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4152434144455f4d414e41474552",
												"id": 62,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "725:16:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3131fc8beb48b895197ad34f21c86afdf6a989a5cd911181952dbf8dfcf18192",
													"typeString": "literal_string \"ARCADE_MANAGER\""
												},
												"value": "ARCADE_MANAGER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3131fc8beb48b895197ad34f21c86afdf6a989a5cd911181952dbf8dfcf18192",
													"typeString": "literal_string \"ARCADE_MANAGER\""
												}
											],
											"id": 61,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "715:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "715:27:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "99597b70",
									"id": 69,
									"mutability": "constant",
									"name": "GAME_MASTER",
									"nameLocation": "772:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "748:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 65,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "748:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "47414d455f4d4153544552",
												"id": 67,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "796:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c",
													"typeString": "literal_string \"GAME_MASTER\""
												},
												"value": "GAME_MASTER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c13b5abbc85050d426f9500a16cfd9f7d94261c880b9a4e03d584d28c06059c",
													"typeString": "literal_string \"GAME_MASTER\""
												}
											],
											"id": 66,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "786:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 68,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "786:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Arcade.GameInfo",
									"id": 96,
									"members": [
										{
											"constant": false,
											"id": 71,
											"mutability": "mutable",
											"name": "exchange",
											"nameLocation": "851:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "843:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 70,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "843:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 73,
											"mutability": "mutable",
											"name": "player_count",
											"nameLocation": "877:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "869:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 72,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "869:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 75,
											"mutability": "mutable",
											"name": "player_limit",
											"nameLocation": "907:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "899:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 74,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "899:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 77,
											"mutability": "mutable",
											"name": "registration_fee",
											"nameLocation": "937:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "929:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 76,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "929:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 79,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "971:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "963:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 78,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "963:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 81,
											"mutability": "mutable",
											"name": "arcade_token",
											"nameLocation": "995:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "987:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 80,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "987:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 83,
											"mutability": "mutable",
											"name": "total_fee",
											"nameLocation": "1025:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "1017:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 82,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1017:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 87,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1072:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "1044:31:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 86,
												"keyType": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1044:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 91,
											"mutability": "mutable",
											"name": "paid",
											"nameLocation": "1113:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "1085:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 90,
												"keyType": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1085:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 95,
											"mutability": "mutable",
											"name": "seats",
											"nameLocation": "1155:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "1127:33:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 94,
												"keyType": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1127:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GameInfo",
									"nameLocation": "824:8:0",
									"nodeType": "StructDefinition",
									"scope": 921,
									"src": "817:350:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Arcade.ArcadeToken",
									"id": 104,
									"members": [
										{
											"constant": false,
											"id": 99,
											"mutability": "mutable",
											"name": "native_token",
											"nameLocation": "1210:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 104,
											"src": "1202:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$1978",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 98,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 97,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1978,
													"src": "1202:6:0"
												},
												"referencedDeclaration": 1978,
												"src": "1202:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1978",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 101,
											"mutability": "mutable",
											"name": "active",
											"nameLocation": "1240:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 104,
											"src": "1232:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 100,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1232:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 103,
											"mutability": "mutable",
											"name": "redemption_rate",
											"nameLocation": "1264:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 104,
											"src": "1256:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 102,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1256:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ArcadeToken",
									"nameLocation": "1180:11:0",
									"nodeType": "StructDefinition",
									"scope": 921,
									"src": "1173:113:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b22c376d",
									"id": 109,
									"mutability": "mutable",
									"name": "acceptedArcadeTokens",
									"nameLocation": "1331:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "1292:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
										"typeString": "mapping(address => struct Arcade.ArcadeToken)"
									},
									"typeName": {
										"id": 108,
										"keyType": {
											"id": 105,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1300:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1292:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
											"typeString": "mapping(address => struct Arcade.ArcadeToken)"
										},
										"valueType": {
											"id": 107,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 106,
												"name": "ArcadeToken",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "1311:11:0"
											},
											"referencedDeclaration": 104,
											"src": "1311:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ArcadeToken_$104_storage_ptr",
												"typeString": "struct Arcade.ArcadeToken"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ccaf237f",
									"id": 114,
									"mutability": "mutable",
									"name": "gameData",
									"nameLocation": "1394:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "1358:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
										"typeString": "mapping(uint256 => struct Arcade.GameInfo)"
									},
									"typeName": {
										"id": 113,
										"keyType": {
											"id": 110,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1366:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1358:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
											"typeString": "mapping(uint256 => struct Arcade.GameInfo)"
										},
										"valueType": {
											"id": 112,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 111,
												"name": "GameInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 96,
												"src": "1377:8:0"
											},
											"referencedDeclaration": 96,
											"src": "1377:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
												"typeString": "struct Arcade.GameInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 117,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "1424:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "1409:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 115,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1409:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1435:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c46ed45a",
									"id": 119,
									"mutability": "mutable",
									"name": "fee_percentage",
									"nameLocation": "1459:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "1444:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 118,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1444:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "base",
									"nameLocation": "1496:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "1480:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 120,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1480:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 127,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 121,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1503:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"components": [
												{
													"arguments": [
														{
															"id": 124,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1516:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1508:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1508:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1508:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 126,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1507:19:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "1503:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 130,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "1548:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 921,
									"src": "1533:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 129,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1533:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1574:221:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "1595:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 135,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "1615:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1615:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 133,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "1584:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1584:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1584:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 140,
															"name": "ARCADE_MANAGER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1649:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 141,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "1665:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 139,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "1638:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1638:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1638:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "GAME_MASTER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "1699:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 147,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "1712:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1712:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 145,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "1688:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1688:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "1688:37:0"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 151,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1736:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 152,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "1744:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1744:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1736:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1736:20:0"
											},
											{
												"expression": {
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 156,
														"name": "fee_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "1767:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31653137",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1784:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														},
														"value": "1e17"
													},
													"src": "1767:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1767:21:0"
											}
										]
									},
									"id": 161,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1571:2:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1574:0:0"
									},
									"scope": 921,
									"src": "1560:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1959:121:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 171,
																	"name": "acceptedArcadeTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "1977:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																		"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																	}
																},
																"id": 173,
																"indexExpression": {
																	"id": 172,
																	"name": "token_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1998:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1977:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																	"typeString": "struct Arcade.ArcadeToken storage ref"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 101,
															"src": "1977:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 175,
																	"name": "acceptedArcadeTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "2021:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																		"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																	}
																},
																"id": 177,
																"indexExpression": {
																	"id": 176,
																	"name": "token_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "2042:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2021:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																	"typeString": "struct Arcade.ArcadeToken storage ref"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "redemption_rate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 103,
															"src": "2021:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 179,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1976:97:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 170,
												"id": 180,
												"nodeType": "Return",
												"src": "1969:104:0"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1801:73:0",
										"text": " @dev Returns {ArcadeToken} struct for `token_address`."
									},
									"functionSelector": "9d00c61e",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "arcadeToken",
									"nameLocation": "1888:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "token_address",
												"nameLocation": "1908:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1900:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:23:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1944:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1944:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1950:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:15:0"
									},
									"scope": 921,
									"src": "1879:201:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2239:66:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 190,
															"name": "acceptedArcadeTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2256:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
															}
														},
														"id": 192,
														"indexExpression": {
															"id": 191,
															"name": "token_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2277:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2256:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
															"typeString": "struct Arcade.ArcadeToken storage ref"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "active",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 101,
													"src": "2256:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 189,
												"id": 194,
												"nodeType": "Return",
												"src": "2249:49:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "2086:78:0",
										"text": " @dev Returns {active} as boolean value for `token_address`."
									},
									"functionSelector": "e6f091f9",
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAccepted",
									"nameLocation": "2178:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "token_address",
												"nameLocation": "2197:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2189:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:23:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2233:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2233:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2232:6:0"
									},
									"scope": 921,
									"src": "2169:136:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2554:803:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 203,
																			"name": "gameData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 114,
																			"src": "2572:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																				"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																			}
																		},
																		"id": 205,
																		"indexExpression": {
																			"id": 204,
																			"name": "game_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "2581:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2572:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																			"typeString": "struct Arcade.GameInfo storage ref"
																		}
																	},
																	"id": 206,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "seats",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 95,
																	"src": "2572:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 209,
																"indexExpression": {
																	"expression": {
																		"id": 207,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2596:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2596:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2572:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2611:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2572:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726f706879204b696e67204172636164653a20556e617574686f72697a65642e",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2614:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e58036a9a85e0ff3f290e73b4e692a530d20a26bcd7f7164c38ae84b13bd5f10",
																"typeString": "literal_string \"Trophy King Arcade: Unauthorized.\""
															},
															"value": "Trophy King Arcade: Unauthorized."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e58036a9a85e0ff3f290e73b4e692a530d20a26bcd7f7164c38ae84b13bd5f10",
																"typeString": "literal_string \"Trophy King Arcade: Unauthorized.\""
															}
														],
														"id": 202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2564:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2564:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "2564:86:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 216,
																		"name": "gameData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "2668:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																			"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																		}
																	},
																	"id": 218,
																	"indexExpression": {
																		"id": 217,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2677:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2668:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																		"typeString": "struct Arcade.GameInfo storage ref"
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 79,
																"src": "2668:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2696:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2668:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726f706879204b696e67204172636164653a2047616d6520636c6f7365642e",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2699:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3147508d713f5a0416c0b9397acc0c7db67afd004656b898ef9a7aadad32b0ba",
																"typeString": "literal_string \"Trophy King Arcade: Game closed.\""
															},
															"value": "Trophy King Arcade: Game closed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3147508d713f5a0416c0b9397acc0c7db67afd004656b898ef9a7aadad32b0ba",
																"typeString": "literal_string \"Trophy King Arcade: Game closed.\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2660:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2660:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "2660:74:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 226,
																		"name": "gameData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "2752:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																			"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																		}
																	},
																	"id": 228,
																	"indexExpression": {
																		"id": 227,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2761:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2752:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																		"typeString": "struct Arcade.GameInfo storage ref"
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "player_limit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 75,
																"src": "2752:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 230,
																		"name": "gameData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "2785:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																			"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																		}
																	},
																	"id": 232,
																	"indexExpression": {
																		"id": 231,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2794:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2785:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																		"typeString": "struct Arcade.GameInfo storage ref"
																	}
																},
																"id": 233,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "player_count",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 73,
																"src": "2785:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2752:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726f706879204b696e67204172636164653a2047616d652066756c6c2e202054727920616761696e2e",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2817:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d67db45e25e45128e972499cd5e2f048a2288ba2b56fc714cdb6f6fba6c95241",
																"typeString": "literal_string \"Trophy King Arcade: Game full.  Try again.\""
															},
															"value": "Trophy King Arcade: Game full.  Try again."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d67db45e25e45128e972499cd5e2f048a2288ba2b56fc714cdb6f6fba6c95241",
																"typeString": "literal_string \"Trophy King Arcade: Game full.  Try again.\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2744:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2744:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "2744:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 239,
																			"name": "gameData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 114,
																			"src": "2880:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																				"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																			}
																		},
																		"id": 241,
																		"indexExpression": {
																			"id": 240,
																			"name": "game_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "2889:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2880:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																			"typeString": "struct Arcade.GameInfo storage ref"
																		}
																	},
																	"id": 242,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "paid",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 91,
																	"src": "2880:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 245,
																"indexExpression": {
																	"expression": {
																		"id": 243,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2903:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2903:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2880:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2918:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2880:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726f706879204b696e67204172636164653a20416c726561647920726567697374657265642e",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2921:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39f6ad3a7ba6df7f1bd7790fcaefdbe707fc60fa099bee994b9d93fd1123c24c",
																"typeString": "literal_string \"Trophy King Arcade: Already registered.\""
															},
															"value": "Trophy King Arcade: Already registered."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_39f6ad3a7ba6df7f1bd7790fcaefdbe707fc60fa099bee994b9d93fd1123c24c",
																"typeString": "literal_string \"Trophy King Arcade: Already registered.\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2872:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2872:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "2872:91:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 252,
																		"name": "gameData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "2981:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																			"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																		}
																	},
																	"id": 254,
																	"indexExpression": {
																		"id": 253,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2990:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2981:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																		"typeString": "struct Arcade.GameInfo storage ref"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "player_limit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 75,
																"src": "2981:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2981:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726f706879204b696e67204172636164653a2047616d65206e6f7420666f756e642e",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3017:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc0f7ef317f79a478ce2f0f5bc392d176cd738d07b68b36645f9677e62b68e9f",
																"typeString": "literal_string \"Trophy King Arcade: Game not found.\""
															},
															"value": "Trophy King Arcade: Game not found."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc0f7ef317f79a478ce2f0f5bc392d176cd738d07b68b36645f9677e62b68e9f",
																"typeString": "literal_string \"Trophy King Arcade: Game not found.\""
															}
														],
														"id": 251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2973:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "2973:82:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 271,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2015,
																		"src": "3154:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3154:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 275,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3176:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Arcade_$921",
																				"typeString": "contract Arcade"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Arcade_$921",
																				"typeString": "contract Arcade"
																			}
																		],
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3168:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 273,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3168:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3168:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"baseExpression": {
																			"id": 277,
																			"name": "gameData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 114,
																			"src": "3183:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																				"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																			}
																		},
																		"id": 279,
																		"indexExpression": {
																			"id": 278,
																			"name": "game_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "3192:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3183:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																			"typeString": "struct Arcade.GameInfo storage ref"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "registration_fee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 77,
																	"src": "3183:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 262,
																			"name": "acceptedArcadeTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 109,
																			"src": "3073:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																				"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																			}
																		},
																		"id": 268,
																		"indexExpression": {
																			"components": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 263,
																							"name": "gameData",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 114,
																							"src": "3095:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																								"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																							}
																						},
																						"id": 265,
																						"indexExpression": {
																							"id": 264,
																							"name": "game_id",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 199,
																							"src": "3104:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3095:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																							"typeString": "struct Arcade.GameInfo storage ref"
																						}
																					},
																					"id": 266,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "arcade_token",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 81,
																					"src": "3095:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"id": 267,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3094:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3073:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																			"typeString": "struct Arcade.ArcadeToken storage ref"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "native_token",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 99,
																	"src": "3073:67:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1978",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1977,
																"src": "3073:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3073:145:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726f706879204b696e67204172636164653a204d75737420617070726f766520726567697374726174696f6e206665652e",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3220:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_757df3aca1a1c0adbe7add59c897e665a7e972e40c26169ae2b9960374a84d83",
																"typeString": "literal_string \"Trophy King Arcade: Must approve registration fee.\""
															},
															"value": "Trophy King Arcade: Must approve registration fee."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_757df3aca1a1c0adbe7add59c897e665a7e972e40c26169ae2b9960374a84d83",
																"typeString": "literal_string \"Trophy King Arcade: Must approve registration fee.\""
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3065:208:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "3065:208:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 286,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3303:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3303:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 289,
																	"name": "gameData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "3315:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																		"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																	}
																},
																"id": 291,
																"indexExpression": {
																	"id": 290,
																	"name": "game_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "3324:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3315:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																	"typeString": "struct Arcade.GameInfo storage ref"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "registration_fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 77,
															"src": "3315:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 285,
														"name": "_register",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "3284:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "3284:66:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "2316:191:0",
										"text": " @dev Validates game configuration for caller. Transfers {#}.registration_fee\n to arcade contract.\n Requirements:\n - Valid game configuration"
									},
									"functionSelector": "f207564e",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nameLocation": "2521:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "2538:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2530:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:17:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2554:0:0"
									},
									"scope": 921,
									"src": "2512:845:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "3592:295:0",
										"statements": [
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3610:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "3602:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3602:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 314,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3686:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arcade_$921",
																		"typeString": "contract Arcade"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arcade_$921",
																		"typeString": "contract Arcade"
																	}
																],
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3678:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 312,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3678:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3678:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 307,
																	"name": "acceptedArcadeTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "3620:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																		"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																	}
																},
																"id": 309,
																"indexExpression": {
																	"id": 308,
																	"name": "arcade_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "3641:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3620:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																	"typeString": "struct Arcade.ArcadeToken storage ref"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "native_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 99,
															"src": "3620:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1978",
																"typeString": "contract IERC20"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1935,
														"src": "3620:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3620:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3602:90:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 318,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "3707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3717:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3707:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "IfStatement",
												"src": "3703:178:0",
												"trueBody": {
													"id": 335,
													"nodeType": "Block",
													"src": "3720:161:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 328,
																					"name": "_msgSender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2015,
																					"src": "3801:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3801:12:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 330,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 306,
																				"src": "3815:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"baseExpression": {
																						"id": 322,
																						"name": "acceptedArcadeTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 109,
																						"src": "3742:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																							"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																						}
																					},
																					"id": 325,
																					"indexExpression": {
																						"components": [
																							{
																								"id": 323,
																								"name": "arcade_token",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 299,
																								"src": "3764:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"id": 324,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3763:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3742:36:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																						"typeString": "struct Arcade.ArcadeToken storage ref"
																					}
																				},
																				"id": 326,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "native_token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 99,
																				"src": "3742:49:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1978",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1945,
																			"src": "3742:58:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3742:81:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726f706879204b696e67204172636164653a205265636f6e63696c696174696f6e206661696c65642e",
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3825:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e2b35d33254f1144795ed9e913b20c719e8155b39790b55609f72cbcc8a314ee",
																			"typeString": "literal_string \"Trophy King Arcade: Reconciliation failed.\""
																		},
																		"value": "Trophy King Arcade: Reconciliation failed."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e2b35d33254f1144795ed9e913b20c719e8155b39790b55609f72cbcc8a314ee",
																			"typeString": "literal_string \"Trophy King Arcade: Reconciliation failed.\""
																		}
																	],
																	"id": 321,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3734:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3734:136:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 334,
															"nodeType": "ExpressionStatement",
															"src": "3734:136:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "3364:146:0",
										"text": " @dev Transfer balance of `arcade_token` to caller.\n Requirements:\n - the caller must have admin role."
									},
									"functionSelector": "09a18635",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 302,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "3572:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 303,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 301,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "3563:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3563:28:0"
										}
									],
									"name": "reconcile",
									"nameLocation": "3524:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "arcade_token",
												"nameLocation": "3542:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "3534:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3533:22:0"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3592:0:0"
									},
									"scope": 921,
									"src": "3515:372:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "4136:44:0",
										"statements": [
											{
												"expression": {
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 347,
														"name": "fee_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "4146:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 348,
														"name": "percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4163:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4146:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "4146:27:0"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "3893:154:0",
										"text": " @dev Set fee percentage for arcade contract.\n Requirements:\n - the caller must have arcade manager role.     "
									},
									"functionSelector": "2ac5016f",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 344,
													"name": "ARCADE_MANAGER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "4120:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 343,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "4111:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4111:24:0"
										}
									],
									"name": "setArcadeFeePercentage",
									"nameLocation": "4061:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "4092:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4084:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4083:20:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4136:0:0"
									},
									"scope": 921,
									"src": "4052:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "4651:464:0",
										"statements": [
											{
												"expression": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 365,
																"name": "acceptedArcadeTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "4661:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																	"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																}
															},
															"id": 367,
															"indexExpression": {
																"id": 366,
																"name": "token_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "4682:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4661:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																"typeString": "struct Arcade.ArcadeToken storage ref"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "redemption_rate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "4661:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 369,
														"name": "redemption_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "4715:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4661:69:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "4661:69:0"
											},
											{
												"expression": {
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 372,
																"name": "acceptedArcadeTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "4740:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																	"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																}
															},
															"id": 374,
															"indexExpression": {
																"id": 373,
																"name": "token_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "4761:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4740:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																"typeString": "struct Arcade.ArcadeToken storage ref"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 101,
														"src": "4740:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 376,
														"name": "_active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "4785:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4740:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "4740:52:0"
											},
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "payable_token_address",
														"nameLocation": "4811:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 405,
														"src": "4803:29:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 379,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4803:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"id": 383,
															"name": "token_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "4843:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4835:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 381,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4835:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4835:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4803:54:0"
											},
											{
												"expression": {
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 386,
																"name": "acceptedArcadeTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "4868:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																	"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																}
															},
															"id": 388,
															"indexExpression": {
																"id": 387,
																"name": "token_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "4889:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4868:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																"typeString": "struct Arcade.ArcadeToken storage ref"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "native_token",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 99,
														"src": "4868:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1978",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 391,
																"name": "payable_token_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "4926:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 390,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1978,
															"src": "4919:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1978_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4919:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1978",
															"typeString": "contract IERC20"
														}
													},
													"src": "4868:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1978",
														"typeString": "contract IERC20"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "4868:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 400,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "5015:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5015:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "313135373932303839323337333136313935343233353730393835303038363837393037383533323639393834363635363430353634303339343537353834303037393133313239363339393335",
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5029:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9935"
															},
															"value": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9935"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 395,
																	"name": "acceptedArcadeTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "4958:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																		"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																	}
																},
																"id": 397,
																"indexExpression": {
																	"id": 396,
																	"name": "token_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "4979:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4958:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																	"typeString": "struct Arcade.ArcadeToken storage ref"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "native_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 99,
															"src": "4958:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1978",
																"typeString": "contract IERC20"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1965,
														"src": "4958:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4958:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "4958:150:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "4186:342:0",
										"text": " @dev Adds token to {acceptedArcadeTokens} Require `token_address` for proxy balance exchange.  \n `redemption_rate` is set and determines the rate that proxy balance is exchanged.  \n Set `active` to reflect status of exchange.\n Requirements:\n - the caller must have arcade manager role."
									},
									"functionSelector": "06602a48",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 362,
													"name": "ARCADE_MANAGER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "4635:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 361,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "4626:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4626:24:0"
										}
									],
									"name": "addArcadeToken",
									"nameLocation": "4542:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "token_address",
												"nameLocation": "4565:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "4557:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "redemption_rate",
												"nameLocation": "4588:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "4580:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "_active",
												"nameLocation": "4610:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "4605:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4605:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4556:62:0"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4651:0:0"
									},
									"scope": 921,
									"src": "4533:582:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "5359:67:0",
										"statements": [
											{
												"expression": {
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 415,
																"name": "acceptedArcadeTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "5369:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																	"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																}
															},
															"id": 417,
															"indexExpression": {
																"id": 416,
																"name": "token_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "5390:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5369:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																"typeString": "struct Arcade.ArcadeToken storage ref"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 101,
														"src": "5369:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5414:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5369:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "5369:50:0"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "5121:151:0",
										"text": " @dev Disable token for proxy balance exchange.\n Requirements:\n - the caller must have arcade manager role."
									},
									"functionSelector": "3e16518f",
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 412,
													"name": "ARCADE_MANAGER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "5343:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 413,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 411,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "5334:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5334:24:0"
										}
									],
									"name": "removeArcadeToken",
									"nameLocation": "5286:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "token_address",
												"nameLocation": "5312:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "5304:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5303:23:0"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5359:0:0"
									},
									"scope": 921,
									"src": "5277:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "5642:79:0",
										"statements": [
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 432,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5652:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 434,
															"indexExpression": {
																"id": 433,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "5661:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5652:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 79,
														"src": "5652:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5679:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5652:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "5652:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 440,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "5706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "CloseGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "5696:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5696:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "EmitStatement",
												"src": "5691:23:0"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "5432:140:0",
										"text": " @dev Changes {#}.status for `game_id`.\n Requirements:\n - the caller must have game master role."
									},
									"functionSelector": "2d6ef310",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 429,
													"name": "GAME_MASTER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 69,
													"src": "5629:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 430,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 428,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "5620:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5620:21:0"
										}
									],
									"name": "closeGame",
									"nameLocation": "5586:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "5604:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "5596:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5595:17:0"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5642:0:0"
									},
									"scope": 921,
									"src": "5577:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "6138:385:0",
										"statements": [
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 461,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6148:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 463,
															"indexExpression": {
																"id": 462,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "6157:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6148:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 79,
														"src": "6148:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6148:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "6148:28:0"
											},
											{
												"expression": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 468,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6186:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 470,
															"indexExpression": {
																"id": 469,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "6195:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6186:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 83,
														"src": "6186:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6216:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6186:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "6186:31:0"
											},
											{
												"expression": {
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 475,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6227:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 477,
															"indexExpression": {
																"id": 476,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "6236:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6227:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 478,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "registration_fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 77,
														"src": "6227:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 479,
														"name": "registration_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "6264:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6227:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "6227:53:0"
											},
											{
												"expression": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 482,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6290:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 484,
															"indexExpression": {
																"id": 483,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "6299:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6290:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "arcade_token",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 81,
														"src": "6290:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 486,
														"name": "arcade_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "6323:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6290:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "6290:45:0"
											},
											{
												"expression": {
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 489,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6345:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 491,
															"indexExpression": {
																"id": 490,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "6354:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6345:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "player_count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 73,
														"src": "6345:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6378:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6345:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "6345:34:0"
											},
											{
												"expression": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 496,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6389:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 498,
															"indexExpression": {
																"id": 497,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "6398:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6389:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "player_limit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 75,
														"src": "6389:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 500,
														"name": "player_limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "6422:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6389:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "6389:45:0"
											},
											{
												"expression": {
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 503,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6444:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 505,
															"indexExpression": {
																"id": 504,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "6453:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6444:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "exchange",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 71,
														"src": "6444:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 507,
														"name": "exchange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "6473:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6444:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "6444:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 511,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "6508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 510,
														"name": "CreateGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "6497:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6497:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "EmitStatement",
												"src": "6492:24:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "5727:255:0",
										"text": " @dev Mutates {gameData} structure with game configuration.\n Sets {#} for `game_id`, `registration_fee`, `arcade_token`, `player_limit`, `exchange` \n Requirements:\n - the caller must have game master role."
									},
									"functionSelector": "f336ee3c",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 458,
													"name": "GAME_MASTER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 69,
													"src": "6125:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 459,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "6116:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6116:21:0"
										}
									],
									"name": "createGame",
									"nameLocation": "5996:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "6015:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6007:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "registration_fee",
												"nameLocation": "6032:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6024:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "arcade_token",
												"nameLocation": "6058:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6050:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "player_limit",
												"nameLocation": "6080:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6072:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "exchange",
												"nameLocation": "6099:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "6094:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6094:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6006:102:0"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:0:0"
									},
									"scope": 921,
									"src": "5987:536:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "6748:76:0",
										"statements": [
											{
												"expression": {
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6758:24:0",
													"subExpression": {
														"baseExpression": {
															"id": 524,
															"name": "gameData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6765:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
															}
														},
														"id": 526,
														"indexExpression": {
															"id": 525,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "6774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6765:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameInfo_$96_storage",
															"typeString": "struct Arcade.GameInfo storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "6758:24:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 530,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "6809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "DeleteGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "6798:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6798:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "EmitStatement",
												"src": "6793:24:0"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "6529:148:0",
										"text": " @dev Deletes {#} for {gameData} for `game_id`.\n Requirements:\n - the caller must have game master role."
									},
									"functionSelector": "248a55a1",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 521,
													"name": "GAME_MASTER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 69,
													"src": "6735:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 522,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 520,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "6726:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6726:21:0"
										}
									],
									"name": "deleteGame",
									"nameLocation": "6691:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "6710:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "6702:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6701:17:0"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6748:0:0"
									},
									"scope": 921,
									"src": "6682:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "6952:100:0",
										"statements": [
											{
												"expression": {
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 540,
																	"name": "gameData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "6962:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																		"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																	}
																},
																"id": 542,
																"indexExpression": {
																	"id": 541,
																	"name": "game_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 537,
																	"src": "6971:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6962:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																	"typeString": "struct Arcade.GameInfo storage ref"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "seats",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "6962:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 546,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 544,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "6986:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6986:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6962:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7002:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6962:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "6962:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 551,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "7032:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7032:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 550,
														"name": "RemovePlayer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "7019:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7019:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "EmitStatement",
												"src": "7014:31:0"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "6830:73:0",
										"text": " @dev Updates {gameData} sets {#}.seats[`player`] to 0."
									},
									"functionSelector": "9f512e22",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leaveMatch",
									"nameLocation": "6917:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "6936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "6928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6927:17:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6952:0:0"
									},
									"scope": 921,
									"src": "6908:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "7267:78:0",
										"statements": [
											{
												"expression": {
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 565,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "7277:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 567,
															"indexExpression": {
																"id": 566,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "7286:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7277:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 79,
														"src": "7277:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7304:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7277:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "7277:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 573,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7330:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 572,
														"name": "OpenGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "7321:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7321:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "EmitStatement",
												"src": "7316:22:0"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "7058:140:0",
										"text": " @dev Changes {#}.status for `game_id`.\n Requirements:\n - the caller must have game master role."
									},
									"functionSelector": "00f5544f",
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 562,
													"name": "GAME_MASTER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 69,
													"src": "7254:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 563,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 561,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "7245:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7245:21:0"
										}
									],
									"name": "openGame",
									"nameLocation": "7212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "7229:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "7221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7220:17:0"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7267:0:0"
									},
									"scope": 921,
									"src": "7203:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "7609:308:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 590,
																	"name": "gameData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "7623:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																		"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																	}
																},
																"id": 592,
																"indexExpression": {
																	"id": 591,
																	"name": "game_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7632:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7623:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																	"typeString": "struct Arcade.GameInfo storage ref"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "seats",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "7623:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 595,
														"indexExpression": {
															"id": 594,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "7647:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7623:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "31",
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7658:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7623:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "7819:92:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 617,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "7850:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 618,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "7858:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7867:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 616,
																	"name": "PlacePlayer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "7838:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,bool)"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7838:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 621,
															"nodeType": "EmitStatement",
															"src": "7833:40:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7895:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 589,
															"id": 623,
															"nodeType": "Return",
															"src": "7888:12:0"
														}
													]
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "7619:292:0",
												"trueBody": {
													"id": 615,
													"nodeType": "Block",
													"src": "7661:152:0",
													"statements": [
														{
															"expression": {
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 598,
																				"name": "gameData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 114,
																				"src": "7675:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																					"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																				}
																			},
																			"id": 600,
																			"indexExpression": {
																				"id": 599,
																				"name": "game_id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 580,
																				"src": "7684:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7675:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																				"typeString": "struct Arcade.GameInfo storage ref"
																			}
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "seats",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 95,
																		"src": "7675:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 603,
																	"indexExpression": {
																		"id": 602,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "7699:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7675:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7709:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7675:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 606,
															"nodeType": "ExpressionStatement",
															"src": "7675:35:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 608,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "7754:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 609,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "7762:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7771:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 607,
																	"name": "PlacePlayer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "7742:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,bool)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7742:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 612,
															"nodeType": "EmitStatement",
															"src": "7737:39:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7798:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 589,
															"id": 614,
															"nodeType": "Return",
															"src": "7791:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "7351:155:0",
										"text": " @dev Gives `player` access to register for `game_id`.\n Requirements:\n - the caller must have game master role."
									},
									"functionSelector": "b9888d89",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 585,
													"name": "GAME_MASTER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 69,
													"src": "7581:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 586,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 584,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "7572:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7572:21:0"
										}
									],
									"name": "placePlayer",
									"nameLocation": "7520:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "7540:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "7532:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "7557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "7549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7531:33:0"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "7603:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7603:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7602:6:0"
									},
									"scope": 921,
									"src": "7511:406:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "8267:601:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 638,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "8281:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 640,
															"indexExpression": {
																"id": 639,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "8290:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8281:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "exchange",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 71,
														"src": "8281:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8311:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8281:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "8277:585:0",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "8318:544:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 645,
																						"name": "gameData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 114,
																						"src": "8340:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																							"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																						}
																					},
																					"id": 647,
																					"indexExpression": {
																						"id": 646,
																						"name": "game_id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 630,
																						"src": "8349:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8340:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																						"typeString": "struct Arcade.GameInfo storage ref"
																					}
																				},
																				"id": 648,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "paid",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 91,
																				"src": "8340:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 650,
																			"indexExpression": {
																				"id": 649,
																				"name": "player",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 632,
																				"src": "8363:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8340:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8374:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8340:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726f706879204b696e67204172636164653a204e6f74207265676973746572656420666f7220746869732067616d652e",
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8377:51:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e8476f6de5c6ff2c50776cc215cd09f73b5d88379dbf65821b397a78399f15ea",
																			"typeString": "literal_string \"Trophy King Arcade: Not registered for this game.\""
																		},
																		"value": "Trophy King Arcade: Not registered for this game."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e8476f6de5c6ff2c50776cc215cd09f73b5d88379dbf65821b397a78399f15ea",
																			"typeString": "literal_string \"Trophy King Arcade: Not registered for this game.\""
																		}
																	],
																	"id": 644,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8332:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8332:97:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 655,
															"nodeType": "ExpressionStatement",
															"src": "8332:97:0"
														},
														{
															"assignments": [
																658
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 658,
																	"mutability": "mutable",
																	"name": "gi",
																	"nameLocation": "8461:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 715,
																	"src": "8444:19:0",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																		"typeString": "struct Arcade.GameInfo"
																	},
																	"typeName": {
																		"id": 657,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 656,
																			"name": "GameInfo",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 96,
																			"src": "8444:8:0"
																		},
																		"referencedDeclaration": 96,
																		"src": "8444:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																			"typeString": "struct Arcade.GameInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 662,
															"initialValue": {
																"baseExpression": {
																	"id": 659,
																	"name": "gameData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "8466:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																		"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																	}
																},
																"id": 661,
																"indexExpression": {
																	"id": 660,
																	"name": "game_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "8475:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8466:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																	"typeString": "struct Arcade.GameInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8444:39:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 671,
																				"name": "player",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 632,
																				"src": "8568:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 672,
																					"name": "gi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 658,
																					"src": "8576:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																						"typeString": "struct Arcade.GameInfo storage pointer"
																					}
																				},
																				"id": 673,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "registration_fee",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 77,
																				"src": "8576:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"baseExpression": {
																						"id": 664,
																						"name": "acceptedArcadeTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 109,
																						"src": "8506:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																							"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																						}
																					},
																					"id": 668,
																					"indexExpression": {
																						"components": [
																							{
																								"expression": {
																									"id": 665,
																									"name": "gi",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 658,
																									"src": "8528:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																										"typeString": "struct Arcade.GameInfo storage pointer"
																									}
																								},
																								"id": 666,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "arcade_token",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 81,
																								"src": "8528:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"id": 667,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "8527:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8506:39:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																						"typeString": "struct Arcade.ArcadeToken storage ref"
																					}
																				},
																				"id": 669,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "native_token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 99,
																				"src": "8506:52:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1978",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1945,
																			"src": "8506:61:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8506:90:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726f706879204b696e67204172636164653a20526566756e64206661696c65642e",
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8598:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e85a8c2eacb2c795304c1ccf2f876604537ff8637a554b73c978582d5d39df6c",
																			"typeString": "literal_string \"Trophy King Arcade: Refund failed.\""
																		},
																		"value": "Trophy King Arcade: Refund failed."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e85a8c2eacb2c795304c1ccf2f876604537ff8637a554b73c978582d5d39df6c",
																			"typeString": "literal_string \"Trophy King Arcade: Refund failed.\""
																		}
																	],
																	"id": 663,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8498:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8498:137:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 677,
															"nodeType": "ExpressionStatement",
															"src": "8498:137:0"
														},
														{
															"expression": {
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 678,
																		"name": "gi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "8650:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																			"typeString": "struct Arcade.GameInfo storage pointer"
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "total_fee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 83,
																	"src": "8650:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"components": [
																		{
																			"expression": {
																				"id": 681,
																				"name": "gi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 658,
																				"src": "8667:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																					"typeString": "struct Arcade.GameInfo storage pointer"
																				}
																			},
																			"id": 682,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "registration_fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 77,
																			"src": "8667:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 683,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8666:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8650:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 685,
															"nodeType": "ExpressionStatement",
															"src": "8650:37:0"
														},
														{
															"expression": {
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 686,
																			"name": "gi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "8702:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																				"typeString": "struct Arcade.GameInfo storage pointer"
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 87,
																		"src": "8702:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 690,
																	"indexExpression": {
																		"id": 688,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "8709:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8702:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8719:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8702:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 693,
															"nodeType": "ExpressionStatement",
															"src": "8702:18:0"
														},
														{
															"expression": {
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 694,
																			"name": "gi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "8734:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																				"typeString": "struct Arcade.GameInfo storage pointer"
																			}
																		},
																		"id": 697,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "paid",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 91,
																		"src": "8734:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 698,
																	"indexExpression": {
																		"id": 696,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "8742:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8734:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8752:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8734:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 701,
															"nodeType": "ExpressionStatement",
															"src": "8734:19:0"
														},
														{
															"expression": {
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 702,
																		"name": "gi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "8767:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																			"typeString": "struct Arcade.GameInfo storage pointer"
																		}
																	},
																	"id": 704,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "player_count",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 73,
																	"src": "8767:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8786:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8767:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 707,
															"nodeType": "ExpressionStatement",
															"src": "8767:20:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 709,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "8814:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 710,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "8823:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 711,
																			"name": "gi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "8831:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																				"typeString": "struct Arcade.GameInfo storage pointer"
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "registration_fee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 77,
																		"src": "8831:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 708,
																	"name": "Refund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "8807:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8807:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "EmitStatement",
															"src": "8802:49:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "7923:261:0",
										"text": " @dev Returns {#}.registration_fee for `player` at `game_id`.\n Requirements:\n - the caller must have game master role.\n - `player` must be registered.\n - contract balance should exceed {#}.registration_fee"
									},
									"functionSelector": "7ad226dc",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 635,
													"name": "GAME_MASTER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 69,
													"src": "8254:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 636,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 634,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "8245:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8245:21:0"
										}
									],
									"name": "refund",
									"nameLocation": "8198:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "8213:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "8205:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "8230:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "8222:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8204:33:0"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8267:0:0"
									},
									"scope": 921,
									"src": "8189:679:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "9119:88:0",
										"statements": [
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 729,
																	"name": "gameData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "9129:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																		"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																	}
																},
																"id": 731,
																"indexExpression": {
																	"id": 730,
																	"name": "game_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "9138:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9129:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																	"typeString": "struct Arcade.GameInfo storage ref"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "seats",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "9129:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 734,
														"indexExpression": {
															"id": 733,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "9153:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9129:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9163:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9129:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "9129:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 739,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "9193:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 738,
														"name": "RemovePlayer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "9180:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9180:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "EmitStatement",
												"src": "9175:25:0"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "8874:156:0",
										"text": " @dev Updates {gameData} sets {#}.seats[`player`] to 0.\n Requirements:\n - the caller must have game master role."
									},
									"functionSelector": "2ba67100",
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 726,
													"name": "GAME_MASTER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 69,
													"src": "9106:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 727,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 725,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "9097:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9097:21:0"
										}
									],
									"name": "removePlayer",
									"nameLocation": "9044:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "9065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "9057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "9082:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "9074:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9056:33:0"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9119:0:0"
									},
									"scope": 921,
									"src": "9035:172:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "9494:930:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 754,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "9508:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 756,
															"indexExpression": {
																"id": 755,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "9517:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9508:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "exchange",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 71,
														"src": "9508:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9538:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "9508:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 862,
												"nodeType": "IfStatement",
												"src": "9504:885:0",
												"trueBody": {
													"id": 861,
													"nodeType": "Block",
													"src": "9545:844:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 761,
																						"name": "gameData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 114,
																						"src": "9567:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																							"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																						}
																					},
																					"id": 763,
																					"indexExpression": {
																						"id": 762,
																						"name": "game_id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 746,
																						"src": "9576:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9567:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																						"typeString": "struct Arcade.GameInfo storage ref"
																					}
																				},
																				"id": 764,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "paid",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 91,
																				"src": "9567:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 766,
																			"indexExpression": {
																				"id": 765,
																				"name": "winner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "9590:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9567:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9601:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9567:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726f706879204b696e67204172636164653a204e6f74207265676973746572656420666f7220746869732067616d65",
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9604:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ae12d68cb90f20b0d133f70a3a8f97b96ec1725ea66930b92c795330ec4e1b2e",
																			"typeString": "literal_string \"Trophy King Arcade: Not registered for this game\""
																		},
																		"value": "Trophy King Arcade: Not registered for this game"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ae12d68cb90f20b0d133f70a3a8f97b96ec1725ea66930b92c795330ec4e1b2e",
																			"typeString": "literal_string \"Trophy King Arcade: Not registered for this game\""
																		}
																	],
																	"id": 760,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9559:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9559:96:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 771,
															"nodeType": "ExpressionStatement",
															"src": "9559:96:0"
														},
														{
															"assignments": [
																773
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 773,
																	"mutability": "mutable",
																	"name": "arcade_fee",
																	"nameLocation": "9678:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 861,
																	"src": "9670:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 772,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9670:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 795,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 789,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 774,
																							"name": "gameData",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 114,
																							"src": "9692:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																								"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																							}
																						},
																						"id": 776,
																						"indexExpression": {
																							"id": 775,
																							"name": "game_id",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 746,
																							"src": "9701:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9692:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																							"typeString": "struct Arcade.GameInfo storage ref"
																						}
																					},
																					"id": 777,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "total_fee",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 83,
																					"src": "9692:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 787,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 778,
																										"name": "acceptedArcadeTokens",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 109,
																										"src": "9723:20:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																											"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																										}
																									},
																									"id": 784,
																									"indexExpression": {
																										"components": [
																											{
																												"expression": {
																													"baseExpression": {
																														"id": 779,
																														"name": "gameData",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 114,
																														"src": "9745:8:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																															"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																														}
																													},
																													"id": 781,
																													"indexExpression": {
																														"id": 780,
																														"name": "game_id",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 746,
																														"src": "9754:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "9745:17:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																														"typeString": "struct Arcade.GameInfo storage ref"
																													}
																												},
																												"id": 782,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "arcade_token",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 81,
																												"src": "9745:30:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											}
																										],
																										"id": 783,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "9744:32:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "9723:54:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																										"typeString": "struct Arcade.ArcadeToken storage ref"
																									}
																								},
																								"id": 785,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "redemption_rate",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 103,
																								"src": "9723:70:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 786,
																								"name": "fee_percentage",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 119,
																								"src": "9796:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9723:87:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 788,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "9722:89:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9692:119:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 790,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9691:121:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 791,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 128,
																		"src": "9815:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9691:128:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 793,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "9822:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9691:135:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9670:156:0"
														},
														{
															"assignments": [
																797
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 797,
																	"mutability": "mutable",
																	"name": "payout",
																	"nameLocation": "9848:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 861,
																	"src": "9840:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 796,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9840:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 805,
															"initialValue": {
																"arguments": [
																	{
																		"id": 803,
																		"name": "arcade_fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "9889:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 798,
																				"name": "gameData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 114,
																				"src": "9857:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																					"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "game_id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 746,
																				"src": "9866:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9857:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																				"typeString": "struct Arcade.GameInfo storage ref"
																			}
																		},
																		"id": 801,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "total_fee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 83,
																		"src": "9857:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2455,
																	"src": "9857:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9857:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9840:60:0"
														},
														{
															"assignments": [
																807
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 807,
																	"mutability": "mutable",
																	"name": "contract_balance",
																	"nameLocation": "9922:16:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 861,
																	"src": "9914:24:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 806,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9914:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 822,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 819,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "10027:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Arcade_$921",
																					"typeString": "contract Arcade"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Arcade_$921",
																					"typeString": "contract Arcade"
																				}
																			],
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10019:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 817,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10019:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10019:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 808,
																				"name": "acceptedArcadeTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 109,
																				"src": "9941:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																					"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																				}
																			},
																			"id": 814,
																			"indexExpression": {
																				"components": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 809,
																								"name": "gameData",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 114,
																								"src": "9963:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																									"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																								}
																							},
																							"id": 811,
																							"indexExpression": {
																								"id": 810,
																								"name": "game_id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 746,
																								"src": "9972:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "9963:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																								"typeString": "struct Arcade.GameInfo storage ref"
																							}
																						},
																						"id": 812,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "arcade_token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 81,
																						"src": "9963:30:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"id": 813,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "9962:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9941:54:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																				"typeString": "struct Arcade.ArcadeToken storage ref"
																			}
																		},
																		"id": 815,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "native_token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 99,
																		"src": "9941:67:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1978",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1935,
																	"src": "9941:77:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9941:92:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9914:119:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 823,
																	"name": "contract_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "10052:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 824,
																	"name": "payout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "10071:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10052:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 831,
															"nodeType": "IfStatement",
															"src": "10048:89:0",
															"trueBody": {
																"id": 830,
																"nodeType": "Block",
																"src": "10079:58:0",
																"statements": [
																	{
																		"expression": {
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 826,
																				"name": "payout",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 797,
																				"src": "10097:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 827,
																				"name": "contract_balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "10106:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10097:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 829,
																		"nodeType": "ExpressionStatement",
																		"src": "10097:25:0"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 842,
																				"name": "winner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "10236:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 843,
																				"name": "payout",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 797,
																				"src": "10244:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"baseExpression": {
																						"id": 833,
																						"name": "acceptedArcadeTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 109,
																						"src": "10159:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ArcadeToken_$104_storage_$",
																							"typeString": "mapping(address => struct Arcade.ArcadeToken storage ref)"
																						}
																					},
																					"id": 839,
																					"indexExpression": {
																						"components": [
																							{
																								"expression": {
																									"baseExpression": {
																										"id": 834,
																										"name": "gameData",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 114,
																										"src": "10181:8:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																											"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																										}
																									},
																									"id": 836,
																									"indexExpression": {
																										"id": 835,
																										"name": "game_id",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 746,
																										"src": "10190:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "10181:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																										"typeString": "struct Arcade.GameInfo storage ref"
																									}
																								},
																								"id": 837,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "arcade_token",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 81,
																								"src": "10181:30:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"id": 838,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "10180:32:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10159:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ArcadeToken_$104_storage",
																						"typeString": "struct Arcade.ArcadeToken storage ref"
																					}
																				},
																				"id": 840,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "native_token",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 99,
																				"src": "10159:67:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1978",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1945,
																			"src": "10159:76:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10159:92:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726f706879204b696e67204172636164653a205061796f7574206661696c65642e",
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10253:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_93b188d26c0f37e2823e295e6c8f577c6581e30bb2fd55261ffb6fb624e99f18",
																			"typeString": "literal_string \"Trophy King Arcade: Payout failed.\""
																		},
																		"value": "Trophy King Arcade: Payout failed."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_93b188d26c0f37e2823e295e6c8f577c6581e30bb2fd55261ffb6fb624e99f18",
																			"typeString": "literal_string \"Trophy King Arcade: Payout failed.\""
																		}
																	],
																	"id": 832,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10151:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10151:139:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 847,
															"nodeType": "ExpressionStatement",
															"src": "10151:139:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 849,
																					"name": "gameData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 114,
																					"src": "10314:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
																						"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																					}
																				},
																				"id": 851,
																				"indexExpression": {
																					"id": 850,
																					"name": "game_id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "10323:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10314:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_GameInfo_$96_storage",
																					"typeString": "struct Arcade.GameInfo storage ref"
																				}
																			},
																			"id": 852,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 87,
																			"src": "10314:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 854,
																		"indexExpression": {
																			"id": 853,
																			"name": "winner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "10336:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10314:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 848,
																	"name": "Fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "10310:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10310:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 856,
															"nodeType": "EmitStatement",
															"src": "10305:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 858,
																		"name": "payout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "10371:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 857,
																	"name": "Payout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "10364:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10364:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 860,
															"nodeType": "EmitStatement",
															"src": "10359:19:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 864,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "10409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 863,
														"name": "closeGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "10399:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10399:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "10399:18:0"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "9213:195:0",
										"text": " @dev Updates {gameData} defines `winner` as address to receive {#}.total_fee less arcade_fee.\n Requirements:\n - the caller must have game master role."
									},
									"functionSelector": "9c623683",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 751,
													"name": "GAME_MASTER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 69,
													"src": "9481:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 752,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 750,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "9472:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9472:21:0"
										}
									],
									"name": "setWinner",
									"nameLocation": "9422:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "9440:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "9432:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "9457:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "9449:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9431:33:0"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9494:0:0"
									},
									"scope": 921,
									"src": "9413:1011:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "10574:250:0",
										"statements": [
											{
												"assignments": [
													880
												],
												"declarations": [
													{
														"constant": false,
														"id": 880,
														"mutability": "mutable",
														"name": "gi",
														"nameLocation": "10601:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 919,
														"src": "10584:19:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
															"typeString": "struct Arcade.GameInfo"
														},
														"typeName": {
															"id": 879,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 878,
																"name": "GameInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 96,
																"src": "10584:8:0"
															},
															"referencedDeclaration": 96,
															"src": "10584:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																"typeString": "struct Arcade.GameInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 884,
												"initialValue": {
													"baseExpression": {
														"id": 881,
														"name": "gameData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "10606:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$96_storage_$",
															"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
														}
													},
													"id": 883,
													"indexExpression": {
														"id": 882,
														"name": "game_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "10615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10606:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GameInfo_$96_storage",
														"typeString": "struct Arcade.GameInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10584:39:0"
											},
											{
												"expression": {
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 885,
															"name": "gi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "10634:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																"typeString": "struct Arcade.GameInfo storage pointer"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "player_count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 73,
														"src": "10634:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10653:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10634:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "10634:20:0"
											},
											{
												"expression": {
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 891,
																"name": "gi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "10664:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																	"typeString": "struct Arcade.GameInfo storage pointer"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 87,
															"src": "10664:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 895,
														"indexExpression": {
															"id": 893,
															"name": "player_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "10671:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10664:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 896,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "10689:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10664:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "10664:31:0"
											},
											{
												"expression": {
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 899,
																"name": "gi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "10705:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																	"typeString": "struct Arcade.GameInfo storage pointer"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "paid",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 91,
															"src": "10705:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 903,
														"indexExpression": {
															"id": 901,
															"name": "player_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "10713:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10705:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10731:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10705:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "10705:27:0"
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 907,
															"name": "gi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "10742:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$96_storage_ptr",
																"typeString": "struct Arcade.GameInfo storage pointer"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 83,
														"src": "10742:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 910,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "10758:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10742:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "10742:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 914,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10797:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10797:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "10809:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 913,
														"name": "Register",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "10788:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10788:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "EmitStatement",
												"src": "10783:34:0"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "10430:54:0",
										"text": " @dev Updates {gameData} [internal]."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_register",
									"nameLocation": "10498:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "10516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "10508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "player_address",
												"nameLocation": "10533:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "10525:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "10549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10507:57:0"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10574:0:0"
									},
									"scope": 921,
									"src": "10489:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 922,
							"src": "179:10647:0",
							"usedErrors": []
						}
					],
					"src": "37:10790:0"
				},
				"id": 0
			},
			"contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							1241
						],
						"Context": [
							2025
						],
						"ERC165": [
							2252
						],
						"IAccessControl": [
							1314
						],
						"IERC165": [
							2264
						],
						"Strings": [
							2228
						]
					},
					"id": 1242,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 923,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 924,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1242,
							"sourceUnit": 1315,
							"src": "133:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1242,
							"sourceUnit": 2026,
							"src": "164:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 926,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1242,
							"sourceUnit": 2229,
							"src": "195:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1242,
							"sourceUnit": 2253,
							"src": "226:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2025,
										"src": "1841:7:1"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:1"
								},
								{
									"baseName": {
										"id": 931,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1314,
										"src": "1850:14:1"
									},
									"id": 932,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:1"
								},
								{
									"baseName": {
										"id": 933,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2252,
										"src": "1866:6:1"
									},
									"id": 934,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 1241,
							"linearizedBaseContracts": [
								1241,
								2252,
								2264,
								1314,
								2025
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 941,
									"members": [
										{
											"constant": false,
											"id": 938,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 941,
											"src": "1905:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 937,
												"keyType": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 936,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 940,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 941,
											"src": "1947:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 939,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:1",
									"nodeType": "StructDefinition",
									"scope": 1241,
									"src": "1879:92:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 946,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1241,
									"src": "1977:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$941_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 945,
										"keyType": {
											"id": 942,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$941_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 944,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 943,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 941,
												"src": "1996:8:1"
											},
											"referencedDeclaration": 941,
											"src": "1996:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$941_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 949,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1241,
									"src": "2027:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 947,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 948,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "2495:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "2516:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 954,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1014,
															1057
														],
														"referencedDeclaration": 1014,
														"src": "2505:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:1"
											},
											{
												"id": 958,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:1"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 960,
									"name": "onlyRole",
									"nameLocation": "2472:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "2481:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 951,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:1"
									},
									"src": "2463:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2251
									],
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "2697:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 969,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "2714:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1314,
																		"src": "2734:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1314_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1314_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 970,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1314",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 977,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "2789:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 975,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$1241_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2251,
															"src": "2765:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 968,
												"id": 980,
												"nodeType": "Return",
												"src": "2707:94:1"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 965,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:1"
									},
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2633:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 962,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:1"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "2691:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:1"
									},
									"scope": 1241,
									"src": "2606:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1281
									],
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "2987:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 993,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "3004:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$941_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 995,
															"indexExpression": {
																"id": 994,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "3011:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$941_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 938,
														"src": "3004:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 998,
													"indexExpression": {
														"id": 997,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "3025:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 992,
												"id": 999,
												"nodeType": "Return",
												"src": "2997:36:1"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 989,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:1"
									},
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "2912:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 984,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "2926:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:1"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "2981:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 990,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:1"
									},
									"scope": 1241,
									"src": "2895:145:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "3390:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1008,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "3411:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1009,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2015,
																"src": "3417:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1007,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1014,
															1057
														],
														"referencedDeclaration": 1057,
														"src": "3400:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:1"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:1",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3354:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1003,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:1"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:1"
									},
									"scope": 1241,
									"src": "3334:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "3791:419:1",
										"statements": [
											{
												"condition": {
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 1023,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "3814:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1024,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "3820:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1022,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "3806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "IfStatement",
												"src": "3801:403:1",
												"trueBody": {
													"id": 1054,
													"nodeType": "Block",
													"src": "3830:374:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 1032,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1037,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1019,
																										"src": "4017:7:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1036,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4009:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 1035,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "4009:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1038,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4009:16:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 1039,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4027:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 1033,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2228,
																								"src": "3989:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2228_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 1034,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2227,
																							"src": "3989:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 1040,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:41:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 1041,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4056:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1046,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1017,
																										"src": "4129:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 1045,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4121:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 1044,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4121:7:1",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1047,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4121:13:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 1048,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4136:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 1042,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2228,
																								"src": "4101:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$2228_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 1043,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2227,
																							"src": "4101:19:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 1049,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4101:38:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 1030,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 1031,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 1050,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:265:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 1028,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:311:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1027,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:349:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1053,
															"nodeType": "ExpressionStatement",
															"src": "3844:349:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:1",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "3738:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1016,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "3752:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:1"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:1"
									},
									"scope": 1241,
									"src": "3718:492:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1289
									],
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "4474:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1066,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "4491:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$941_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 1068,
														"indexExpression": {
															"id": 1067,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "4498:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4491:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$941_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 940,
													"src": "4491:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1070,
												"nodeType": "Return",
												"src": "4484:29:1"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "4216:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4400:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1062,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4447:8:1"
									},
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "4413:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:14:1"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "4465:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1063,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:9:1"
									},
									"scope": 1241,
									"src": "4391:129:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1297
									],
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "4873:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1087,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4894:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1088,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "4900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1086,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "4883:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4883:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "4883:25:1"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "4526:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1082,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4866:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1081,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "4853:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4853:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1084,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1080,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "4844:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4844:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4779:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1079,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4835:8:1"
									},
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4797:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "4789:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1074,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4811:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "4803:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:31:1"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4873:0:1"
									},
									"scope": 1241,
									"src": "4770:145:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1305
									],
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "5253:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1107,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5275:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1108,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "5281:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1106,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "5263:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5263:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "5263:26:1"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "4921:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 1102,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "5246:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1101,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "5233:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5233:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1100,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 960,
												"src": "5224:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5224:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5158:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1099,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5215:8:1"
									},
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5177:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "5169:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1094,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5191:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "5183:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:31:1"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5253:0:1"
									},
									"scope": 1241,
									"src": "5149:147:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1313
									],
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "5864:137:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1122,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "5882:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1123,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2015,
																	"src": "5893:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5893:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5882:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5907:49:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 1121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5874:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5874:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "5874:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "5980:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1131,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "5986:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1129,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "5968:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5968:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "5968:26:1"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "5302:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5796:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1119,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5855:8:1"
									},
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5817:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "5809:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5809:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5831:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "5823:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5808:31:1"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5864:0:1"
									},
									"scope": 1241,
									"src": "5787:214:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "6708:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1144,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "6729:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1145,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "6735:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1143,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "6718:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6718:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "6718:25:1"
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "6007:628:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6668:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "6660:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6682:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "6674:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6674:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6659:31:1"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6708:0:1"
									},
									"scope": 1241,
									"src": "6640:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "6948:174:1",
										"statements": [
											{
												"assignments": [
													1158
												],
												"declarations": [
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6966:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "6958:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1157,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6958:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1162,
												"initialValue": {
													"arguments": [
														{
															"id": 1160,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "6999:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1159,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "6986:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6986:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6958:46:1"
											},
											{
												"expression": {
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1163,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "7014:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$941_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 1165,
															"indexExpression": {
																"id": 1164,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "7021:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7014:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$941_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 940,
														"src": "7014:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1167,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "7039:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7014:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "7014:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1171,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "7080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1172,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "7086:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1173,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "7105:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1170,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "7063:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7063:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "EmitStatement",
												"src": "7058:57:1"
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "6756:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6884:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6906:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "6898:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6920:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "6912:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6897:33:1"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6948:0:1"
									},
									"scope": 1241,
									"src": "6875:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "7312:165:1",
										"statements": [
											{
												"condition": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7326:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 1186,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "7335:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1187,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1182,
																"src": "7341:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1185,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "7327:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7327:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1207,
												"nodeType": "IfStatement",
												"src": "7322:149:1",
												"trueBody": {
													"id": 1206,
													"nodeType": "Block",
													"src": "7351:120:1",
													"statements": [
														{
															"expression": {
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1190,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 946,
																				"src": "7365:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$941_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 1192,
																			"indexExpression": {
																				"id": 1191,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "7372:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7365:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$941_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 938,
																		"src": "7365:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1195,
																	"indexExpression": {
																		"id": 1194,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "7386:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7365:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7397:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7365:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1198,
															"nodeType": "ExpressionStatement",
															"src": "7365:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1200,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "7432:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1201,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "7438:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1202,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "7447:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7447:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1199,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "7420:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7420:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1205,
															"nodeType": "EmitStatement",
															"src": "7415:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "7128:111:1",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction."
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7253:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7272:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "7264:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7264:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7286:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "7278:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7263:31:1"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7312:0:1"
									},
									"scope": 1241,
									"src": "7244:233:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "7671:165:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "7693:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "7699:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1217,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "7685:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7685:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1238,
												"nodeType": "IfStatement",
												"src": "7681:149:1",
												"trueBody": {
													"id": 1237,
													"nodeType": "Block",
													"src": "7709:121:1",
													"statements": [
														{
															"expression": {
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1221,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 946,
																				"src": "7723:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$941_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 1223,
																			"indexExpression": {
																				"id": 1222,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1212,
																				"src": "7730:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7723:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$941_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 938,
																		"src": "7723:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1226,
																	"indexExpression": {
																		"id": 1225,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "7744:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7723:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7755:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7723:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1229,
															"nodeType": "ExpressionStatement",
															"src": "7723:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1231,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1212,
																		"src": "7791:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1232,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "7797:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1233,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2015,
																			"src": "7806:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7806:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1230,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "7779:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7779:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1236,
															"nodeType": "EmitStatement",
															"src": "7774:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "7483:114:1",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction."
									},
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7611:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7631:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "7623:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7623:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "7637:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7622:31:1"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7671:0:1"
									},
									"scope": 1241,
									"src": "7602:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1242,
							"src": "1806:6032:1",
							"usedErrors": []
						}
					],
					"src": "108:7731:1"
				},
				"id": 1
			},
			"contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1314
						]
					},
					"id": 1315,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1243,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1244,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:2",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1314,
							"linearizedBaseContracts": [
								1314
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 1253,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "560:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "582:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1248,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "617:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1250,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:2"
									},
									"src": "537:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 1262,
									"name": "RoleGranted",
									"nameLocation": "876:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "888:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "910:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "935:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:2"
									},
									"src": "870:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 1271,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1263:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1285:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1310:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:2"
									},
									"src": "1245:89:2"
								},
								{
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1438:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1452:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:2"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "1492:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:2"
									},
									"scope": 1314,
									"src": "1421:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1715:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1283,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:2"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1752:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:2"
									},
									"scope": 1314,
									"src": "1693:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2030:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "2044:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:2"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:2"
									},
									"scope": 1314,
									"src": "2011:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "2324:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "2338:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:2"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:2"
									},
									"scope": 1314,
									"src": "2304:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 1313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2877:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1307,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "2891:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:2"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:2"
									},
									"scope": 1314,
									"src": "2855:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1315,
							"src": "209:2710:2",
							"usedErrors": []
						}
					],
					"src": "94:2826:2"
				},
				"id": 2
			},
			"contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							2025
						],
						"ERC20": [
							1900
						],
						"IERC20": [
							1978
						],
						"IERC20Metadata": [
							2003
						]
					},
					"id": 1901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1316,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1901,
							"sourceUnit": 1979,
							"src": "130:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 1318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1901,
							"sourceUnit": 2004,
							"src": "153:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 1319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1901,
							"sourceUnit": 2026,
							"src": "195:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1321,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2025,
										"src": "1421:7:3"
									},
									"id": 1322,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:3"
								},
								{
									"baseName": {
										"id": 1323,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1978,
										"src": "1430:6:3"
									},
									"id": 1324,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:3"
								},
								{
									"baseName": {
										"id": 1325,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2003,
										"src": "1438:14:3"
									},
									"id": 1326,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1320,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1900,
							"linearizedBaseContracts": [
								1900,
								2003,
								1978,
								2025
							],
							"name": "ERC20",
							"nameLocation": "1412:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1330,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1900,
									"src": "1459:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1329,
										"keyType": {
											"id": 1327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1336,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1900,
									"src": "1511:67:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1335,
										"keyType": {
											"id": 1331,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1334,
											"keyType": {
												"id": 1332,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1333,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1338,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1900,
									"src": "1585:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1340,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1900,
									"src": "1620:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1339,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1342,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1900,
									"src": "1646:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1341,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "2034:57:3",
										"statements": [
											{
												"expression": {
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1350,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "2044:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1351,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1345,
														"src": "2052:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:3"
											},
											{
												"expression": {
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1354,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "2067:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1355,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "2077:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:3"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1359,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "1990:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "2011:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:3"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:3"
									},
									"scope": 1900,
									"src": "1978:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1990
									],
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "2225:29:3",
										"statements": [
											{
												"expression": {
													"id": 1366,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1340,
													"src": "2242:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1365,
												"id": 1367,
												"nodeType": "Return",
												"src": "2235:12:3"
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1362,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:3"
									},
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:3"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "2210:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:3"
									},
									"scope": 1900,
									"src": "2156:98:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1996
									],
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "2438:31:3",
										"statements": [
											{
												"expression": {
													"id": 1376,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1342,
													"src": "2455:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1375,
												"id": 1377,
												"nodeType": "Return",
												"src": "2448:14:3"
											}
										]
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1372,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:3"
									},
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:3"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2423:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:3"
									},
									"scope": 1900,
									"src": "2367:102:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2002
									],
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "3158:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1385,
												"id": 1387,
												"nodeType": "Return",
												"src": "3168:9:3"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1382,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:3"
									},
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:3"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "3151:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1383,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:3"
									},
									"scope": 1900,
									"src": "3093:91:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1927
									],
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "3314:36:3",
										"statements": [
											{
												"expression": {
													"id": 1396,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1338,
													"src": "3331:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1395,
												"id": 1397,
												"nodeType": "Return",
												"src": "3324:19:3"
											}
										]
									},
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1392,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:3"
									},
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:3"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "3305:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:3"
									},
									"scope": 1900,
									"src": "3244:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1935
									],
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "3491:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1408,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "3508:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1410,
													"indexExpression": {
														"id": 1409,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "3518:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1407,
												"id": 1411,
												"nodeType": "Return",
												"src": "3501:25:3"
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1404,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:3"
									},
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "3427:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:3"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "3482:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:3"
									},
									"scope": 1900,
									"src": "3408:125:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1945
									],
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "3814:104:3",
										"statements": [
											{
												"assignments": [
													1425
												],
												"declarations": [
													{
														"constant": false,
														"id": 1425,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1437,
														"src": "3824:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1424,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1428,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1426,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "3840:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1430,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "3872:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1431,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "3879:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1432,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "3883:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1429,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "3862:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1423,
												"id": 1436,
												"nodeType": "Return",
												"src": "3900:11:3"
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1420,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:3"
									},
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "3747:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "3759:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:3"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "3808:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:3"
									},
									"scope": 1900,
									"src": "3729:189:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1955
									],
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "4074:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1449,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "4091:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1451,
														"indexExpression": {
															"id": 1450,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "4103:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1453,
													"indexExpression": {
														"id": 1452,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "4110:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1448,
												"id": 1454,
												"nodeType": "Return",
												"src": "4084:34:3"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1445,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:3"
									},
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "3995:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "4010:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:3"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "4065:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:3"
									},
									"scope": 1900,
									"src": "3976:149:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1965
									],
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "4522:108:3",
										"statements": [
											{
												"assignments": [
													1468
												],
												"declarations": [
													{
														"constant": false,
														"id": 1468,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1480,
														"src": "4532:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1467,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1471,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1469,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "4548:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1473,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4579:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "4586:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "4595:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1472,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "4570:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1466,
												"id": 1479,
												"nodeType": "Return",
												"src": "4612:11:3"
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1463,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:3"
									},
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "4450:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "4467:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:3"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "4516:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:3"
									},
									"scope": 1900,
									"src": "4433:197:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1977
									],
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "5325:153:3",
										"statements": [
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1513,
														"src": "5335:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1494,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1498,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1496,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "5353:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1500,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "5391:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1501,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "5397:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1502,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "5406:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1499,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "5375:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1506,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1484,
															"src": "5433:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1507,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "5439:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1508,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "5443:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1505,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "5423:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1493,
												"id": 1512,
												"nodeType": "Return",
												"src": "5460:11:3"
											}
										]
									},
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1490,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:3"
									},
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "5223:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "5245:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "5265:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:3"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "5319:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:3"
									},
									"scope": 1900,
									"src": "5192:286:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "5967:140:3",
										"statements": [
											{
												"assignments": [
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1542,
														"src": "5977:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1524,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1528,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1526,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "5993:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1530,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "6024:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "6031:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1533,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "6050:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1534,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "6057:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1532,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "6040:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1536,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "6068:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "6015:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1523,
												"id": 1541,
												"nodeType": "Return",
												"src": "6089:11:3"
											}
										]
									},
									"documentation": {
										"id": 1515,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:3",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "5900:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "5917:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:3"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "5961:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:3"
									},
									"scope": 1900,
									"src": "5873:234:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "6693:328:3",
										"statements": [
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "6703:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1553,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1555,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2015,
														"src": "6719:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:3"
											},
											{
												"assignments": [
													1559
												],
												"declarations": [
													{
														"constant": false,
														"id": 1559,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "6741:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1558,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1564,
												"initialValue": {
													"arguments": [
														{
															"id": 1561,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "6778:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1562,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "6785:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1560,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "6768:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1566,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "6811:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1567,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "6831:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 1565,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:3"
											},
											{
												"id": 1580,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1573,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "6931:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1574,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "6938:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1575,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "6947:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1576,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1548,
																		"src": "6966:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1572,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "6922:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1579,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:3"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1552,
												"id": 1582,
												"nodeType": "Return",
												"src": "7003:11:3"
											}
										]
									},
									"documentation": {
										"id": 1544,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:3",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "6621:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "6638:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:3"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "6687:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:3"
									},
									"scope": 1900,
									"src": "6594:427:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "7592:543:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1595,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "7610:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7626:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7618:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1596,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7618:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7618:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7610:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7630:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7602:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7602:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1603,
												"nodeType": "ExpressionStatement",
												"src": "7602:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1605,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1589,
																"src": "7688:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7702:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7694:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1606,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7694:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7694:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7688:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7706:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7680:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7680:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "7680:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1615,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "7776:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1616,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "7782:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1617,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "7786:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1614,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "7755:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7755:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "7755:38:3"
											},
											{
												"assignments": [
													1621
												],
												"declarations": [
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7812:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "7804:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7804:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"baseExpression": {
														"id": 1622,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "7826:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1624,
													"indexExpression": {
														"id": 1623,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "7836:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7826:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7804:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1627,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "7859:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1628,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "7874:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7859:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7882:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7851:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7851:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "7851:72:3"
											},
											{
												"id": 1641,
												"nodeType": "UncheckedBlock",
												"src": "7933:73:3",
												"statements": [
													{
														"expression": {
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1633,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "7957:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1635,
																"indexExpression": {
																	"id": 1634,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1587,
																	"src": "7967:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7957:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1636,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "7975:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1637,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1591,
																	"src": "7989:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7975:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7957:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1640,
														"nodeType": "ExpressionStatement",
														"src": "7957:38:3"
													}
												]
											},
											{
												"expression": {
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1642,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "8015:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1644,
														"indexExpression": {
															"id": 1643,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "8025:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8015:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1645,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "8032:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8015:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "8015:23:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1649,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "8063:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1650,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "8069:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1651,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "8073:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1648,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1912,
														"src": "8054:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8054:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1653,
												"nodeType": "EmitStatement",
												"src": "8049:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1655,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "8111:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1656,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "8117:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "8121:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1654,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "8091:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8091:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "8091:37:3"
											}
										]
									},
									"documentation": {
										"id": 1585,
										"nodeType": "StructuredDocumentation",
										"src": "7027:452:3",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7493:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7520:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "7512:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7512:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7542:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "7534:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7534:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7562:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "7554:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7554:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7502:72:3"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7592:0:3"
									},
									"scope": 1900,
									"src": "7484:651:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "8476:324:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1670,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "8494:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8513:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8505:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1671,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8505:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8505:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8494:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8517:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8486:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8486:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "8486:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8591:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8583:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1680,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8583:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8583:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1684,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "8595:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "8604:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1679,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "8562:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8562:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "8562:49:3"
											},
											{
												"expression": {
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1688,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "8622:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1689,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "8638:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8622:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "8622:22:3"
											},
											{
												"expression": {
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1692,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "8654:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1694,
														"indexExpression": {
															"id": 1693,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "8664:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8654:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1695,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "8676:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8654:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "8654:28:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8714:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8706:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1699,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8706:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8706:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1703,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "8718:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1704,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "8727:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1698,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1912,
														"src": "8697:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8697:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "EmitStatement",
												"src": "8692:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8773:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8765:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1708,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8765:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8765:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1712,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "8777:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1713,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "8786:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1707,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "8745:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8745:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "8745:48:3"
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "8141:265:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8420:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8434:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "8426:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8451:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "8443:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8443:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8425:33:3"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8476:0:3"
									},
									"scope": 1900,
									"src": "8411:389:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "9185:511:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1726,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1720,
																"src": "9203:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9222:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9214:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1727,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9214:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9214:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9203:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9226:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9195:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9195:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1734,
												"nodeType": "ExpressionStatement",
												"src": "9195:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1736,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "9294:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9311:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9303:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1737,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9303:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9303:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1741,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "9315:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1735,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "9273:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9273:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "9273:49:3"
											},
											{
												"assignments": [
													1745
												],
												"declarations": [
													{
														"constant": false,
														"id": 1745,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9341:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 1788,
														"src": "9333:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1744,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9333:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1749,
												"initialValue": {
													"baseExpression": {
														"id": 1746,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "9358:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1748,
													"indexExpression": {
														"id": 1747,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "9368:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9358:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9333:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1751,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "9394:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1752,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "9412:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9394:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9420:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9386:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9386:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1756,
												"nodeType": "ExpressionStatement",
												"src": "9386:71:3"
											},
											{
												"id": 1765,
												"nodeType": "UncheckedBlock",
												"src": "9467:79:3",
												"statements": [
													{
														"expression": {
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1757,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "9491:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1759,
																"indexExpression": {
																	"id": 1758,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "9501:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9491:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1760,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "9512:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1761,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1722,
																	"src": "9529:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9512:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9491:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1764,
														"nodeType": "ExpressionStatement",
														"src": "9491:44:3"
													}
												]
											},
											{
												"expression": {
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1766,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "9555:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1767,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "9571:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9555:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1769,
												"nodeType": "ExpressionStatement",
												"src": "9555:22:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1771,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "9602:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9619:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9611:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9611:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9611:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1776,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "9623:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1770,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1912,
														"src": "9593:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9593:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1778,
												"nodeType": "EmitStatement",
												"src": "9588:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1780,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "9661:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9678:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9670:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1781,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9670:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9670:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1785,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "9682:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1779,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "9641:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1787,
												"nodeType": "ExpressionStatement",
												"src": "9641:48:3"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "8806:309:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9129:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9143:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "9135:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9135:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9160:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "9152:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9152:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9134:33:3"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9185:0:3"
									},
									"scope": 1900,
									"src": "9120:576:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "10232:257:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1800,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1792,
																"src": "10250:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10267:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10259:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1801,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10259:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10259:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10250:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10271:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10242:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10242:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "10242:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1810,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "10328:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10347:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10339:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1811,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10339:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10339:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10328:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10351:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1809,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10320:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10320:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1818,
												"nodeType": "ExpressionStatement",
												"src": "10320:68:3"
											},
											{
												"expression": {
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1819,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "10399:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1822,
															"indexExpression": {
																"id": 1820,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1792,
																"src": "10411:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10399:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1823,
														"indexExpression": {
															"id": 1821,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "10418:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10399:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1824,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "10429:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10399:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1826,
												"nodeType": "ExpressionStatement",
												"src": "10399:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "10459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "10466:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1830,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "10475:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1827,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "10450:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10450:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1832,
												"nodeType": "EmitStatement",
												"src": "10445:37:3"
											}
										]
									},
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "9702:412:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10128:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10154:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "10146:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10146:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10177:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "10169:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10202:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "10194:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10194:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10136:78:3"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10232:0:3"
									},
									"scope": 1900,
									"src": "10119:370:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "10890:321:3",
										"statements": [
											{
												"assignments": [
													1845
												],
												"declarations": [
													{
														"constant": false,
														"id": 1845,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10908:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1876,
														"src": "10900:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10900:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1850,
												"initialValue": {
													"arguments": [
														{
															"id": 1847,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "10937:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1848,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "10944:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1846,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "10927:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10927:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10900:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1851,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "10966:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10991:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1853,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10991:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1852,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10986:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10986:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10986:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10966:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1875,
												"nodeType": "IfStatement",
												"src": "10962:243:3",
												"trueBody": {
													"id": 1874,
													"nodeType": "Block",
													"src": "11005:200:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1859,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1845,
																			"src": "11027:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1860,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "11047:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11027:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11055:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1858,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11019:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11019:68:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1864,
															"nodeType": "ExpressionStatement",
															"src": "11019:68:3"
														},
														{
															"id": 1873,
															"nodeType": "UncheckedBlock",
															"src": "11101:94:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1866,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1837,
																				"src": "11138:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1867,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1839,
																				"src": "11145:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1868,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1845,
																					"src": "11154:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1869,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1841,
																					"src": "11173:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11154:25:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1865,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1834,
																			"src": "11129:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11129:51:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1872,
																	"nodeType": "ExpressionStatement",
																	"src": "11129:51:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "10495:270:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10779:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10812:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "10804:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10804:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10835:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "10827:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10860:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "10852:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10852:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10794:78:3"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10890:0:3"
									},
									"scope": 1900,
									"src": "10770:441:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "11914:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "11217:573:3",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11804:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11842:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "11834:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11834:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11864:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "11856:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11856:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11884:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "11876:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11824:72:3"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11914:0:3"
									},
									"scope": 1900,
									"src": "11795:121:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "12622:2:3",
										"statements": []
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "11922:577:3",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12513:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12550:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "12542:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12572:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "12564:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12564:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12592:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "12584:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12584:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12532:72:3"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12622:0:3"
									},
									"scope": 1900,
									"src": "12504:120:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1901,
							"src": "1403:11223:3",
							"usedErrors": []
						}
					],
					"src": "105:12522:3"
				},
				"id": 3
			},
			"contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1978
						]
					},
					"id": 1979,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1902,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1903,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1978,
							"linearizedBaseContracts": [
								1978
							],
							"name": "IERC20",
							"nameLocation": "212:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1912,
									"name": "Transfer",
									"nameLocation": "394:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "403:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "425:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "445:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:4"
									},
									"src": "388:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1921,
									"name": "Approval",
									"nameLocation": "625:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "634:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "657:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "682:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:4"
									},
									"src": "619:78:4"
								},
								{
									"documentation": {
										"id": 1922,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 1978,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 1978,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1211:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1223:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:4"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "1257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1942,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:4"
									},
									"scope": 1978,
									"src": "1193:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "1557:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "1572:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:4"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "1612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:4"
									},
									"scope": 1978,
									"src": "1538:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "2291:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "2308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:4"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "2342:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1962,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:4"
									},
									"scope": 1978,
									"src": "2274:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1977,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2677:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2699:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:4"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "2758:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1974,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:4"
									},
									"scope": 1978,
									"src": "2646:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1979,
							"src": "202:2564:4",
							"usedErrors": []
						}
					],
					"src": "106:2661:4"
				},
				"id": 4
			},
			"contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1978
						],
						"IERC20Metadata": [
							2003
						]
					},
					"id": 2004,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1980,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:5"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1981,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2004,
							"sourceUnit": 1979,
							"src": "135:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1983,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1978,
										"src": "305:6:5"
									},
									"id": 1984,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1982,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 2003,
							"linearizedBaseContracts": [
								2003,
								1978
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1987,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 2003,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1996,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1993,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 2003,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2002,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1999,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 2003,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2004,
							"src": "277:405:5",
							"usedErrors": []
						}
					],
					"src": "110:573:5"
				},
				"id": 5
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2025
						]
					},
					"id": 2026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2005,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2006,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2025,
							"linearizedBaseContracts": [
								2025
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2011,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2010,
												"id": 2013,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 2025,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2023,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2020,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2019,
												"id": 2022,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 2024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2017,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 2025,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2026,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2228
						]
					},
					"id": 2229,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2027,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2028,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2228,
							"linearizedBaseContracts": [
								2228
							],
							"name": "Strings",
							"nameLocation": "154:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2031,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2228,
									"src": "168:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2029,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2030,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "399:632:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2039,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "601:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2045,
												"nodeType": "IfStatement",
												"src": "597:51:7",
												"trueBody": {
													"id": 2044,
													"nodeType": "Block",
													"src": "613:35:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 2038,
															"id": 2043,
															"nodeType": "Return",
															"src": "627:10:7"
														}
													]
												}
											},
											{
												"assignments": [
													2047
												],
												"declarations": [
													{
														"constant": false,
														"id": 2047,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2109,
														"src": "657:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2046,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2049,
												"initialValue": {
													"id": 2048,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2034,
													"src": "672:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:7"
											},
											{
												"assignments": [
													2051
												],
												"declarations": [
													{
														"constant": false,
														"id": 2051,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2109,
														"src": "687:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2052,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:7"
											},
											{
												"body": {
													"id": 2063,
													"nodeType": "Block",
													"src": "729:57:7",
													"statements": [
														{
															"expression": {
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:7",
																"subExpression": {
																	"id": 2056,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2051,
																	"src": "743:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2058,
															"nodeType": "ExpressionStatement",
															"src": "743:8:7"
														},
														{
															"expression": {
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2059,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "765:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2062,
															"nodeType": "ExpressionStatement",
															"src": "765:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2053,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "718:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2064,
												"nodeType": "WhileStatement",
												"src": "711:75:7"
											},
											{
												"assignments": [
													2066
												],
												"declarations": [
													{
														"constant": false,
														"id": 2066,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2109,
														"src": "795:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2065,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2071,
												"initialValue": {
													"arguments": [
														{
															"id": 2069,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "827:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2067,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:7"
											},
											{
												"body": {
													"id": 2102,
													"nodeType": "Block",
													"src": "863:131:7",
													"statements": [
														{
															"expression": {
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2075,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2051,
																	"src": "877:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2078,
															"nodeType": "ExpressionStatement",
															"src": "877:11:7"
														},
														{
															"expression": {
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2079,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2066,
																		"src": "902:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2081,
																	"indexExpression": {
																		"id": 2080,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2051,
																		"src": "909:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2093,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 2086,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2091,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2089,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2034,
																									"src": "945:5:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 2090,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2088,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 2087,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2092,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 2084,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 2082,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2097,
															"nodeType": "ExpressionStatement",
															"src": "902:56:7"
														},
														{
															"expression": {
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2098,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "972:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2101,
															"nodeType": "ExpressionStatement",
															"src": "972:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2072,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "851:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2103,
												"nodeType": "WhileStatement",
												"src": "844:150:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2106,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "1017:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2104,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2038,
												"id": 2108,
												"nodeType": "Return",
												"src": "1003:21:7"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "346:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:7"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "384:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2036,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:7"
									},
									"scope": 2228,
									"src": "328:703:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "1210:255:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2118,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2113,
														"src": "1224:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2124,
												"nodeType": "IfStatement",
												"src": "1220:54:7",
												"trueBody": {
													"id": 2123,
													"nodeType": "Block",
													"src": "1236:38:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 2117,
															"id": 2122,
															"nodeType": "Return",
															"src": "1250:13:7"
														}
													]
												}
											},
											{
												"assignments": [
													2126
												],
												"declarations": [
													{
														"constant": false,
														"id": 2126,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2150,
														"src": "1283:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2128,
												"initialValue": {
													"id": 2127,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2113,
													"src": "1298:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:7"
											},
											{
												"assignments": [
													2130
												],
												"declarations": [
													{
														"constant": false,
														"id": 2130,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2150,
														"src": "1313:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2129,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2132,
												"initialValue": {
													"hexValue": "30",
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:7"
											},
											{
												"body": {
													"id": 2143,
													"nodeType": "Block",
													"src": "1359:57:7",
													"statements": [
														{
															"expression": {
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:7",
																"subExpression": {
																	"id": 2136,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2130,
																	"src": "1373:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2138,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:7"
														},
														{
															"expression": {
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2139,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "1395:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2142,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2133,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "1348:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2144,
												"nodeType": "WhileStatement",
												"src": "1341:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2146,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "1444:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2147,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "1451:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2145,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2151,
															2227
														],
														"referencedDeclaration": 2227,
														"src": "1432:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2117,
												"id": 2149,
												"nodeType": "Return",
												"src": "1425:33:7"
											}
										]
									},
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "1157:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:7"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "1195:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:7"
									},
									"scope": 2228,
									"src": "1136:329:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2226,
										"nodeType": "Block",
										"src": "1678:351:7",
										"statements": [
											{
												"assignments": [
													2162
												],
												"declarations": [
													{
														"constant": false,
														"id": 2162,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2226,
														"src": "1688:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2161,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2171,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2166,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2156,
																	"src": "1724:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2163,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:7"
											},
											{
												"expression": {
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2172,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "1745:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2174,
														"indexExpression": {
															"hexValue": "30",
															"id": 2173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2177,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:7"
											},
											{
												"expression": {
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2178,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "1770:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2180,
														"indexExpression": {
															"hexValue": "31",
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:7"
											},
											{
												"body": {
													"id": 2212,
													"nodeType": "Block",
													"src": "1840:87:7",
													"statements": [
														{
															"expression": {
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2198,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2162,
																		"src": "1854:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2200,
																	"indexExpression": {
																		"id": 2199,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "1861:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2201,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2031,
																		"src": "1866:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2205,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2202,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2154,
																			"src": "1879:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2207,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:7"
														},
														{
															"expression": {
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2208,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "1905:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2211,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2192,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2185,
														"src": "1828:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2213,
												"initializationExpression": {
													"assignments": [
														2185
													],
													"declarations": [
														{
															"constant": false,
															"id": 2185,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 2213,
															"src": "1800:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2184,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2191,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2187,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2156,
																"src": "1816:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:7"
												},
												"loopExpression": {
													"expression": {
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:7",
														"subExpression": {
															"id": 2195,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "1837:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2197,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2215,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2154,
																"src": "1944:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2220,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2223,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "2015:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2221,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2160,
												"id": 2225,
												"nodeType": "Return",
												"src": "2001:21:7"
											}
										]
									},
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "1609:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "1624:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:7"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "1663:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:7"
									},
									"scope": 2228,
									"src": "1588:441:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2229,
							"src": "146:1885:7",
							"usedErrors": []
						}
					],
					"src": "86:1946:7"
				},
				"id": 7
			},
			"contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2252
						],
						"IERC165": [
							2264
						]
					},
					"id": 2253,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2230,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:8"
						},
						{
							"absolutePath": "contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2231,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2253,
							"sourceUnit": 2265,
							"src": "124:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2233,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2264,
										"src": "754:7:8"
									},
									"id": 2234,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2232,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2252,
							"linearizedBaseContracts": [
								2252,
								2264
							],
							"name": "ERC165",
							"nameLocation": "744:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2263
									],
									"body": {
										"id": 2250,
										"nodeType": "Block",
										"src": "920:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2243,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2237,
														"src": "937:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2245,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2264,
																	"src": "957:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2264_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2264_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2244,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2264",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2242,
												"id": 2249,
												"nodeType": "Return",
												"src": "930:47:8"
											}
										]
									},
									"documentation": {
										"id": 2235,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2239,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:8"
									},
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "856:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2236,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:8"
									},
									"returnParameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2251,
												"src": "914:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:8"
									},
									"scope": 2252,
									"src": "829:155:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2253,
							"src": "726:260:8",
							"usedErrors": []
						}
					],
					"src": "99:888:8"
				},
				"id": 8
			},
			"contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2264
						]
					},
					"id": 2265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2254,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2255,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2264,
							"linearizedBaseContracts": [
								2264
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2256,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2257,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 2264,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2265,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2576
						]
					},
					"id": 2577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2267,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:10",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2576,
							"linearizedBaseContracts": [
								2576
							],
							"name": "SafeMath",
							"nameLocation": "490:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2298,
										"nodeType": "Block",
										"src": "717:140:10",
										"statements": [
											{
												"id": 2297,
												"nodeType": "UncheckedBlock",
												"src": "727:124:10",
												"statements": [
													{
														"assignments": [
															2280
														],
														"declarations": [
															{
																"constant": false,
																"id": 2280,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 2297,
																"src": "751:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2284,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2281,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "763:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2282,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "767:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2285,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2280,
																"src": "786:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2286,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "790:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2292,
														"nodeType": "IfStatement",
														"src": "782:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2290,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2278,
															"id": 2291,
															"nodeType": "Return",
															"src": "793:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2294,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2280,
																	"src": "838:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2295,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2278,
														"id": 2296,
														"nodeType": "Return",
														"src": "824:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2268,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "657:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "668:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:10"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "702:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "708:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:10"
									},
									"scope": 2576,
									"src": "641:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2326,
										"nodeType": "Block",
										"src": "1078:113:10",
										"statements": [
											{
												"id": 2325,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2311,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2304,
																"src": "1116:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2312,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2302,
																"src": "1120:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2318,
														"nodeType": "IfStatement",
														"src": "1112:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2316,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2310,
															"id": 2317,
															"nodeType": "Return",
															"src": "1123:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2320,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2302,
																		"src": "1168:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2321,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2304,
																		"src": "1172:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2323,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2310,
														"id": 2324,
														"nodeType": "Return",
														"src": "1154:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2300,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "1018:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "1029:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:10"
									},
									"returnParameters": {
										"id": 2310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "1063:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2327,
												"src": "1069:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:10"
									},
									"scope": 2576,
									"src": "1002:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "1415:417:10",
										"statements": [
											{
												"id": 2367,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2339,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2330,
																"src": "1683:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2346,
														"nodeType": "IfStatement",
														"src": "1679:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2344,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2338,
															"id": 2345,
															"nodeType": "Return",
															"src": "1691:16:10"
														}
													},
													{
														"assignments": [
															2348
														],
														"declarations": [
															{
																"constant": false,
																"id": 2348,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 2367,
																"src": "1721:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2347,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2352,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2349,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2330,
																"src": "1733:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2350,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "1737:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2353,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "1756:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2354,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2330,
																	"src": "1760:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2356,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "1765:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2362,
														"nodeType": "IfStatement",
														"src": "1752:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2360,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2338,
															"id": 2361,
															"nodeType": "Return",
															"src": "1768:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2364,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "1813:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2365,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2338,
														"id": 2366,
														"nodeType": "Return",
														"src": "1799:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2328,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "1355:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "1366:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:10"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "1400:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "1406:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:10"
									},
									"scope": 2576,
									"src": "1339:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "2057:114:10",
										"statements": [
											{
												"id": 2395,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2381,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2374,
																"src": "2095:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2388,
														"nodeType": "IfStatement",
														"src": "2091:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2386,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2380,
															"id": 2387,
															"nodeType": "Return",
															"src": "2103:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2390,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2372,
																		"src": "2148:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2391,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2374,
																		"src": "2152:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2393,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2380,
														"id": 2394,
														"nodeType": "Return",
														"src": "2134:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2370,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "1997:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "2008:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:10"
									},
									"returnParameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "2042:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "2048:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:10"
									},
									"scope": 2576,
									"src": "1981:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2424,
										"nodeType": "Block",
										"src": "2406:114:10",
										"statements": [
											{
												"id": 2423,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2409,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "2444:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2416,
														"nodeType": "IfStatement",
														"src": "2440:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2414,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2408,
															"id": 2415,
															"nodeType": "Return",
															"src": "2452:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2418,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2400,
																		"src": "2497:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2419,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2402,
																		"src": "2501:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2421,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2408,
														"id": 2422,
														"nodeType": "Return",
														"src": "2483:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2398,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "2346:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "2357:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:10"
									},
									"returnParameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "2391:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "2397:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:10"
									},
									"scope": 2576,
									"src": "2330:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "2822:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2435,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2428,
														"src": "2839:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2436,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2430,
														"src": "2843:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2434,
												"id": 2438,
												"nodeType": "Return",
												"src": "2832:12:10"
											}
										]
									},
									"documentation": {
										"id": 2426,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:10",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "2768:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "2779:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:10"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "2813:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:10"
									},
									"scope": 2576,
									"src": "2755:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2454,
										"nodeType": "Block",
										"src": "3189:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2450,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2443,
														"src": "3206:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2451,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "3210:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2449,
												"id": 2453,
												"nodeType": "Return",
												"src": "3199:12:10"
											}
										]
									},
									"documentation": {
										"id": 2441,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "3135:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "3146:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:10"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "3180:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:10"
									},
									"scope": 2576,
									"src": "3122:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2469,
										"nodeType": "Block",
										"src": "3532:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2465,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2458,
														"src": "3549:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2466,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2460,
														"src": "3553:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2464,
												"id": 2468,
												"nodeType": "Return",
												"src": "3542:12:10"
											}
										]
									},
									"documentation": {
										"id": 2456,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:10",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "3478:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "3489:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:10"
									},
									"returnParameters": {
										"id": 2464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2470,
												"src": "3523:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:10"
									},
									"scope": 2576,
									"src": "3465:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "3917:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2480,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2473,
														"src": "3934:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2481,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2475,
														"src": "3938:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2479,
												"id": 2483,
												"nodeType": "Return",
												"src": "3927:12:10"
											}
										]
									},
									"documentation": {
										"id": 2471,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "3863:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "3874:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:10"
									},
									"returnParameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "3908:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:10"
									},
									"scope": 2576,
									"src": "3850:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2499,
										"nodeType": "Block",
										"src": "4466:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2495,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2488,
														"src": "4483:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2496,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2490,
														"src": "4487:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2494,
												"id": 2498,
												"nodeType": "Return",
												"src": "4476:12:10"
											}
										]
									},
									"documentation": {
										"id": 2486,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4412:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4423:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:10"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4457:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:10"
									},
									"scope": 2576,
									"src": "4399:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2524,
										"nodeType": "Block",
										"src": "5084:106:10",
										"statements": [
											{
												"id": 2523,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2513,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2505,
																		"src": "5126:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2514,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2503,
																		"src": "5131:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2516,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2507,
																	"src": "5134:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2512,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2518,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2519,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2503,
																"src": "5168:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2520,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2505,
																"src": "5172:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2511,
														"id": 2522,
														"nodeType": "Return",
														"src": "5161:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2501,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "4981:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "5000:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "5019:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2506,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:10"
									},
									"returnParameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "5075:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:10"
									},
									"scope": 2576,
									"src": "4959:231:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2549,
										"nodeType": "Block",
										"src": "5799:105:10",
										"statements": [
											{
												"id": 2548,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2538,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2530,
																		"src": "5841:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2541,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "5848:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2537,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2543,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2544,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2528,
																"src": "5882:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2545,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2530,
																"src": "5886:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2536,
														"id": 2547,
														"nodeType": "Return",
														"src": "5875:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2526,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "5696:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "5715:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "5734:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2531,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:10"
									},
									"returnParameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "5790:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:10"
									},
									"scope": 2576,
									"src": "5674:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2574,
										"nodeType": "Block",
										"src": "6675:105:10",
										"statements": [
											{
												"id": 2573,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2563,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2555,
																		"src": "6717:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2566,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "6724:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2562,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2568,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2569,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2553,
																"src": "6758:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2570,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2555,
																"src": "6762:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2561,
														"id": 2572,
														"nodeType": "Return",
														"src": "6751:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2551,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "6572:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "6591:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "6610:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2556,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:10"
									},
									"returnParameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "6666:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:10"
									},
									"scope": 2576,
									"src": "6550:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2577,
							"src": "482:6300:10",
							"usedErrors": []
						}
					],
					"src": "107:6676:10"
				},
				"id": 10
			}
		}
	}
}