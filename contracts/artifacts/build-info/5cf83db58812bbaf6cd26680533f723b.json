{
	"id": "5cf83db58812bbaf6cd26680533f723b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Arcade.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 < 0.9.0;\n\nimport \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\";\nimport \"@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol\";\n\ncontract Arcade is Ownable {\n    using SafeMath for uint256;\n    \n    event CloseGame(uint256 id);\n    event CreateGame(uint256 id);\n    event DeleteGame(uint256 id);\n    event Fee(uint256 fee);\n    event OpenGame(uint256 id);\n    event Payout(uint256 payout);\n    event PlacePlayer(address player, uint256 id);\n    event Refund(uint256 id, address player, uint256 amount);\n    event Register(address indexed _player, uint256 id);\n    event RemovePlayer(address player);\n\n    struct GameInfo {\n        bool    exchange;\n        mapping(address => uint256) fee;\n        mapping(address => uint256) paid;\n        uint256 player_count;\n        uint256 player_limit;\n        uint256 registration_fee;\n        mapping(address => uint256) seats;\n        uint256 status;\n        uint256 total_fee;\n    }\n\n    mapping(uint256 => GameInfo) public gameData;\n\n    uint256 public decimals = 1e18;\n    uint256 public fee_percentage;\n    address public market_maker;\n\n    constructor() {\n        fee_percentage = 10e16;\n        market_maker = _msgSender();\n    }\n\n    function closeGame(uint256 game_id) public onlyOwner {\n        gameData[game_id].status = 0;\n\n        emit CloseGame(game_id);\n    }\n\n    function createGame(uint256 game_id, uint256 registration_fee, uint256 player_limit, bool exchange) public onlyOwner {\n        gameData[game_id].status = 1;\n        gameData[game_id].total_fee = 0;\n        gameData[game_id].registration_fee = registration_fee;\n        gameData[game_id].player_count = 0;\n        gameData[game_id].player_limit = player_limit;\n        gameData[game_id].exchange = exchange;\n\n        emit CreateGame(game_id);\n    }\n\n    function deleteGame(uint256 game_id) public onlyOwner {\n        delete gameData[game_id];\n\n        emit DeleteGame(game_id);\n    }\n\n    function openGame(uint256 game_id) public onlyOwner {\n        gameData[game_id].status = 1;\n\n        emit OpenGame(game_id);\n    }\n\n    function placePlayer(uint256 game_id, address player) public onlyOwner {\n        require(gameData[game_id].seats[player] != 1, \"Already seated.\");\n\n        gameData[game_id].seats[player] = 1;\n\n        emit PlacePlayer(player, game_id);\n    }\n\n    function reconcile() public onlyOwner {\n        uint256 balance = address(this).balance;\n\n        if (balance > 0) {\n            (bool success, ) = owner().call{ value: balance }(\"\");\n            require(success, \"Trophy King Arcade: Unable to transfer.\");\n        }\n    }\n\n    function refund(uint256 game_id, address player) public onlyOwner {\n        if (gameData[game_id].exchange == false) {\n            require(gameData[game_id].paid[player] == 1, \"Not registered for this game.\");\n\n            GameInfo storage gi = gameData[game_id];\n\n            (bool success, ) = player.call{ value: gi.registration_fee }(\"\");\n            require(success, \"Trophy King Arcade: Unable to transfer.\");\n\n            emit Refund(game_id, player, gi.registration_fee);\n\n            gi.total_fee -= (gi.registration_fee);\n\n            gi.fee[player] = 0;\n            gi.paid[player] = 0;\n            gi.player_count -= 1;\n        }\n    }\n\n    function _register(uint256 game_id, address player_address, uint256 amount) internal {\n        GameInfo storage gi = gameData[game_id];\n\n        gi.player_count += 1;\n        gi.fee[player_address] = amount;\n        gi.paid[player_address] = 1;\n        gi.total_fee += amount;\n\n        (bool success, ) = market_maker.call{ value: amount }(\"\");\n        require(success, \"Trophy King Arcade: Unable to transfer.\");\n        \n        emit Register(msg.sender, game_id);\n    }\n\n    function register(uint256 game_id) public payable {\n        require(gameData[game_id].seats[msg.sender] == 1, \"Unauthorized.\");\n        require(gameData[game_id].status == 1, \"Game closed.\");\n        require(gameData[game_id].player_limit > gameData[game_id].player_count, \"Game full.  Try again.\");\n        require(msg.value == (gameData[game_id].registration_fee), \"Must match registration fee.\");\n        require(gameData[game_id].paid[msg.sender] == 0, \"Already registered.\");\n        require(gameData[game_id].player_limit > 0, \"Game not found.\");\n\n        _register(game_id, msg.sender, msg.value);\n    }\n\n    function removePlayer(uint256 game_id, address player) public onlyOwner {\n        gameData[game_id].seats[player] = 0;\n\n        emit RemovePlayer(player);\n    }\n\n    function setArcadeFeePercentage(uint256 percentage) public onlyOwner {\n        fee_percentage = percentage;\n    }\n\n    function setMarketMaker(address incoming) public onlyOwner {\n        market_maker = incoming;\n    }\n\n    function setWinner(uint256 game_id, address winner) public onlyOwner {\n        if (gameData[game_id].exchange == false) {\n            emit Fee(gameData[game_id].fee[winner]);\n\n            require(gameData[game_id].paid[winner] == 1, \"Not registered for this game\");\n\n            uint256 arcade_fee = (gameData[game_id].total_fee * fee_percentage) / 100 / decimals;\n            uint256 payout = gameData[game_id].total_fee - arcade_fee;\n            uint256 contract_balance = address(this).balance;\n\n            if (contract_balance < payout) {\n                payout = contract_balance;\n            }\n\n            (bool success, ) = winner.call{ value: payout }(\"\");\n            require(success, \"Trophy King Arcade: Unable to transfer.\");\n            \n            emit Payout(payout);\n        }\n\n        closeGame(game_id);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.6.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts@4.6.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.6.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts@4.6.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.6.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts@4.6.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.6.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:923   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:90   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":143:148   */\n  dup1\n    /* \"#utility.yul\":136:141   */\n  dup2\n    /* \"#utility.yul\":129:149   */\n  revert\n    /* \"#utility.yul\":88:90   */\ntag_24:\n    /* \"#utility.yul\":170:183   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":232:242   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":229:231   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":245:263   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":320:322   */\n  0x40\n    /* \"#utility.yul\":314:323   */\n  mload\n    /* \"#utility.yul\":288:290   */\n  0x1f\n    /* \"#utility.yul\":374:387   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":370:392   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":394:396   */\n  0x3f\n    /* \"#utility.yul\":366:397   */\n  add\n    /* \"#utility.yul\":362:402   */\n  and\n    /* \"#utility.yul\":350:403   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":418:436   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":438:460   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":415:461   */\n  or\n    /* \"#utility.yul\":412:414   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":464:482   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":504:514   */\n  dup2\n    /* \"#utility.yul\":500:502   */\n  0x40\n    /* \"#utility.yul\":493:515   */\n  mstore\n    /* \"#utility.yul\":539:541   */\n  dup4\n    /* \"#utility.yul\":531:537   */\n  dup2\n    /* \"#utility.yul\":524:542   */\n  mstore\n    /* \"#utility.yul\":561:565   */\n  0x20\n    /* \"#utility.yul\":551:565   */\n  swap3\n  pop\n    /* \"#utility.yul\":606:609   */\n  dup7\n    /* \"#utility.yul\":601:603   */\n  dup4\n    /* \"#utility.yul\":596:598   */\n  dup6\n    /* \"#utility.yul\":588:594   */\n  dup9\n    /* \"#utility.yul\":584:599   */\n  add\n    /* \"#utility.yul\":580:604   */\n  add\n    /* \"#utility.yul\":577:610   */\n  gt\n    /* \"#utility.yul\":574:576   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":627:632   */\n  dup5\n    /* \"#utility.yul\":620:625   */\n  dup6\n    /* \"#utility.yul\":613:633   */\n  revert\n    /* \"#utility.yul\":574:576   */\ntag_30:\n    /* \"#utility.yul\":653:658   */\n  dup5\n    /* \"#utility.yul\":644:658   */\n  swap2\n  pop\n    /* \"#utility.yul\":667:800   */\ntag_31:\n    /* \"#utility.yul\":681:683   */\n  dup4\n    /* \"#utility.yul\":678:679   */\n  dup3\n    /* \"#utility.yul\":675:684   */\n  lt\n    /* \"#utility.yul\":667:800   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":769:783   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":765:788   */\n  dup4\n  add\n    /* \"#utility.yul\":759:789   */\n  mload\n    /* \"#utility.yul\":738:752   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":734:757   */\n  dup5\n  add\n    /* \"#utility.yul\":727:790   */\n  mstore\n    /* \"#utility.yul\":692:702   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":667:800   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":818:820   */\n  dup4\n    /* \"#utility.yul\":815:816   */\n  dup3\n    /* \"#utility.yul\":812:821   */\n  gt\n    /* \"#utility.yul\":809:811   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":877:882   */\n  dup5\n    /* \"#utility.yul\":872:874   */\n  dup4\n    /* \"#utility.yul\":867:869   */\n  dup6\n    /* \"#utility.yul\":859:865   */\n  dup4\n    /* \"#utility.yul\":855:870   */\n  add\n    /* \"#utility.yul\":851:875   */\n  add\n    /* \"#utility.yul\":844:883   */\n  mstore\n    /* \"#utility.yul\":809:811   */\ntag_34:\n    /* \"#utility.yul\":911:917   */\n  swap7\n    /* \"#utility.yul\":78:923   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1520   */\ntag_3:\n    /* \"#utility.yul\":1027:1033   */\n  0x00\n    /* \"#utility.yul\":1035:1041   */\n  dup1\n    /* \"#utility.yul\":1088:1090   */\n  0x40\n    /* \"#utility.yul\":1076:1085   */\n  dup4\n    /* \"#utility.yul\":1067:1074   */\n  dup6\n    /* \"#utility.yul\":1063:1086   */\n  sub\n    /* \"#utility.yul\":1059:1091   */\n  slt\n    /* \"#utility.yul\":1056:1058   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1109:1115   */\n  dup2\n    /* \"#utility.yul\":1101:1107   */\n  dup3\n    /* \"#utility.yul\":1094:1116   */\n  revert\n    /* \"#utility.yul\":1056:1058   */\ntag_36:\n    /* \"#utility.yul\":1141:1157   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1206:1220   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1203:1205   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1238:1244   */\n  dup4\n    /* \"#utility.yul\":1230:1236   */\n  dup5\n    /* \"#utility.yul\":1223:1245   */\n  revert\n    /* \"#utility.yul\":1203:1205   */\ntag_37:\n    /* \"#utility.yul\":1266:1327   */\n  tag_38\n    /* \"#utility.yul\":1319:1326   */\n  dup7\n    /* \"#utility.yul\":1310:1316   */\n  dup4\n    /* \"#utility.yul\":1299:1308   */\n  dup8\n    /* \"#utility.yul\":1295:1317   */\n  add\n    /* \"#utility.yul\":1266:1327   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1256:1327   */\n  swap4\n  pop\n    /* \"#utility.yul\":1373:1375   */\n  0x20\n    /* \"#utility.yul\":1362:1371   */\n  dup6\n    /* \"#utility.yul\":1358:1376   */\n  add\n    /* \"#utility.yul\":1352:1377   */\n  mload\n    /* \"#utility.yul\":1336:1377   */\n  swap2\n  pop\n    /* \"#utility.yul\":1402:1404   */\n  dup1\n    /* \"#utility.yul\":1392:1400   */\n  dup3\n    /* \"#utility.yul\":1389:1405   */\n  gt\n    /* \"#utility.yul\":1386:1388   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1423:1429   */\n  dup3\n    /* \"#utility.yul\":1415:1421   */\n  dup4\n    /* \"#utility.yul\":1408:1430   */\n  revert\n    /* \"#utility.yul\":1386:1388   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1451:1514   */\n  tag_40\n    /* \"#utility.yul\":1506:1513   */\n  dup6\n    /* \"#utility.yul\":1495:1503   */\n  dup3\n    /* \"#utility.yul\":1484:1493   */\n  dup7\n    /* \"#utility.yul\":1480:1504   */\n  add\n    /* \"#utility.yul\":1451:1514   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1441:1514   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1046:1520   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1525:1905   */\ntag_11:\n    /* \"#utility.yul\":1604:1605   */\n  0x01\n    /* \"#utility.yul\":1600:1612   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1647:1659   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1668:1670   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1722:1726   */\n  0x7f\n    /* \"#utility.yul\":1714:1720   */\n  dup3\n    /* \"#utility.yul\":1710:1727   */\n  and\n    /* \"#utility.yul\":1700:1727   */\n  swap2\n  pop\n    /* \"#utility.yul\":1668:1670   */\ntag_42:\n    /* \"#utility.yul\":1775:1777   */\n  0x20\n    /* \"#utility.yul\":1767:1773   */\n  dup3\n    /* \"#utility.yul\":1764:1778   */\n  lt\n    /* \"#utility.yul\":1744:1762   */\n  dup2\n    /* \"#utility.yul\":1741:1779   */\n  eq\n    /* \"#utility.yul\":1738:1740   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1821:1831   */\n  0x4e487b71\n    /* \"#utility.yul\":1816:1819   */\n  0xe0\n    /* \"#utility.yul\":1812:1832   */\n  shl\n    /* \"#utility.yul\":1809:1810   */\n  0x00\n    /* \"#utility.yul\":1802:1833   */\n  mstore\n    /* \"#utility.yul\":1856:1860   */\n  0x22\n    /* \"#utility.yul\":1853:1854   */\n  0x04\n    /* \"#utility.yul\":1846:1861   */\n  mstore\n    /* \"#utility.yul\":1884:1888   */\n  0x24\n    /* \"#utility.yul\":1881:1882   */\n  0x00\n    /* \"#utility.yul\":1874:1889   */\n  revert\n    /* \"#utility.yul\":1738:1740   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1580:1905   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1910:2037   */\ntag_27:\n    /* \"#utility.yul\":1971:1981   */\n  0x4e487b71\n    /* \"#utility.yul\":1966:1969   */\n  0xe0\n    /* \"#utility.yul\":1962:1982   */\n  shl\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1983   */\n  mstore\n    /* \"#utility.yul\":2002:2006   */\n  0x41\n    /* \"#utility.yul\":1999:2000   */\n  0x04\n    /* \"#utility.yul\":1992:2007   */\n  mstore\n    /* \"#utility.yul\":2026:2030   */\n  0x24\n    /* \"#utility.yul\":2023:2024   */\n  0x00\n    /* \"#utility.yul\":2016:2031   */\n  revert\n    /* \"#utility.yul\":1942:2037   */\ntag_21:\n    /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1445:1459   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1438:1460   */\n      iszero\n        /* \"#utility.yul\":1420:1461   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1408:1410   */\n      0x20\n        /* \"#utility.yul\":1393:1411   */\n      add\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1375:1467   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5015:5040   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5003:5005   */\n      0x20\n        /* \"#utility.yul\":4988:5006   */\n      add\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4970:5046   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":5193:5229   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5181:5183   */\n      0x20\n        /* \"#utility.yul\":5166:5184   */\n      add\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5148:5235   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup4\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6687:6691  bool */\n      dup2\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4665:4667   */\n      0x20\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4647:4668   */\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x25\n        /* \"#utility.yul\":4684:4702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4677:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4777   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4723:4741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4716:4778   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":4794:4812   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4787:4822   */\n      mstore\n        /* \"#utility.yul\":4839:4858   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10119:10489  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10250:10269  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4260:4262   */\n      0x20\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4242:4263   */\n      mstore\n        /* \"#utility.yul\":4299:4301   */\n      0x24\n        /* \"#utility.yul\":4279:4297   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4272:4302   */\n      mstore\n        /* \"#utility.yul\":4338:4372   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4318:4336   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4311:4373   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4389:4407   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4382:4416   */\n      mstore\n        /* \"#utility.yul\":4433:4452   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4232:4458   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10328:10349  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2686:2688   */\n      0x20\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2668:2689   */\n      mstore\n        /* \"#utility.yul\":2725:2727   */\n      0x22\n        /* \"#utility.yul\":2705:2723   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2698:2728   */\n      mstore\n        /* \"#utility.yul\":2764:2798   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2744:2762   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2737:2799   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":2815:2833   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2808:2840   */\n      mstore\n        /* \"#utility.yul\":2857:2876   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":2658:2882   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10399:10417  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10399:10410  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10399:10417  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10399:10426  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10399:10435  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5015:5040   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":4988:5006   */\n      add\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10119:10489  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10900:10924  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10937:10942  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10944:10951  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10927:10936  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10900:10952  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10966:10982  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10966:11003  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10962:11205  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11047:11053  amount */\n      dup2\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11027:11043  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11027:11053  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3089:3091   */\n      0x20\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3071:3092   */\n      mstore\n        /* \"#utility.yul\":3128:3130   */\n      0x1d\n        /* \"#utility.yul\":3108:3126   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3101:3131   */\n      mstore\n        /* \"#utility.yul\":3167:3198   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":3147:3165   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3140:3199   */\n      mstore\n        /* \"#utility.yul\":3216:3234   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":3061:3240   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11138:11143  owner */\n      dup5\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11145:11152  spender */\n      dup5\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11173:11179  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11154:11170  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11154:11179  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11129:11137  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7484:8135  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7610:7628  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3854:3856   */\n      0x20\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3836:3857   */\n      mstore\n        /* \"#utility.yul\":3893:3895   */\n      0x25\n        /* \"#utility.yul\":3873:3891   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3866:3896   */\n      mstore\n        /* \"#utility.yul\":3932:3966   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3912:3930   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3905:3967   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":3983:4001   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3976:4011   */\n      mstore\n        /* \"#utility.yul\":4028:4047   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3826:4053   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7688:7704  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2282:2284   */\n      0x20\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2264:2285   */\n      mstore\n        /* \"#utility.yul\":2321:2323   */\n      0x23\n        /* \"#utility.yul\":2301:2319   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2294:2324   */\n      mstore\n        /* \"#utility.yul\":2360:2394   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2340:2358   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2333:2395   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2411:2429   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2404:2437   */\n      mstore\n        /* \"#utility.yul\":2454:2473   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":2254:2479   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7826:7841  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7804:7823  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7826:7841  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7859:7880  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3429:3450   */\n      mstore\n        /* \"#utility.yul\":3486:3488   */\n      0x26\n        /* \"#utility.yul\":3466:3484   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3459:3489   */\n      mstore\n        /* \"#utility.yul\":3525:3559   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3505:3523   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3498:3560   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":3576:3594   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3569:3605   */\n      mstore\n        /* \"#utility.yul\":3622:3641   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":3419:3647   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7957:7972  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7957:7966  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7957:7972  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7975:7995  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7957:7995  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8015:8028  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7989:7995  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7957:7966  _balances */\n      swap1\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":7989:7995  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8069:8071  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8063:8067  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8073:8079  amount */\n      dup5\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":5015:5040   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5003:5005   */\n      0x20\n        /* \"#utility.yul\":4988:5006   */\n      add\n      swap1\n        /* \"#utility.yul\":4970:5046   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":8091:8128  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":11795:11916  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_142:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_144:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:388   */\n    tag_44:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_146:\n        /* \"#utility.yul\":353:382   */\n      tag_147\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_142\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":343:382   */\n      swap4\n        /* \"#utility.yul\":262:388   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":393:663   */\n    tag_60:\n        /* \"#utility.yul\":461:467   */\n      0x00\n        /* \"#utility.yul\":469:475   */\n      dup1\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":510:519   */\n      dup4\n        /* \"#utility.yul\":501:508   */\n      dup6\n        /* \"#utility.yul\":497:520   */\n      sub\n        /* \"#utility.yul\":493:525   */\n      slt\n        /* \"#utility.yul\":490:492   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":543:549   */\n      dup1\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":528:550   */\n      revert\n        /* \"#utility.yul\":490:492   */\n    tag_149:\n        /* \"#utility.yul\":571:600   */\n      tag_150\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":571:600   */\n      tag_142\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":561:600   */\n      swap2\n      pop\n        /* \"#utility.yul\":619:657   */\n      tag_151\n        /* \"#utility.yul\":653:655   */\n      0x20\n        /* \"#utility.yul\":642:651   */\n      dup5\n        /* \"#utility.yul\":638:656   */\n      add\n        /* \"#utility.yul\":619:657   */\n      tag_142\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":609:657   */\n      swap1\n      pop\n        /* \"#utility.yul\":480:663   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:1006   */\n    tag_31:\n        /* \"#utility.yul\":745:751   */\n      0x00\n        /* \"#utility.yul\":753:759   */\n      dup1\n        /* \"#utility.yul\":761:767   */\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x60\n        /* \"#utility.yul\":802:811   */\n      dup5\n        /* \"#utility.yul\":793:800   */\n      dup7\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:784   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":835:841   */\n      dup1\n        /* \"#utility.yul\":827:833   */\n      dup2\n        /* \"#utility.yul\":820:842   */\n      revert\n        /* \"#utility.yul\":782:784   */\n    tag_153:\n        /* \"#utility.yul\":863:892   */\n      tag_154\n        /* \"#utility.yul\":882:891   */\n      dup5\n        /* \"#utility.yul\":863:892   */\n      tag_142\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":853:892   */\n      swap3\n      pop\n        /* \"#utility.yul\":911:949   */\n      tag_155\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":934:943   */\n      dup6\n        /* \"#utility.yul\":930:948   */\n      add\n        /* \"#utility.yul\":911:949   */\n      tag_142\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":901:949   */\n      swap2\n      pop\n        /* \"#utility.yul\":996:998   */\n      0x40\n        /* \"#utility.yul\":985:994   */\n      dup5\n        /* \"#utility.yul\":981:999   */\n      add\n        /* \"#utility.yul\":968:1000   */\n      calldataload\n        /* \"#utility.yul\":958:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":772:1006   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1011:1275   */\n    tag_21:\n        /* \"#utility.yul\":1079:1085   */\n      0x00\n        /* \"#utility.yul\":1087:1093   */\n      dup1\n        /* \"#utility.yul\":1140:1142   */\n      0x40\n        /* \"#utility.yul\":1128:1137   */\n      dup4\n        /* \"#utility.yul\":1119:1126   */\n      dup6\n        /* \"#utility.yul\":1115:1138   */\n      sub\n        /* \"#utility.yul\":1111:1143   */\n      slt\n        /* \"#utility.yul\":1108:1110   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1161:1167   */\n      dup2\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1146:1168   */\n      revert\n        /* \"#utility.yul\":1108:1110   */\n    tag_157:\n        /* \"#utility.yul\":1189:1218   */\n      tag_158\n        /* \"#utility.yul\":1208:1217   */\n      dup4\n        /* \"#utility.yul\":1189:1218   */\n      tag_142\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1179:1218   */\n      swap5\n        /* \"#utility.yul\":1265:1267   */\n      0x20\n        /* \"#utility.yul\":1250:1268   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1237:1269   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1098:1275   */\n      jump\t// out\n        /* \"#utility.yul\":1472:2075   */\n    tag_18:\n        /* \"#utility.yul\":1584:1588   */\n      0x00\n        /* \"#utility.yul\":1613:1615   */\n      0x20\n        /* \"#utility.yul\":1642:1644   */\n      dup1\n        /* \"#utility.yul\":1631:1640   */\n      dup4\n        /* \"#utility.yul\":1624:1645   */\n      mstore\n        /* \"#utility.yul\":1674:1680   */\n      dup4\n        /* \"#utility.yul\":1668:1681   */\n      mload\n        /* \"#utility.yul\":1717:1723   */\n      dup1\n        /* \"#utility.yul\":1712:1714   */\n      dup3\n        /* \"#utility.yul\":1701:1710   */\n      dup6\n        /* \"#utility.yul\":1697:1715   */\n      add\n        /* \"#utility.yul\":1690:1724   */\n      mstore\n        /* \"#utility.yul\":1742:1746   */\n      dup3\n        /* \"#utility.yul\":1755:1895   */\n    tag_161:\n        /* \"#utility.yul\":1769:1775   */\n      dup2\n        /* \"#utility.yul\":1766:1767   */\n      dup2\n        /* \"#utility.yul\":1763:1776   */\n      lt\n        /* \"#utility.yul\":1755:1895   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1864:1878   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1860:1883   */\n      dup4\n      add\n        /* \"#utility.yul\":1854:1884   */\n      mload\n        /* \"#utility.yul\":1830:1847   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1849:1851   */\n      0x40\n        /* \"#utility.yul\":1826:1852   */\n      add\n        /* \"#utility.yul\":1819:1885   */\n      mstore\n        /* \"#utility.yul\":1784:1794   */\n      dup3\n      add\n        /* \"#utility.yul\":1755:1895   */\n      jump(tag_161)\n    tag_163:\n        /* \"#utility.yul\":1913:1919   */\n      dup2\n        /* \"#utility.yul\":1910:1911   */\n      dup2\n        /* \"#utility.yul\":1907:1920   */\n      gt\n        /* \"#utility.yul\":1904:1906   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":1983:1987   */\n      dup4\n        /* \"#utility.yul\":1978:1980   */\n      0x40\n        /* \"#utility.yul\":1969:1975   */\n      dup4\n        /* \"#utility.yul\":1958:1967   */\n      dup8\n        /* \"#utility.yul\":1954:1976   */\n      add\n        /* \"#utility.yul\":1950:1981   */\n      add\n        /* \"#utility.yul\":1943:1988   */\n      mstore\n        /* \"#utility.yul\":1904:1906   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2059:2061   */\n      0x1f\n        /* \"#utility.yul\":2038:2053   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2034:2063   */\n      and\n        /* \"#utility.yul\":2019:2064   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2066:2068   */\n      0x40\n        /* \"#utility.yul\":2015:2069   */\n      add\n      swap4\n        /* \"#utility.yul\":1593:2075   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5240:5469   */\n    tag_88:\n        /* \"#utility.yul\":5280:5283   */\n      0x00\n        /* \"#utility.yul\":5311:5312   */\n      dup3\n        /* \"#utility.yul\":5307:5313   */\n      not\n        /* \"#utility.yul\":5304:5305   */\n      dup3\n        /* \"#utility.yul\":5301:5314   */\n      gt\n        /* \"#utility.yul\":5298:5300   */\n      iszero\n      tag_175\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5337:5370   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5393:5397   */\n      0x11\n        /* \"#utility.yul\":5390:5391   */\n      0x04\n        /* \"#utility.yul\":5383:5398   */\n      mstore\n        /* \"#utility.yul\":5423:5427   */\n      0x24\n        /* \"#utility.yul\":5344:5347   */\n      dup2\n        /* \"#utility.yul\":5411:5428   */\n      revert\n        /* \"#utility.yul\":5298:5300   */\n    tag_175:\n      pop\n        /* \"#utility.yul\":5454:5463   */\n      add\n      swap1\n        /* \"#utility.yul\":5288:5469   */\n      jump\t// out\n        /* \"#utility.yul\":5474:5854   */\n    tag_65:\n        /* \"#utility.yul\":5553:5554   */\n      0x01\n        /* \"#utility.yul\":5549:5561   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5596:5608   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5617:5619   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5671:5675   */\n      0x7f\n        /* \"#utility.yul\":5663:5669   */\n      dup3\n        /* \"#utility.yul\":5659:5676   */\n      and\n        /* \"#utility.yul\":5649:5676   */\n      swap2\n      pop\n        /* \"#utility.yul\":5617:5619   */\n    tag_177:\n        /* \"#utility.yul\":5724:5726   */\n      0x20\n        /* \"#utility.yul\":5716:5722   */\n      dup3\n        /* \"#utility.yul\":5713:5727   */\n      lt\n        /* \"#utility.yul\":5693:5711   */\n      dup2\n        /* \"#utility.yul\":5690:5728   */\n      eq\n        /* \"#utility.yul\":5687:5689   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":5770:5780   */\n      0x4e487b71\n        /* \"#utility.yul\":5765:5768   */\n      0xe0\n        /* \"#utility.yul\":5761:5781   */\n      shl\n        /* \"#utility.yul\":5758:5759   */\n      0x00\n        /* \"#utility.yul\":5751:5782   */\n      mstore\n        /* \"#utility.yul\":5805:5809   */\n      0x22\n        /* \"#utility.yul\":5802:5803   */\n      0x04\n        /* \"#utility.yul\":5795:5810   */\n      mstore\n        /* \"#utility.yul\":5833:5837   */\n      0x24\n        /* \"#utility.yul\":5830:5831   */\n      0x00\n        /* \"#utility.yul\":5823:5838   */\n      revert\n        /* \"#utility.yul\":5687:5689   */\n    tag_178:\n      pop\n        /* \"#utility.yul\":5529:5854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205f6a94e47376f727def7609e2181b2148cfbd309ce972c6e63f14a42154e278964736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2039:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:845:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "136:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "143:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:7"
															},
															"nodeType": "YulIf",
															"src": "88:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "160:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "176:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "170:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "170:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "164:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "192:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "210:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "214:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "206:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "206:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "218:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "202:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "196:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "243:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "245:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "245:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "245:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "235:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "239:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "232:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:10:7"
															},
															"nodeType": "YulIf",
															"src": "229:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "274:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "284:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "284:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "278:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "300:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "314:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "314:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "304:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "332:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "354:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "378:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "382:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "374:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "374:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "389:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "370:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "370:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "394:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "366:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "366:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "399:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "350:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "336:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "464:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "421:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "433:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "441:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "453:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "438:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "438:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "415:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:46:7"
															},
															"nodeType": "YulIf",
															"src": "412:2:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "504:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "539:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "524:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "524:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "524:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "551:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "561:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "555:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "611:24:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "620:5:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "627:5:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "613:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "613:20:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "613:20:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "588:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "596:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "584:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "584:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "601:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "580:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "606:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "577:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:33:7"
															},
															"nodeType": "YulIf",
															"src": "574:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "644:14:7",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "653:5:7"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "648:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "713:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "742:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "750:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "738:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "738:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "754:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "734:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "734:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "773:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "781:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "769:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "769:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "785:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "765:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "765:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "759:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "759:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "678:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "681:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "675:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "685:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "687:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "696:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "699:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "692:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "687:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "671:3:7",
																"statements": []
															},
															"src": "667:133:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "830:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "859:6:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "867:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "855:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "855:15:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "872:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "851:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "851:24:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "877:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "844:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "844:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "844:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "815:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "818:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "812:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "812:9:7"
															},
															"nodeType": "YulIf",
															"src": "809:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "902:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "911:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "902:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:7",
														"type": ""
													}
												],
												"src": "14:909:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:474:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1092:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1101:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1109:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1067:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1076:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1063:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1063:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1088:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:32:7"
															},
															"nodeType": "YulIf",
															"src": "1056:2:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1127:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1147:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1141:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1131:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1166:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1184:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1188:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1180:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1176:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1170:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1221:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1230:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1238:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1223:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1209:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1217:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1206:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:14:7"
															},
															"nodeType": "YulIf",
															"src": "1203:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1299:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1310:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1295:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1295:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1319:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1266:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1336:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1362:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1373:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1352:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1340:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1406:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1415:6:7"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1423:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1408:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1408:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1408:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1392:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1402:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1389:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1389:16:7"
															},
															"nodeType": "YulIf",
															"src": "1386:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1441:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1484:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1495:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1480:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1480:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1506:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1451:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1004:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1015:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1027:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1035:6:7",
														"type": ""
													}
												],
												"src": "928:592:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1580:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1590:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1607:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1621:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1651:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1625:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1698:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1700:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1714:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1722:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1710:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1710:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1700:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1678:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1671:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:26:7"
															},
															"nodeType": "YulIf",
															"src": "1668:2:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1788:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1809:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1816:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1821:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1802:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1802:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1802:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1853:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1856:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1846:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1846:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1846:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1881:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1744:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1767:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1775:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1764:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1741:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1741:38:7"
															},
															"nodeType": "YulIf",
															"src": "1738:2:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1560:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1569:6:7",
														"type": ""
													}
												],
												"src": "1525:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1942:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1966:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1971:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1952:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1952:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1999:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1992:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1992:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2023:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1910:127:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b0a38038062000b0a8339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61087f806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c39190610797565b60405180910390f35b6100df6100da36600461076e565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610733565b61024a565b604051601281526020016100c3565b6100df61013136600461076e565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461076e565b61029f565b6100df61018836600461076e565b61031f565b6100f361019b366004610701565b61032d565b6060600380546101af9061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101db9061080e565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107ea565b610358565b6060600480546101af9061080e565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b9084906107ea565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f1578081fd5b6106fa826106c4565b9392505050565b60008060408385031215610713578081fd5b61071c836106c4565b915061072a602084016106c4565b90509250929050565b600080600060608486031215610747578081fd5b610750846106c4565b925061075e602085016106c4565b9150604084013590509250925092565b60008060408385031215610780578182fd5b610789836106c4565b946020939093013593505050565b6000602080835283518082850152825b818110156107c3578581018301518582016040015282016107a7565b818111156107d45783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212205f6a94e47376f727def7609e2181b2148cfbd309ce972c6e63f14a42154e278964736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB0A CODESIZE SUB DUP1 PUSH3 0xB0A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C1 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x27B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x228 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x167 JUMPI PUSH3 0x167 PUSH3 0x265 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x183 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A6 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x187 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1B7 JUMPI DUP5 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1EB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F9 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x20F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x21E DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x23D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x25F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x87F DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x701 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F1 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6FA DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x713 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x71C DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72A PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x747 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x750 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x75E PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x780 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x789 DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F PUSH11 0x94E47376F727DEF7609E21 DUP2 0xB2 EQ DUP13 0xFB 0xD3 MULMOD 0xCE SWAP8 0x2C PUSH15 0x63F14A42154E278964736F6C634300 ADDMOD DIV STOP CALLER ",
							"sourceMap": "1403:11223:1:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:1;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11223;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11223:1;;;-1:-1:-1;1403:11223:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:7;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:7;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:7;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:7:o;928:592::-;1027:6;1035;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:7;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1604:1;1600:12;;;;1647;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;1403:11223:1;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5856:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nodeType": "YulIf",
															"src": "111:2:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:7"
															},
															"nodeType": "YulIf",
															"src": "272:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													}
												],
												"src": "192:196:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "480:183:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "535:6:7"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "543:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "528:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "528:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "528:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "501:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:32:7"
															},
															"nodeType": "YulIf",
															"src": "490:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "571:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "609:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "642:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "653:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "638:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "619:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "619:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "438:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "449:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "461:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "469:6:7",
														"type": ""
													}
												],
												"src": "393:270:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:234:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "827:6:7"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "835:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:7"
															},
															"nodeType": "YulIf",
															"src": "782:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "853:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "882:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "863:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "853:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "901:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "934:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "945:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "930:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "930:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "911:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "958:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "996:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "722:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "733:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "745:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "753:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "761:6:7",
														"type": ""
													}
												],
												"src": "668:338:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:177:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1144:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1153:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1161:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1119:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1128:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1111:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:32:7"
															},
															"nodeType": "YulIf",
															"src": "1108:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1179:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1208:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1189:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1189:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1179:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1254:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1265:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1237:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1056:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1067:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1087:6:7",
														"type": ""
													}
												],
												"src": "1011:264:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1375:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1385:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1397:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1408:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1393:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1385:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1427:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1452:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1445:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1445:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1438:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1438:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1420:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1420:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1344:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1355:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1366:4:7",
														"type": ""
													}
												],
												"src": "1280:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1593:482:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1603:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1613:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1607:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1642:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1624:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1658:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1701:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1712:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1717:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1690:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1733:13:7",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "1742:4:7"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1737:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1805:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1834:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1845:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1830:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1830:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1826:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1826:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1868:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1876:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1864:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1864:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1880:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1860:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1860:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1854:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1854:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1819:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1819:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1819:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1766:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1769:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1777:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1779:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1788:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1791:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1784:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1784:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1779:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1759:3:7",
																"statements": []
															},
															"src": "1755:140:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1929:69:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1958:9:7"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1969:6:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1954:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1954:22:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1978:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1950:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1950:31:7"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "1983:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1943:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1943:45:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1943:45:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1910:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1907:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:13:7"
															},
															"nodeType": "YulIf",
															"src": "1904:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2007:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2042:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2050:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2038:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2038:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2059:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2055:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2055:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2007:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1562:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1573:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1584:4:7",
														"type": ""
													}
												],
												"src": "1472:603:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2271:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2264:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2305:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2316:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2301:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2321:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2344:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2355:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2340:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2340:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2360:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2333:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2333:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2415:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2426:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2431:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2446:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2458:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2469:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2454:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2446:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2231:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2245:4:7",
														"type": ""
													}
												],
												"src": "2080:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2658:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2675:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2668:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2668:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2725:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2698:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2698:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2748:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2759:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2744:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2764:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2737:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2737:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2819:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2830:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2815:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2835:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2808:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2849:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2861:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2872:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2857:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2849:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2635:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2649:4:7",
														"type": ""
													}
												],
												"src": "2484:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3078:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3089:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3071:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3101:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3101:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3151:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3162:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3167:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3208:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3220:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3231:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3208:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3038:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3052:4:7",
														"type": ""
													}
												],
												"src": "2887:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3419:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3436:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3429:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3429:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3470:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3481:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3466:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3466:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3486:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3459:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3459:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3509:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3520:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3505:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3505:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3525:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3498:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3498:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3498:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3580:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3591:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3576:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3576:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3596:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3614:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3626:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3637:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3622:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3614:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3396:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3410:4:7",
														"type": ""
													}
												],
												"src": "3245:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3826:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3843:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3836:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3836:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3877:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3888:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3873:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3873:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3893:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3866:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3866:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3916:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3927:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3912:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3932:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3905:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3905:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3998:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4003:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3976:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3976:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3976:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4020:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4032:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4043:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4028:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4028:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4020:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3803:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3817:4:7",
														"type": ""
													}
												],
												"src": "3652:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4232:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4249:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4260:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4242:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4242:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4242:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4283:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4294:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4279:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4279:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4299:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4272:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4272:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4272:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4322:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4333:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4318:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4318:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4338:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4311:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4311:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4311:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4393:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4404:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4389:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4389:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4409:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4382:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4382:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4425:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4437:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4433:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4425:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4209:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4223:4:7",
														"type": ""
													}
												],
												"src": "4058:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4637:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4654:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4665:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4647:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4647:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4688:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4699:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4684:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4684:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4677:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4677:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4743:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4716:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4716:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4798:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4809:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4794:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4814:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4787:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4787:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4831:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4843:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4854:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4839:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4839:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4831:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4614:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4628:4:7",
														"type": ""
													}
												],
												"src": "4463:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4970:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4980:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4992:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5003:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4988:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4988:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4980:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5022:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5033:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5015:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5015:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5015:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4939:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4950:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4961:4:7",
														"type": ""
													}
												],
												"src": "4869:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5148:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5170:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5215:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5223:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5193:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5117:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5128:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5139:4:7",
														"type": ""
													}
												],
												"src": "5051:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5288:181:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:115:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5344:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5353:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5358:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5349:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5349:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5337:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5337:33:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5337:33:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5390:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5393:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5383:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5383:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5383:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "5418:3:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5423:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5411:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5411:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5411:17:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5304:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5311:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5307:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5307:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5301:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5301:13:7"
															},
															"nodeType": "YulIf",
															"src": "5298:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5447:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5458:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5461:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5454:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5454:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5447:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5271:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5274:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5280:3:7",
														"type": ""
													}
												],
												"src": "5240:229:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5529:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5539:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5553:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5556:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5539:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5570:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5596:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5574:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5647:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5649:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5663:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5671:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5659:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5659:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5649:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5627:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5620:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5620:26:7"
															},
															"nodeType": "YulIf",
															"src": "5617:2:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5737:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5758:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5765:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5770:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5761:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5761:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5751:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5751:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5751:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5802:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5805:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5795:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5795:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5795:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5830:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5833:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5823:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5823:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5823:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5693:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5716:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5724:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5713:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5690:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5690:38:7"
															},
															"nodeType": "YulIf",
															"src": "5687:2:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5509:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5518:6:7",
														"type": ""
													}
												],
												"src": "5474:380:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c39190610797565b60405180910390f35b6100df6100da36600461076e565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610733565b61024a565b604051601281526020016100c3565b6100df61013136600461076e565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461076e565b61029f565b6100df61018836600461076e565b61031f565b6100f361019b366004610701565b61032d565b6060600380546101af9061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101db9061080e565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107ea565b610358565b6060600480546101af9061080e565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b9084906107ea565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f1578081fd5b6106fa826106c4565b9392505050565b60008060408385031215610713578081fd5b61071c836106c4565b915061072a602084016106c4565b90509250929050565b600080600060608486031215610747578081fd5b610750846106c4565b925061075e602085016106c4565b9150604084013590509250925092565b60008060408385031215610780578182fd5b610789836106c4565b946020939093013593505050565b6000602080835283518082850152825b818110156107c3578581018301518582016040015282016107a7565b818111156107d45783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212205f6a94e47376f727def7609e2181b2148cfbd309ce972c6e63f14a42154e278964736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x701 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F1 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6FA DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x713 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x71C DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72A PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x747 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x750 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x75E PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x780 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x789 DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F PUSH11 0x94E47376F727DEF7609E21 DUP2 0xB2 EQ DUP13 0xFB 0xD3 MULMOD 0xCE SWAP8 0x2C PUSH15 0x63F14A42154E278964736F6C634300 ADDMOD DIV STOP CALLER ",
							"sourceMap": "1403:11223:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1445:14:7;;1438:22;1420:41;;1408:2;1393:18;4433:197:1;1375:92:7;3244:106:1;3331:12;;3244:106;;;5015:25:7;;;5003:2;4988:18;3244:106:1;4970:76:7;5192:286:1;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;5193:36:7;;5181:2;5166:18;3093:91:1;5148:87:7;5873:234:1;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:4;4570:32:1;719:10:4;4586:7:1;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:1;;4433:197;-1:-1:-1;;;4433:197:1:o;5192:286::-;5319:4;719:10:4;5375:38:1;5391:4;719:10:4;5406:6:1;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:1;;5192:286;-1:-1:-1;;;;5192:286:1:o;5873:234::-;5961:4;719:10:4;6015:64:1;719:10:4;6031:7:1;6068:10;6040:25;719:10:4;6031:7:1;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:4;6687:4:1;6768:25;719:10:4;6785:7:1;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:1;;4665:2:7;6803:85:1;;;4647:21:7;4704:2;4684:18;;;4677:30;4743:34;4723:18;;;4716:62;-1:-1:-1;;;4794:18:7;;;4787:35;4839:19;;6803:85:1;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:4;3862:28:1;719:10:4;3879:2:1;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10119:370::-;-1:-1:-1;;;;;10250:19:1;;10242:68;;;;-1:-1:-1;;;10242:68:1;;4260:2:7;10242:68:1;;;4242:21:7;4299:2;4279:18;;;4272:30;4338:34;4318:18;;;4311:62;-1:-1:-1;;;4389:18:7;;;4382:34;4433:19;;10242:68:1;4232:226:7;10242:68:1;-1:-1:-1;;;;;10328:21:1;;10320:68;;;;-1:-1:-1;;;10320:68:1;;2686:2:7;10320:68:1;;;2668:21:7;2725:2;2705:18;;;2698:30;2764:34;2744:18;;;2737:62;-1:-1:-1;;;2815:18:7;;;2808:32;2857:19;;10320:68:1;2658:224:7;10320:68:1;-1:-1:-1;;;;;10399:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;5015:25:7;;;10450:32:1;;4988:18:7;10450:32:1;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:1;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:1;;3089:2:7;11019:68:1;;;3071:21:7;3128:2;3108:18;;;3101:30;3167:31;3147:18;;;3140:59;3216:18;;11019:68:1;3061:179:7;11019:68:1;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10770:441;;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:1;;7602:68;;;;-1:-1:-1;;;7602:68:1;;3854:2:7;7602:68:1;;;3836:21:7;3893:2;3873:18;;;3866:30;3932:34;3912:18;;;3905:62;-1:-1:-1;;;3983:18:7;;;3976:35;4028:19;;7602:68:1;3826:227:7;7602:68:1;-1:-1:-1;;;;;7688:16:1;;7680:64;;;;-1:-1:-1;;;7680:64:1;;2282:2:7;7680:64:1;;;2264:21:7;2321:2;2301:18;;;2294:30;2360:34;2340:18;;;2333:62;-1:-1:-1;;;2411:18:7;;;2404:33;2454:19;;7680:64:1;2254:225:7;7680:64:1;-1:-1:-1;;;;;7826:15:1;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:1;;3447:2:7;7851:72:1;;;3429:21:7;3486:2;3466:18;;;3459:30;3525:34;3505:18;;;3498:62;-1:-1:-1;;;3576:18:7;;;3569:36;3622:19;;7851:72:1;3419:228:7;7851:72:1;-1:-1:-1;;;;;7957:15:1;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:1;8063:4;-1:-1:-1;;;;;8054:26:1;;8073:6;8054:26;;;;5015:25:7;;5003:2;4988:18;;4970:76;8054:26:1;;;;;;;;8091:37;11795:121;14:173:7;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:7:o;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:7:o;1472:603::-;1584:4;1613:2;1642;1631:9;1624:21;1674:6;1668:13;1717:6;1712:2;1701:9;1697:18;1690:34;1742:4;1755:140;1769:6;1766:1;1763:13;1755:140;;;1864:14;;;1860:23;;1854:30;1830:17;;;1849:2;1826:26;1819:66;1784:10;;1755:140;;;1913:6;1910:1;1907:13;1904:2;;;1983:4;1978:2;1969:6;1958:9;1954:22;1950:31;1943:45;1904:2;-1:-1:-1;2059:2:7;2038:15;-1:-1:-1;;2034:29:7;2019:45;;;;2066:2;2015:54;;1593:482;-1:-1:-1;;;1593:482:7:o;5240:229::-;5280:3;5311:1;5307:6;5304:1;5301:13;5298:2;;;-1:-1:-1;;;5337:33:7;;5393:4;5390:1;5383:15;5423:4;5344:3;5411:17;5298:2;-1:-1:-1;5454:9:7;;5288:181::o;5474:380::-;5553:1;5549:12;;;;5596;;;5617:2;;5671:4;5663:6;5659:17;5649:27;;5617:2;5724;5716:6;5713:14;5693:18;5690:38;5687:2;;;5770:10;5765:3;5761:20;5758:1;5751:31;5805:4;5802:1;5795:15;5833:4;5830:1;5823:15;5687:2;;5529:325;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "435000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22524",
								"balanceOf(address)": "1262",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "23616",
								"increaseAllowance(address,uint256)": "23578",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1026",
								"transfer(address,uint256)": "44470",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 923,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 923,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 88,
									"end": 90,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 143,
									"end": 148,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 136,
									"end": 141,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 129,
									"end": 149,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 88,
									"end": 90,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 170,
									"end": 183,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 170,
									"end": 183,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 232,
									"end": 242,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 232,
									"end": 242,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 229,
									"end": 231,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 229,
									"end": 231,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 229,
									"end": 231,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 245,
									"end": 263,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 322,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 314,
									"end": 323,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 288,
									"end": 290,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 374,
									"end": 387,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 374,
									"end": 387,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 370,
									"end": 392,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 370,
									"end": 392,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 370,
									"end": 392,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 394,
									"end": 396,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 366,
									"end": 397,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 362,
									"end": 402,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 350,
									"end": 403,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 350,
									"end": 403,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 350,
									"end": 403,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 418,
									"end": 436,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 418,
									"end": 436,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 438,
									"end": 460,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 438,
									"end": 460,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 415,
									"end": 461,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 412,
									"end": 414,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 464,
									"end": 482,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 504,
									"end": 514,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 493,
									"end": 515,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 539,
									"end": 541,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 531,
									"end": 537,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 524,
									"end": 542,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 561,
									"end": 565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 551,
									"end": 565,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 551,
									"end": 565,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 606,
									"end": 609,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 601,
									"end": 603,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 596,
									"end": 598,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 588,
									"end": 594,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 584,
									"end": 599,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 580,
									"end": 604,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 577,
									"end": 610,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 574,
									"end": 576,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 574,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 627,
									"end": 632,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 620,
									"end": 625,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 613,
									"end": 633,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 574,
									"end": 576,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 574,
									"end": 576,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 653,
									"end": 658,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 644,
									"end": 658,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 644,
									"end": 658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 681,
									"end": 683,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 678,
									"end": 679,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 675,
									"end": 684,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 667,
									"end": 800,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 769,
									"end": 783,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 769,
									"end": 783,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 765,
									"end": 788,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 765,
									"end": 788,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 759,
									"end": 789,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 738,
									"end": 752,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 738,
									"end": 752,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 734,
									"end": 757,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 734,
									"end": 757,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 727,
									"end": 790,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 692,
									"end": 702,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 692,
									"end": 702,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 692,
									"end": 702,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 667,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 667,
									"end": 800,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 667,
									"end": 800,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 818,
									"end": 820,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 815,
									"end": 816,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 812,
									"end": 821,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 809,
									"end": 811,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 809,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 877,
									"end": 882,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 872,
									"end": 874,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 867,
									"end": 869,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 859,
									"end": 865,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 855,
									"end": 870,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 851,
									"end": 875,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 844,
									"end": 883,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 809,
									"end": 811,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 809,
									"end": 811,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 911,
									"end": 917,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 78,
									"end": 923,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 78,
									"end": 923,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 928,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1027,
									"end": 1033,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1035,
									"end": 1041,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1088,
									"end": 1090,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1085,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1067,
									"end": 1074,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1063,
									"end": 1086,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1059,
									"end": 1091,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1109,
									"end": 1115,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1116,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1206,
									"end": 1220,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1230,
									"end": 1236,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1223,
									"end": 1245,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1203,
									"end": 1205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1319,
									"end": 1326,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1308,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1295,
									"end": 1317,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1256,
									"end": 1327,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1373,
									"end": 1375,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1362,
									"end": 1371,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1376,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1352,
									"end": 1377,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1377,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1402,
									"end": 1404,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1392,
									"end": 1400,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1389,
									"end": 1405,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1423,
									"end": 1429,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1415,
									"end": 1421,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1408,
									"end": 1430,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1386,
									"end": 1388,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1506,
									"end": 1513,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1495,
									"end": 1503,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1493,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1480,
									"end": 1504,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1451,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1441,
									"end": 1514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1046,
									"end": 1520,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1525,
									"end": 1905,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1647,
									"end": 1659,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1722,
									"end": 1726,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1714,
									"end": 1720,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1727,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1700,
									"end": 1727,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1668,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1775,
									"end": 1777,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1767,
									"end": 1773,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1764,
									"end": 1778,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1744,
									"end": 1762,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1741,
									"end": 1779,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1821,
									"end": 1831,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1816,
									"end": 1819,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1809,
									"end": 1810,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1802,
									"end": 1833,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1856,
									"end": 1860,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1853,
									"end": 1854,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1846,
									"end": 1861,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1881,
									"end": 1882,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 1889,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1738,
									"end": 1740,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1905,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 1910,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1971,
									"end": 1981,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1966,
									"end": 1969,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1962,
									"end": 1982,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1983,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1992,
									"end": 2007,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2026,
									"end": 2030,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2023,
									"end": 2024,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2016,
									"end": 2031,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1942,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205f6a94e47376f727def7609e2181b2148cfbd309ce972c6e63f14a42154e278964736f6c63430008040033",
									".code": [
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1459,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1438,
											"end": 1460,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1420,
											"end": 1461,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1375,
											"end": 1467,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4970,
											"end": 5046,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5193,
											"end": 5229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5193,
											"end": 5229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5148,
											"end": 5235,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4667,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4668,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4677,
											"end": 4707,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4777,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4716,
											"end": 4778,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4839,
											"end": 4858,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4839,
											"end": 4858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10250,
											"end": 10269,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10269,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4262,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4242,
											"end": 4263,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4299,
											"end": 4301,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4302,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4338,
											"end": 4372,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4336,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4373,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4407,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4232,
											"end": 4458,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2688,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2727,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2728,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2799,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2808,
											"end": 2840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2876,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2857,
											"end": 2876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2658,
											"end": 2882,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10410,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10937,
											"end": 10942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10944,
											"end": 10951,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 10982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11003,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11047,
											"end": 11053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3091,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3092,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3140,
											"end": 3199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3216,
											"end": 3234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3061,
											"end": 3240,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11138,
											"end": 11143,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11145,
											"end": 11152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11173,
											"end": 11179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11154,
											"end": 11170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11154,
											"end": 11179,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7484,
											"end": 8135,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7484,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3857,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 3895,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3866,
											"end": 3896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3932,
											"end": 3966,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3930,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3905,
											"end": 3967,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3983,
											"end": 4001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4011,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4047,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4028,
											"end": 4047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3826,
											"end": 4053,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7688,
											"end": 7704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2321,
											"end": 2323,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2294,
											"end": 2324,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2429,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2437,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2473,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2454,
											"end": 2473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2254,
											"end": 2479,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3450,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3525,
											"end": 3559,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3498,
											"end": 3560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3569,
											"end": 3605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3641,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3622,
											"end": 3641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3419,
											"end": 3647,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7995,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8063,
											"end": 8067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8073,
											"end": 8079,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 5046,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8091,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 343,
											"end": 382,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 262,
											"end": 388,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 393,
											"end": 663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 461,
											"end": 467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 501,
											"end": 508,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 497,
											"end": 520,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 493,
											"end": 525,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 490,
											"end": 492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 543,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 528,
											"end": 550,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 490,
											"end": 492,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 490,
											"end": 492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 571,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 571,
											"end": 600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 561,
											"end": 600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 561,
											"end": 600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 653,
											"end": 655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 642,
											"end": 651,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 638,
											"end": 656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 609,
											"end": 657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 609,
											"end": 657,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 480,
											"end": 663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 480,
											"end": 663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 480,
											"end": 663,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 668,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 745,
											"end": 751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 761,
											"end": 767,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 782,
											"end": 784,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 835,
											"end": 841,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 820,
											"end": 842,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 782,
											"end": 784,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 863,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 863,
											"end": 892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 892,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 853,
											"end": 892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 943,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 930,
											"end": 948,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 911,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 911,
											"end": 949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 901,
											"end": 949,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 981,
											"end": 999,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 772,
											"end": 1006,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1011,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1079,
											"end": 1085,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1137,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1115,
											"end": 1138,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1108,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1189,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1218,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1250,
											"end": 1268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1237,
											"end": 1269,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1275,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1472,
											"end": 2075,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1472,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1613,
											"end": 1615,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1644,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1645,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1681,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1723,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1710,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1724,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1769,
											"end": 1775,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1763,
											"end": 1776,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1878,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1847,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1885,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1755,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1980,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1954,
											"end": 1976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1981,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1988,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1904,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2059,
											"end": 2061,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2038,
											"end": 2053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2034,
											"end": 2063,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2064,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2066,
											"end": 2068,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2069,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 2075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 2075,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5240,
											"end": 5469,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 5240,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5280,
											"end": 5283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5312,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5313,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5314,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5337,
											"end": 5370,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5337,
											"end": 5370,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5390,
											"end": 5391,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5427,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5344,
											"end": 5347,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5411,
											"end": 5428,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5288,
											"end": 5469,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5474,
											"end": 5854,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 5474,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5553,
											"end": 5554,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5596,
											"end": 5608,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5675,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 5663,
											"end": 5669,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5676,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5649,
											"end": 5676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5617,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5724,
											"end": 5726,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5716,
											"end": 5722,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5727,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5693,
											"end": 5711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5728,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5770,
											"end": 5780,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5761,
											"end": 5781,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5758,
											"end": 5759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5805,
											"end": 5809,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5802,
											"end": 5803,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5795,
											"end": 5810,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5837,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5830,
											"end": 5831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5838,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5687,
											"end": 5689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5854,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts@4.6.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts@4.6.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.6.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 126,
								"contract": "@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.6.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.6.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.6.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.6.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.6.0/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.6.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts@4.6.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.6.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.6.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.6.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220224f02d81bc188c50f92df399659b2f93a4f60dc24e324b1289a3fe54034175864736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220224f02d81bc188c50f92df399659b2f93a4f60dc24e324b1289a3fe54034175864736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0x4F MUL 0xD8 SHL 0xC1 DUP9 0xC5 0xF SWAP3 0xDF CODECOPY SWAP7 MSIZE 0xB2 0xF9 GASPRICE 0x4F PUSH1 0xDC 0x24 0xE3 0x24 0xB1 0x28 SWAP11 EXTCODEHASH 0xE5 BLOCKHASH CALLVALUE OR PC PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220224f02d81bc188c50f92df399659b2f93a4f60dc24e324b1289a3fe54034175864736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0x4F MUL 0xD8 SHL 0xC1 DUP9 0xC5 0xF SWAP3 0xDF CODECOPY SWAP7 MSIZE 0xB2 0xF9 GASPRICE 0x4F PUSH1 0xDC 0x24 0xE3 0x24 0xB1 0x28 SWAP11 EXTCODEHASH 0xE5 BLOCKHASH CALLVALUE OR PC PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220224f02d81bc188c50f92df399659b2f93a4f60dc24e324b1289a3fe54034175864736f6c63430008040033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Arcade.sol": {
				"Arcade": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "CloseGame",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "CreateGame",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "DeleteGame",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "Fee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "OpenGame",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "payout",
									"type": "uint256"
								}
							],
							"name": "Payout",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "PlacePlayer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Refund",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Register",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "RemovePlayer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								}
							],
							"name": "closeGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "registration_fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "player_limit",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "exchange",
									"type": "bool"
								}
							],
							"name": "createGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								}
							],
							"name": "deleteGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee_percentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "gameData",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exchange",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "player_count",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "player_limit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "registration_fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "status",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "total_fee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "market_maker",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								}
							],
							"name": "openGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "placePlayer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reconcile",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "refund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "removePlayer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "percentage",
									"type": "uint256"
								}
							],
							"name": "setArcadeFeePercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "incoming",
									"type": "address"
								}
							],
							"name": "setMarketMaker",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "game_id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "winner",
									"type": "address"
								}
							],
							"name": "setWinner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Arcade.sol\":257:5669  contract Arcade is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Arcade.sol\":1136:1140  1e18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/Arcade.sol\":1110:1140  uint256 public decimals = 1e18 */\n  0x02\n  sstore\n    /* \"contracts/Arcade.sol\":1215:1305  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_8\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"contracts/Arcade.sol\":1256:1261  10e16 */\n  0x016345785d8a0000\n    /* \"contracts/Arcade.sol\":1239:1253  fee_percentage */\n  0x03\n    /* \"contracts/Arcade.sol\":1239:1261  fee_percentage = 10e16 */\n  sstore\n    /* \"contracts/Arcade.sol\":1271:1283  market_maker */\n  0x04\n    /* \"contracts/Arcade.sol\":1271:1298  market_maker = _msgSender() */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/Arcade.sol\":1271:1298  market_maker = _msgSender() */\n  or\n  swap1\n  sstore\n    /* \"contracts/Arcade.sol\":257:5669  contract Arcade is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Arcade.sol\":257:5669  contract Arcade is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Arcade.sol\":257:5669  contract Arcade is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xccaf237f\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xccaf237f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf207564e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf54c42d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfc3af0d6\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8f0d7e35\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9c623683\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb9888d89\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc46ed45a\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x2d6ef310\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x2d6ef310\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x75ca7603\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7ad226dc\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0xf5544f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x248a55a1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2ac5016f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2ba67100\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Arcade.sol\":2038:2168  function openGame(uint256 game_id) public onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/Arcade.sol\":1902:2032  function deleteGame(uint256 game_id) public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_25\n      tag_31\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"contracts/Arcade.sol\":4613:4726  function setArcadeFeePercentage(uint256 percentage) public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_25\n      tag_35\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"contracts/Arcade.sol\":4447:4607  function removePlayer(uint256 game_id, address player) public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_25\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"contracts/Arcade.sol\":1311:1443  function closeGame(uint256 game_id) public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_25\n      tag_44\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n        /* \"contracts/Arcade.sol\":1110:1140  uint256 public decimals = 1e18 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      sload(0x02)\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":7071:7096   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7059:7061   */\n      0x20\n        /* \"#utility.yul\":7044:7062   */\n      add\n        /* \"contracts/Arcade.sol\":1110:1140  uint256 public decimals = 1e18 */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_25\n      tag_53\n      jump\t// in\n        /* \"contracts/Arcade.sol\":1181:1208  address public market_maker */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      sload(0x04)\n      tag_55\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_55:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1734:1766   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1716:1767   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1704:1706   */\n      0x20\n        /* \"#utility.yul\":1689:1707   */\n      add\n        /* \"contracts/Arcade.sol\":1181:1208  address public market_maker */\n      tag_49\n        /* \"#utility.yul\":1671:1773   */\n      jump\n        /* \"contracts/Arcade.sol\":2700:3347  function refund(uint256 game_id, address player) public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_25\n      tag_61\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_55)\n        /* \"contracts/Arcade.sol\":2422:2694  function reconcile() public onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_25\n      tag_69\n      jump\t// in\n        /* \"contracts/Arcade.sol\":4837:5667  function setWinner(uint256 game_id, address winner) public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_25\n      tag_72\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/Arcade.sol\":2174:2416  function placePlayer(uint256 game_id, address player) public onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_25\n      tag_76\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"contracts/Arcade.sol\":1146:1175  uint256 public fee_percentage */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_47\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/Arcade.sol\":1059:1103  mapping(uint256 => GameInfo) public gameData */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_84:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x03\n      dup3\n      add\n      sload\n      0x04\n      dup4\n      add\n      sload\n      0x05\n      dup5\n      add\n      sload\n      0x07\n      dup6\n      add\n      sload\n      0x08\n      swap1\n      swap6\n      add\n      sload\n      0xff\n      swap1\n      swap5\n      and\n      swap5\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      dup7\n      jump\n    tag_83:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2363:2377   */\n      swap7\n      iszero\n        /* \"#utility.yul\":2356:2378   */\n      iszero\n        /* \"#utility.yul\":2338:2379   */\n      dup8\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      dup8\n      add\n        /* \"#utility.yul\":2388:2422   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":2438:2456   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":2431:2465   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2496:2498   */\n      0x60\n        /* \"#utility.yul\":2481:2499   */\n      dup5\n      add\n        /* \"#utility.yul\":2474:2508   */\n      mstore\n        /* \"#utility.yul\":2539:2542   */\n      0x80\n        /* \"#utility.yul\":2524:2543   */\n      dup4\n      add\n        /* \"#utility.yul\":2517:2552   */\n      mstore\n        /* \"#utility.yul\":2583:2586   */\n      0xa0\n        /* \"#utility.yul\":2568:2587   */\n      dup3\n      add\n        /* \"#utility.yul\":2561:2596   */\n      mstore\n        /* \"#utility.yul\":2325:2328   */\n      0xc0\n        /* \"#utility.yul\":2310:2329   */\n      add\n        /* \"contracts/Arcade.sol\":1059:1103  mapping(uint256 => GameInfo) public gameData */\n      tag_49\n        /* \"#utility.yul\":2292:2602   */\n      jump\n        /* \"contracts/Arcade.sol\":3831:4441  function register(uint256 game_id) public payable {... */\n    tag_17:\n      tag_25\n      tag_89\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_25\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"contracts/Arcade.sol\":4732:4831  function setMarketMaker(address incoming) public onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_25\n      tag_98\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"contracts/Arcade.sol\":1449:1896  function createGame(uint256 game_id, uint256 registration_fee, uint256 player_limit, bool exchange) public onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_25\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"contracts/Arcade.sol\":2038:2168  function openGame(uint256 game_id) public onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"contracts/Arcade.sol\":2100:2117  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2127:2128  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":2100:2117  gameData[game_id] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":2100:2124  gameData[game_id].status */\n      0x07\n      add\n        /* \"contracts/Arcade.sol\":2100:2128  gameData[game_id].status = 1 */\n      sstore\n        /* \"contracts/Arcade.sol\":2144:2161  OpenGame(game_id) */\n      mload\n      0x651a9760985edc53055bf2462cb4437b9be3de87aa3eecf2c05782e8b58eba19\n      swap1\n      tag_113\n      swap1\n        /* \"contracts/Arcade.sol\":2109:2116  game_id */\n      dup4\n        /* \"#utility.yul\":7071:7096   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7059:7061   */\n      0x20\n        /* \"#utility.yul\":7044:7062   */\n      add\n      swap1\n        /* \"#utility.yul\":7026:7102   */\n      jump\n        /* \"contracts/Arcade.sol\":2144:2161  OpenGame(game_id) */\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":2038:2168  function openGame(uint256 game_id) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":1902:2032  function deleteGame(uint256 game_id) public onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_117:\n        /* \"contracts/Arcade.sol\":1973:1990  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":1973:1981  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":1973:1990  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Arcade.sol\":1966:1990  delete gameData[game_id] */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n      0x03\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      0x04\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      0x05\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      0x07\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      0x08\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Arcade.sol\":2006:2025  DeleteGame(game_id) */\n      mload\n      0xd0b153e02e23f4f21d020465b4dac7b1114893d05db395ed2511f879c3ac90b4\n      swap1\n      tag_113\n      swap1\n        /* \"contracts/Arcade.sol\":1982:1989  game_id */\n      dup4\n        /* \"#utility.yul\":7071:7096   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7059:7061   */\n      0x20\n        /* \"#utility.yul\":7044:7062   */\n      add\n      swap1\n        /* \"#utility.yul\":7026:7102   */\n      jump\n        /* \"contracts/Arcade.sol\":4613:4726  function setArcadeFeePercentage(uint256 percentage) public onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_124:\n        /* \"contracts/Arcade.sol\":4692:4706  fee_percentage */\n      0x03\n        /* \"contracts/Arcade.sol\":4692:4719  fee_percentage = percentage */\n      sstore\n        /* \"contracts/Arcade.sol\":4613:4726  function setArcadeFeePercentage(uint256 percentage) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Arcade.sol\":4447:4607  function removePlayer(uint256 game_id, address player) public onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_130:\n        /* \"contracts/Arcade.sol\":4563:4564  0 */\n      0x00\n        /* \"contracts/Arcade.sol\":4529:4546  gameData[game_id] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":4529:4537  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":4529:4546  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":4529:4560  gameData[game_id].seats[player] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n        /* \"contracts/Arcade.sol\":4529:4552  gameData[game_id].seats */\n      0x06\n      swap1\n      swap2\n      add\n        /* \"contracts/Arcade.sol\":4529:4560  gameData[game_id].seats[player] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"contracts/Arcade.sol\":4529:4564  gameData[game_id].seats[player] = 0 */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Arcade.sol\":4580:4600  RemovePlayer(player) */\n      mload\n        /* \"#utility.yul\":1716:1767   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/Arcade.sol\":4580:4600  RemovePlayer(player) */\n      0x34aeefd5030be05fe70eebc8866d82f935a308eb9f334cba88f5e3bea1a0cae8\n      swap2\n        /* \"#utility.yul\":1689:1707   */\n      add\n        /* \"contracts/Arcade.sol\":4580:4600  RemovePlayer(player) */\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":4447:4607  function removePlayer(uint256 game_id, address player) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":1311:1443  function closeGame(uint256 game_id) public onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_137:\n        /* \"contracts/Arcade.sol\":1401:1402  0 */\n      0x00\n        /* \"contracts/Arcade.sol\":1374:1391  gameData[game_id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":1374:1382  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":1374:1391  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Arcade.sol\":1374:1398  gameData[game_id].status */\n      0x07\n      add\n        /* \"contracts/Arcade.sol\":1374:1402  gameData[game_id].status = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Arcade.sol\":1418:1436  CloseGame(game_id) */\n      mload\n      0x827e8bff9f46048f8351964d2c871d09e4f4231513cf2fcb786649c68732e24f\n      swap1\n      tag_113\n      swap1\n        /* \"contracts/Arcade.sol\":1383:1390  game_id */\n      dup4\n        /* \"#utility.yul\":7071:7096   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7059:7061   */\n      0x20\n        /* \"#utility.yul\":7044:7062   */\n      add\n      swap1\n        /* \"#utility.yul\":7026:7102   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_147\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_148\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Arcade.sol\":2700:3347  function refund(uint256 game_id, address player) public onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_152:\n        /* \"contracts/Arcade.sol\":2780:2797  gameData[game_id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2780:2788  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":2780:2797  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":2780:2806  gameData[game_id].exchange */\n      sload\n      0xff\n      and\n        /* \"contracts/Arcade.sol\":2776:3341  if (gameData[game_id].exchange == false) {... */\n      tag_155\n      jumpi\n        /* \"contracts/Arcade.sol\":2839:2856  gameData[game_id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2839:2847  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":2839:2856  gameData[game_id] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":2839:2869  gameData[game_id].paid[player] */\n      dup7\n      and\n      dup6\n      mstore\n        /* \"contracts/Arcade.sol\":2839:2861  gameData[game_id].paid */\n      0x02\n      add\n        /* \"contracts/Arcade.sol\":2839:2869  gameData[game_id].paid[player] */\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":2839:2874  gameData[game_id].paid[player] == 1 */\n      eq\n        /* \"contracts/Arcade.sol\":2831:2908  require(gameData[game_id].paid[player] == 1, \"Not registered for this game.\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4265:4267   */\n      0x20\n        /* \"contracts/Arcade.sol\":2831:2908  require(gameData[game_id].paid[player] == 1, \"Not registered for this game.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4247:4268   */\n      mstore\n        /* \"#utility.yul\":4304:4306   */\n      0x1d\n        /* \"#utility.yul\":4284:4302   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4277:4307   */\n      mstore\n        /* \"#utility.yul\":4343:4374   */\n      0x4e6f74207265676973746572656420666f7220746869732067616d652e000000\n        /* \"#utility.yul\":4323:4341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4316:4375   */\n      mstore\n        /* \"#utility.yul\":4392:4410   */\n      0x64\n      add\n        /* \"contracts/Arcade.sol\":2831:2908  require(gameData[game_id].paid[player] == 1, \"Not registered for this game.\") */\n      tag_110\n        /* \"#utility.yul\":4237:4416   */\n      jump\n        /* \"contracts/Arcade.sol\":2831:2908  require(gameData[game_id].paid[player] == 1, \"Not registered for this game.\") */\n    tag_156:\n        /* \"contracts/Arcade.sol\":2923:2942  GameInfo storage gi */\n      0x00\n        /* \"contracts/Arcade.sol\":2945:2962  gameData[game_id] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2945:2953  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":2945:2962  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Arcade.sol\":3016:3035  gi.registration_fee */\n      0x05\n      dup2\n      add\n      sload\n        /* \"contracts/Arcade.sol\":2996:3041  player.call{ value: gi.registration_fee }(\"\") */\n      swap2\n      mload\n        /* \"contracts/Arcade.sol\":2945:2962  gameData[game_id] */\n      swap1\n      swap3\n        /* \"contracts/Arcade.sol\":2923:2942  GameInfo storage gi */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":2996:3007  player.call */\n      dup6\n      and\n      swap2\n        /* \"contracts/Arcade.sol\":2923:2942  GameInfo storage gi */\n      dup4\n        /* \"contracts/Arcade.sol\":2996:3041  player.call{ value: gi.registration_fee }(\"\") */\n      dup2\n        /* \"contracts/Arcade.sol\":2923:2942  GameInfo storage gi */\n      dup2\n        /* \"contracts/Arcade.sol\":2996:3041  player.call{ value: gi.registration_fee }(\"\") */\n      dup2\n        /* \"contracts/Arcade.sol\":3016:3035  gi.registration_fee */\n      dup6\n        /* \"contracts/Arcade.sol\":2996:3007  player.call */\n      dup8\n        /* \"contracts/Arcade.sol\":2996:3041  player.call{ value: gi.registration_fee }(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_163\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_162)\n    tag_163:\n      0x60\n      swap2\n      pop\n    tag_162:\n      pop\n        /* \"contracts/Arcade.sol\":2977:3041  (bool success, ) = player.call{ value: gi.registration_fee }(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Arcade.sol\":3063:3070  success */\n      dup1\n        /* \"contracts/Arcade.sol\":3055:3114  require(success, \"Trophy King Arcade: Unable to transfer.\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_166\n      jump\t// in\n    tag_164:\n        /* \"contracts/Arcade.sol\":3158:3177  gi.registration_fee */\n      0x05\n      dup3\n      add\n      sload\n        /* \"contracts/Arcade.sol\":3134:3178  Refund(game_id, player, gi.registration_fee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7309:7334   */\n      dup7\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7370:7402   */\n      dup7\n      and\n        /* \"#utility.yul\":7365:7367   */\n      0x20\n        /* \"#utility.yul\":7350:7368   */\n      dup3\n      add\n        /* \"#utility.yul\":7343:7403   */\n      mstore\n        /* \"#utility.yul\":7419:7437   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7412:7446   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/Arcade.sol\":3134:3178  Refund(game_id, player, gi.registration_fee) */\n      mload\n      0x21e12a7cad0da5928167e1084ea4d5fdf8d9af66657a2543a9ac76a0ca081477\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":7297:7299   */\n      0x60\n        /* \"contracts/Arcade.sol\":3134:3178  Refund(game_id, player, gi.registration_fee) */\n      add\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":3210:3212  gi */\n      dup2\n        /* \"contracts/Arcade.sol\":3210:3229  gi.registration_fee */\n      0x05\n      add\n      sload\n        /* \"contracts/Arcade.sol\":3193:3195  gi */\n      dup3\n        /* \"contracts/Arcade.sol\":3193:3205  gi.total_fee */\n      0x08\n      add\n      0x00\n        /* \"contracts/Arcade.sol\":3193:3230  gi.total_fee -= (gi.registration_fee) */\n      dup3\n      dup3\n      sload\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":3245:3259  gi.fee[player] */\n      dup4\n      and\n        /* \"contracts/Arcade.sol\":3262:3263  0 */\n      0x00\n        /* \"contracts/Arcade.sol\":3245:3259  gi.fee[player] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3245:3251  gi.fee */\n      0x01\n      dup1\n      dup5\n      add\n        /* \"contracts/Arcade.sol\":3245:3259  gi.fee[player] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Arcade.sol\":3245:3263  gi.fee[player] = 0 */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":3277:3284  gi.paid */\n      0x02\n      dup7\n      add\n        /* \"contracts/Arcade.sol\":3277:3292  gi.paid[player] */\n      swap1\n      swap2\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/Arcade.sol\":3277:3296  gi.paid[player] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":3310:3325  gi.player_count */\n      0x03\n      dup5\n      add\n        /* \"contracts/Arcade.sol\":3310:3330  gi.player_count -= 1 */\n      dup1\n      sload\n        /* \"contracts/Arcade.sol\":3245:3251  gi.fee */\n      swap2\n      swap3\n        /* \"contracts/Arcade.sol\":3310:3325  gi.player_count */\n      swap1\n      swap2\n        /* \"contracts/Arcade.sol\":3310:3330  gi.player_count -= 1 */\n      tag_171\n      swap1\n        /* \"contracts/Arcade.sol\":3245:3251  gi.fee */\n      dup5\n      swap1\n        /* \"contracts/Arcade.sol\":3310:3330  gi.player_count -= 1 */\n      tag_170\n      jump\t// in\n    tag_171:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Arcade.sol\":2776:3341  if (gameData[game_id].exchange == false) {... */\n    tag_155:\n        /* \"contracts/Arcade.sol\":2700:3347  function refund(uint256 game_id, address player) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":2422:2694  function reconcile() public onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_176:\n        /* \"contracts/Arcade.sol\":2488:2509  address(this).balance */\n      selfbalance\n        /* \"contracts/Arcade.sol\":2524:2535  balance > 0 */\n      dup1\n      iszero\n        /* \"contracts/Arcade.sol\":2520:2688  if (balance > 0) {... */\n      tag_179\n      jumpi\n        /* \"contracts/Arcade.sol\":2552:2564  bool success */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      sload\n        /* \"contracts/Arcade.sol\":2570:2604  owner().call{ value: balance }(\"\") */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Arcade.sol\":2591:2598  balance */\n      dup4\n      swap1\n        /* \"contracts/Arcade.sol\":2552:2564  bool success */\n      dup4\n        /* \"contracts/Arcade.sol\":2570:2604  owner().call{ value: balance }(\"\") */\n      dup2\n        /* \"contracts/Arcade.sol\":2552:2564  bool success */\n      dup2\n        /* \"contracts/Arcade.sol\":2570:2604  owner().call{ value: balance }(\"\") */\n      dup2\n        /* \"contracts/Arcade.sol\":2591:2598  balance */\n      dup6\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      dup8\n        /* \"contracts/Arcade.sol\":2570:2604  owner().call{ value: balance }(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_184\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_183)\n    tag_184:\n      0x60\n      swap2\n      pop\n    tag_183:\n      pop\n        /* \"contracts/Arcade.sol\":2551:2604  (bool success, ) = owner().call{ value: balance }(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Arcade.sol\":2626:2633  success */\n      dup1\n        /* \"contracts/Arcade.sol\":2618:2677  require(success, \"Trophy King Arcade: Unable to transfer.\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_166\n      jump\t// in\n        /* \"contracts/Arcade.sol\":2520:2688  if (balance > 0) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1318:1319  _ */\n      pop\n        /* \"contracts/Arcade.sol\":2422:2694  function reconcile() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Arcade.sol\":4837:5667  function setWinner(uint256 game_id, address winner) public onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_190:\n        /* \"contracts/Arcade.sol\":4920:4937  gameData[game_id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":4920:4928  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":4920:4937  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":4920:4946  gameData[game_id].exchange */\n      sload\n      0xff\n      and\n        /* \"contracts/Arcade.sol\":4916:5632  if (gameData[game_id].exchange == false) {... */\n      tag_193\n      jumpi\n        /* \"contracts/Arcade.sol\":4980:4997  gameData[game_id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":4980:4988  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":4980:4997  gameData[game_id] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":4980:5009  gameData[game_id].fee[winner] */\n      dup7\n      and\n      dup6\n      mstore\n        /* \"contracts/Arcade.sol\":4980:5001  gameData[game_id].fee */\n      swap1\n      swap3\n      add\n        /* \"contracts/Arcade.sol\":4980:5009  gameData[game_id].fee[winner] */\n      dup2\n      mstore\n      swap2\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":4976:5010  Fee(gameData[game_id].fee[winner]) */\n      swap1\n      mload\n        /* \"#utility.yul\":7071:7096   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":4976:5010  Fee(gameData[game_id].fee[winner]) */\n      0x557809284da7314475b1582804ae28e5f1349efc1fe970ea25d50fce75eb4f43\n      swap2\n        /* \"#utility.yul\":7044:7062   */\n      add\n        /* \"contracts/Arcade.sol\":4976:5010  Fee(gameData[game_id].fee[winner]) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":5033:5050  gameData[game_id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":5033:5041  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":5033:5050  gameData[game_id] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":5033:5063  gameData[game_id].paid[winner] */\n      dup7\n      and\n      dup6\n      mstore\n        /* \"contracts/Arcade.sol\":5033:5055  gameData[game_id].paid */\n      0x02\n      add\n        /* \"contracts/Arcade.sol\":5033:5063  gameData[game_id].paid[winner] */\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":5033:5068  gameData[game_id].paid[winner] == 1 */\n      eq\n        /* \"contracts/Arcade.sol\":5025:5101  require(gameData[game_id].paid[winner] == 1, \"Not registered for this game\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5667:5669   */\n      0x20\n        /* \"contracts/Arcade.sol\":5025:5101  require(gameData[game_id].paid[winner] == 1, \"Not registered for this game\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5649:5670   */\n      mstore\n        /* \"#utility.yul\":5706:5708   */\n      0x1c\n        /* \"#utility.yul\":5686:5704   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5679:5709   */\n      mstore\n        /* \"#utility.yul\":5745:5775   */\n      0x4e6f74207265676973746572656420666f7220746869732067616d6500000000\n        /* \"#utility.yul\":5725:5743   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5718:5776   */\n      mstore\n        /* \"#utility.yul\":5793:5811   */\n      0x64\n      add\n        /* \"contracts/Arcade.sol\":5025:5101  require(gameData[game_id].paid[winner] == 1, \"Not registered for this game\") */\n      tag_110\n        /* \"#utility.yul\":5639:5817   */\n      jump\n        /* \"contracts/Arcade.sol\":5025:5101  require(gameData[game_id].paid[winner] == 1, \"Not registered for this game\") */\n    tag_195:\n        /* \"contracts/Arcade.sol\":5192:5200  decimals */\n      sload(0x02)\n        /* \"contracts/Arcade.sol\":5168:5182  fee_percentage */\n      sload(0x03)\n        /* \"contracts/Arcade.sol\":5116:5134  uint256 arcade_fee */\n      0x00\n        /* \"contracts/Arcade.sol\":5138:5155  gameData[game_id] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":5138:5146  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":5138:5155  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Arcade.sol\":5138:5165  gameData[game_id].total_fee */\n      0x08\n      add\n      sload\n        /* \"contracts/Arcade.sol\":5116:5134  uint256 arcade_fee */\n      swap1\n      swap3\n        /* \"contracts/Arcade.sol\":5192:5200  decimals */\n      swap2\n        /* \"contracts/Arcade.sol\":5186:5189  100 */\n      0x64\n      swap2\n        /* \"contracts/Arcade.sol\":5138:5182  gameData[game_id].total_fee * fee_percentage */\n      tag_198\n      swap2\n        /* \"contracts/Arcade.sol\":5168:5182  fee_percentage */\n      swap1\n        /* \"contracts/Arcade.sol\":5138:5182  gameData[game_id].total_fee * fee_percentage */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"contracts/Arcade.sol\":5137:5189  (gameData[game_id].total_fee * fee_percentage) / 100 */\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"contracts/Arcade.sol\":5137:5200  (gameData[game_id].total_fee * fee_percentage) / 100 / decimals */\n      tag_202\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_202:\n        /* \"contracts/Arcade.sol\":5214:5228  uint256 payout */\n      0x00\n        /* \"contracts/Arcade.sol\":5231:5248  gameData[game_id] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":5231:5239  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":5231:5248  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Arcade.sol\":5231:5258  gameData[game_id].total_fee */\n      0x08\n      add\n      sload\n        /* \"contracts/Arcade.sol\":5116:5200  uint256 arcade_fee = (gameData[game_id].total_fee * fee_percentage) / 100 / decimals */\n      swap2\n      swap3\n      pop\n        /* \"contracts/Arcade.sol\":5214:5228  uint256 payout */\n      swap1\n        /* \"contracts/Arcade.sol\":5231:5271  gameData[game_id].total_fee - arcade_fee */\n      tag_203\n      swap1\n        /* \"contracts/Arcade.sol\":5116:5200  uint256 arcade_fee = (gameData[game_id].total_fee * fee_percentage) / 100 / decimals */\n      dup4\n      swap1\n        /* \"contracts/Arcade.sol\":5231:5271  gameData[game_id].total_fee - arcade_fee */\n      tag_170\n      jump\t// in\n    tag_203:\n        /* \"contracts/Arcade.sol\":5214:5271  uint256 payout = gameData[game_id].total_fee - arcade_fee */\n      swap1\n      pop\n        /* \"contracts/Arcade.sol\":5312:5333  address(this).balance */\n      selfbalance\n        /* \"contracts/Arcade.sol\":5352:5377  contract_balance < payout */\n      dup2\n      dup2\n      lt\n        /* \"contracts/Arcade.sol\":5348:5437  if (contract_balance < payout) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/Arcade.sol\":5406:5422  contract_balance */\n      dup1\n        /* \"contracts/Arcade.sol\":5397:5422  payout = contract_balance */\n      swap2\n      pop\n        /* \"contracts/Arcade.sol\":5348:5437  if (contract_balance < payout) {... */\n    tag_204:\n        /* \"contracts/Arcade.sol\":5452:5464  bool success */\n      0x00\n        /* \"contracts/Arcade.sol\":5470:5476  winner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":5470:5481  winner.call */\n      and\n        /* \"contracts/Arcade.sol\":5490:5496  payout */\n      dup4\n        /* \"contracts/Arcade.sol\":5470:5502  winner.call{ value: payout }(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_208\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_207)\n    tag_208:\n      0x60\n      swap2\n      pop\n    tag_207:\n      pop\n        /* \"contracts/Arcade.sol\":5451:5502  (bool success, ) = winner.call{ value: payout }(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Arcade.sol\":5524:5531  success */\n      dup1\n        /* \"contracts/Arcade.sol\":5516:5575  require(success, \"Trophy King Arcade: Unable to transfer.\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_166\n      jump\t// in\n    tag_209:\n        /* \"contracts/Arcade.sol\":5607:5621  Payout(payout) */\n      mload(0x40)\n        /* \"#utility.yul\":7071:7096   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":5607:5621  Payout(payout) */\n      0x22427047e1a674a9aff59700a2c8d00ea96e017ddf9236690bdedf1f21f28d9d\n      swap1\n        /* \"#utility.yul\":7059:7061   */\n      0x20\n        /* \"#utility.yul\":7044:7062   */\n      add\n        /* \"contracts/Arcade.sol\":5607:5621  Payout(payout) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":4916:5632  if (gameData[game_id].exchange == false) {... */\n      pop\n      pop\n      pop\n      pop\n    tag_193:\n        /* \"contracts/Arcade.sol\":5642:5660  closeGame(game_id) */\n      tag_155\n        /* \"contracts/Arcade.sol\":5652:5659  game_id */\n      dup3\n        /* \"contracts/Arcade.sol\":5642:5651  closeGame */\n      tag_45\n        /* \"contracts/Arcade.sol\":5642:5660  closeGame(game_id) */\n      jump\t// in\n        /* \"contracts/Arcade.sol\":2174:2416  function placePlayer(uint256 game_id, address player) public onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_216:\n        /* \"contracts/Arcade.sol\":2263:2280  gameData[game_id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2263:2271  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":2263:2280  gameData[game_id] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":2263:2294  gameData[game_id].seats[player] */\n      dup7\n      and\n      dup6\n      mstore\n        /* \"contracts/Arcade.sol\":2263:2286  gameData[game_id].seats */\n      0x06\n      add\n        /* \"contracts/Arcade.sol\":2263:2294  gameData[game_id].seats[player] */\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":2263:2299  gameData[game_id].seats[player] != 1 */\n      eq\n      iszero\n        /* \"contracts/Arcade.sol\":2255:2319  require(gameData[game_id].seats[player] != 1, \"Already seated.\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6432:6434   */\n      0x20\n        /* \"contracts/Arcade.sol\":2255:2319  require(gameData[game_id].seats[player] != 1, \"Already seated.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6414:6435   */\n      mstore\n        /* \"#utility.yul\":6471:6473   */\n      0x0f\n        /* \"#utility.yul\":6451:6469   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6444:6474   */\n      mstore\n      shl(0x89, 0x20b63932b0b23c9039b2b0ba32b217)\n        /* \"#utility.yul\":6490:6508   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6483:6528   */\n      mstore\n        /* \"#utility.yul\":6545:6563   */\n      0x64\n      add\n        /* \"contracts/Arcade.sol\":2255:2319  require(gameData[game_id].seats[player] != 1, \"Already seated.\") */\n      tag_110\n        /* \"#utility.yul\":6404:6569   */\n      jump\n        /* \"contracts/Arcade.sol\":2255:2319  require(gameData[game_id].seats[player] != 1, \"Already seated.\") */\n    tag_219:\n        /* \"contracts/Arcade.sol\":2330:2347  gameData[game_id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":2364:2365  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":2330:2347  gameData[game_id] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":2330:2361  gameData[game_id].seats[player] */\n      dup7\n      and\n      dup1\n      dup7\n      mstore\n        /* \"contracts/Arcade.sol\":2330:2353  gameData[game_id].seats */\n      0x06\n      swap1\n      swap2\n      add\n        /* \"contracts/Arcade.sol\":2330:2361  gameData[game_id].seats[player] */\n      dup4\n      mstore\n      swap4\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":2330:2365  gameData[game_id].seats[player] = 1 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/Arcade.sol\":2381:2409  PlacePlayer(player, game_id) */\n      dup2\n      mload\n        /* \"#utility.yul\":1952:2003   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2019:2037   */\n      dup3\n      add\n        /* \"#utility.yul\":2012:2046   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Arcade.sol\":2381:2409  PlacePlayer(player, game_id) */\n      0x9f2deefff0a36949d580cdd4ba9959b4a94786e786bad5650001b58b625fbbb1\n      swap2\n        /* \"#utility.yul\":1925:1943   */\n      add\n        /* \"contracts/Arcade.sol\":2381:2409  PlacePlayer(player, game_id) */\n      tag_133\n        /* \"#utility.yul\":1907:2052   */\n      jump\n        /* \"contracts/Arcade.sol\":3831:4441  function register(uint256 game_id) public payable {... */\n    tag_90:\n        /* \"contracts/Arcade.sol\":3899:3916  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3899:3907  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":3899:3916  gameData[game_id] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Arcade.sol\":3923:3933  msg.sender */\n      caller\n        /* \"contracts/Arcade.sol\":3899:3934  gameData[game_id].seats[msg.sender] */\n      dup6\n      mstore\n        /* \"contracts/Arcade.sol\":3899:3922  gameData[game_id].seats */\n      0x06\n      add\n        /* \"contracts/Arcade.sol\":3899:3934  gameData[game_id].seats[msg.sender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":3899:3939  gameData[game_id].seats[msg.sender] == 1 */\n      eq\n        /* \"contracts/Arcade.sol\":3891:3957  require(gameData[game_id].seats[msg.sender] == 1, \"Unauthorized.\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4623:4625   */\n      0x20\n        /* \"contracts/Arcade.sol\":3891:3957  require(gameData[game_id].seats[msg.sender] == 1, \"Unauthorized.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4605:4626   */\n      mstore\n        /* \"#utility.yul\":4662:4664   */\n      0x0d\n        /* \"#utility.yul\":4642:4660   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4635:4665   */\n      mstore\n      shl(0x99, 0x2ab730baba3437b934bd32b217)\n        /* \"#utility.yul\":4681:4699   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4674:4717   */\n      mstore\n        /* \"#utility.yul\":4734:4752   */\n      0x64\n      add\n        /* \"contracts/Arcade.sol\":3891:3957  require(gameData[game_id].seats[msg.sender] == 1, \"Unauthorized.\") */\n      tag_110\n        /* \"#utility.yul\":4595:4758   */\n      jump\n        /* \"contracts/Arcade.sol\":3891:3957  require(gameData[game_id].seats[msg.sender] == 1, \"Unauthorized.\") */\n    tag_225:\n        /* \"contracts/Arcade.sol\":3975:3992  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3975:3983  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":3975:3992  gameData[game_id] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Arcade.sol\":3975:3999  gameData[game_id].status */\n      0x07\n      add\n      sload\n        /* \"contracts/Arcade.sol\":3975:4004  gameData[game_id].status == 1 */\n      eq\n        /* \"contracts/Arcade.sol\":3967:4021  require(gameData[game_id].status == 1, \"Game closed.\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5326:5328   */\n      0x20\n        /* \"contracts/Arcade.sol\":3967:4021  require(gameData[game_id].status == 1, \"Game closed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5308:5329   */\n      mstore\n        /* \"#utility.yul\":5365:5367   */\n      0x0c\n        /* \"#utility.yul\":5345:5363   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5338:5368   */\n      mstore\n      shl(0xa1, 0x23b0b6b29031b637b9b2b217)\n        /* \"#utility.yul\":5384:5402   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5377:5419   */\n      mstore\n        /* \"#utility.yul\":5436:5454   */\n      0x64\n      add\n        /* \"contracts/Arcade.sol\":3967:4021  require(gameData[game_id].status == 1, \"Game closed.\") */\n      tag_110\n        /* \"#utility.yul\":5298:5460   */\n      jump\n        /* \"contracts/Arcade.sol\":3967:4021  require(gameData[game_id].status == 1, \"Game closed.\") */\n    tag_228:\n        /* \"contracts/Arcade.sol\":4072:4089  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":4072:4080  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":4072:4089  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":4072:4102  gameData[game_id].player_count */\n      0x03\n      dup2\n      add\n      sload\n        /* \"contracts/Arcade.sol\":4039:4069  gameData[game_id].player_limit */\n      0x04\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Arcade.sol\":4039:4102  gameData[game_id].player_limit > gameData[game_id].player_count */\n      gt\n        /* \"contracts/Arcade.sol\":4031:4129  require(gameData[game_id].player_limit > gameData[game_id].player_count, \"Game full.  Try again.\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6776:6778   */\n      0x20\n        /* \"contracts/Arcade.sol\":4031:4129  require(gameData[game_id].player_limit > gameData[game_id].player_count, \"Game full.  Try again.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6758:6779   */\n      mstore\n        /* \"#utility.yul\":6815:6817   */\n      0x16\n        /* \"#utility.yul\":6795:6813   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6788:6818   */\n      mstore\n      shl(0x51, 0x23b0b6b290333ab6361710102a393c9030b3b0b4b717)\n        /* \"#utility.yul\":6834:6852   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6827:6879   */\n      mstore\n        /* \"#utility.yul\":6896:6914   */\n      0x64\n      add\n        /* \"contracts/Arcade.sol\":4031:4129  require(gameData[game_id].player_limit > gameData[game_id].player_count, \"Game full.  Try again.\") */\n      tag_110\n        /* \"#utility.yul\":6748:6920   */\n      jump\n        /* \"contracts/Arcade.sol\":4031:4129  require(gameData[game_id].player_limit > gameData[game_id].player_count, \"Game full.  Try again.\") */\n    tag_231:\n        /* \"contracts/Arcade.sol\":4161:4178  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":4161:4169  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":4161:4178  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":4161:4195  gameData[game_id].registration_fee */\n      0x05\n      add\n      sload\n        /* \"contracts/Arcade.sol\":4147:4156  msg.value */\n      callvalue\n        /* \"contracts/Arcade.sol\":4147:4196  msg.value == (gameData[game_id].registration_fee) */\n      eq\n        /* \"contracts/Arcade.sol\":4139:4229  require(msg.value == (gameData[game_id].registration_fee), \"Must match registration fee.\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3908:3910   */\n      0x20\n        /* \"contracts/Arcade.sol\":4139:4229  require(msg.value == (gameData[game_id].registration_fee), \"Must match registration fee.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3890:3911   */\n      mstore\n        /* \"#utility.yul\":3947:3949   */\n      0x1c\n        /* \"#utility.yul\":3927:3945   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3920:3950   */\n      mstore\n        /* \"#utility.yul\":3986:4016   */\n      0x4d757374206d6174636820726567697374726174696f6e206665652e00000000\n        /* \"#utility.yul\":3966:3984   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3959:4017   */\n      mstore\n        /* \"#utility.yul\":4034:4052   */\n      0x64\n      add\n        /* \"contracts/Arcade.sol\":4139:4229  require(msg.value == (gameData[game_id].registration_fee), \"Must match registration fee.\") */\n      tag_110\n        /* \"#utility.yul\":3880:4058   */\n      jump\n        /* \"contracts/Arcade.sol\":4139:4229  require(msg.value == (gameData[game_id].registration_fee), \"Must match registration fee.\") */\n    tag_234:\n        /* \"contracts/Arcade.sol\":4247:4264  gameData[game_id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":4247:4255  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":4247:4264  gameData[game_id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Arcade.sol\":4270:4280  msg.sender */\n      caller\n        /* \"contracts/Arcade.sol\":4247:4281  gameData[game_id].paid[msg.sender] */\n      dup5\n      mstore\n        /* \"contracts/Arcade.sol\":4247:4269  gameData[game_id].paid */\n      0x02\n      add\n        /* \"contracts/Arcade.sol\":4247:4281  gameData[game_id].paid[msg.sender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Arcade.sol\":4247:4286  gameData[game_id].paid[msg.sender] == 0 */\n      iszero\n        /* \"contracts/Arcade.sol\":4239:4310  require(gameData[game_id].paid[msg.sender] == 0, \"Already registered.\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3153:3155   */\n      0x20\n        /* \"contracts/Arcade.sol\":4239:4310  require(gameData[game_id].paid[msg.sender] == 0, \"Already registered.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3135:3156   */\n      mstore\n        /* \"#utility.yul\":3192:3194   */\n      0x13\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3165:3195   */\n      mstore\n      shl(0x69, 0x20b63932b0b23c903932b3b4b9ba32b932b217)\n        /* \"#utility.yul\":3211:3229   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3204:3253   */\n      mstore\n        /* \"#utility.yul\":3270:3288   */\n      0x64\n      add\n        /* \"contracts/Arcade.sol\":4239:4310  require(gameData[game_id].paid[msg.sender] == 0, \"Already registered.\") */\n      tag_110\n        /* \"#utility.yul\":3125:3294   */\n      jump\n        /* \"contracts/Arcade.sol\":4239:4310  require(gameData[game_id].paid[msg.sender] == 0, \"Already registered.\") */\n    tag_237:\n        /* \"contracts/Arcade.sol\":4361:4362  0 */\n      0x00\n        /* \"contracts/Arcade.sol\":4328:4345  gameData[game_id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":4328:4336  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":4328:4345  gameData[game_id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Arcade.sol\":4328:4358  gameData[game_id].player_limit */\n      0x04\n      add\n      sload\n        /* \"contracts/Arcade.sol\":4320:4382  require(gameData[game_id].player_limit > 0, \"Game not found.\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2809:2811   */\n      0x20\n        /* \"contracts/Arcade.sol\":4320:4382  require(gameData[game_id].player_limit > 0, \"Game not found.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2791:2812   */\n      mstore\n        /* \"#utility.yul\":2848:2850   */\n      0x0f\n        /* \"#utility.yul\":2828:2846   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2821:2851   */\n      mstore\n      shl(0x89, 0x23b0b6b2903737ba103337bab73217)\n        /* \"#utility.yul\":2867:2885   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2860:2905   */\n      mstore\n        /* \"#utility.yul\":2922:2940   */\n      0x64\n      add\n        /* \"contracts/Arcade.sol\":4320:4382  require(gameData[game_id].player_limit > 0, \"Game not found.\") */\n      tag_110\n        /* \"#utility.yul\":2781:2946   */\n      jump\n        /* \"contracts/Arcade.sol\":4320:4382  require(gameData[game_id].player_limit > 0, \"Game not found.\") */\n    tag_240:\n        /* \"contracts/Arcade.sol\":4393:4434  _register(game_id, msg.sender, msg.value) */\n      tag_179\n        /* \"contracts/Arcade.sol\":4403:4410  game_id */\n      dup2\n        /* \"contracts/Arcade.sol\":4412:4422  msg.sender */\n      caller\n        /* \"contracts/Arcade.sol\":4424:4433  msg.value */\n      callvalue\n        /* \"contracts/Arcade.sol\":4393:4402  _register */\n      tag_244\n        /* \"contracts/Arcade.sol\":4393:4434  _register(game_id, msg.sender, msg.value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3501:3503   */\n      0x20\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3483:3504   */\n      mstore\n        /* \"#utility.yul\":3540:3542   */\n      0x26\n        /* \"#utility.yul\":3520:3538   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3513:3543   */\n      mstore\n        /* \"#utility.yul\":3579:3613   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3559:3577   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3552:3614   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3630:3648   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3623:3659   */\n      mstore\n        /* \"#utility.yul\":3676:3695   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_110\n        /* \"#utility.yul\":3473:3701   */\n      jump\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_251:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_179\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_148\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/Arcade.sol\":4732:4831  function setMarketMaker(address incoming) public onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_258:\n        /* \"contracts/Arcade.sol\":4801:4813  market_maker */\n      0x04\n        /* \"contracts/Arcade.sol\":4801:4824  market_maker = incoming */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":4732:4831  function setMarketMaker(address incoming) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Arcade.sol\":1449:1896  function createGame(uint256 game_id, uint256 registration_fee, uint256 player_limit, bool exchange) public onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.6.0/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_264:\n        /* \"contracts/Arcade.sol\":1576:1593  gameData[game_id] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":1603:1604  1 */\n      0x01\n        /* \"contracts/Arcade.sol\":1576:1593  gameData[game_id] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Arcade.sol\":1576:1600  gameData[game_id].status */\n      0x07\n      dup2\n      add\n        /* \"contracts/Arcade.sol\":1576:1604  gameData[game_id].status = 1 */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Arcade.sol\":1614:1641  gameData[game_id].total_fee */\n      0x08\n      dup4\n      add\n        /* \"contracts/Arcade.sol\":1614:1645  gameData[game_id].total_fee = 0 */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":1655:1689  gameData[game_id].registration_fee */\n      0x05\n      dup4\n      add\n        /* \"contracts/Arcade.sol\":1655:1708  gameData[game_id].registration_fee = registration_fee */\n      dup8\n      swap1\n      sstore\n      0x03\n        /* \"contracts/Arcade.sol\":1718:1748  gameData[game_id].player_count */\n      dup4\n      add\n        /* \"contracts/Arcade.sol\":1718:1752  gameData[game_id].player_count = 0 */\n      swap4\n      swap1\n      swap4\n      sstore\n      0x04\n        /* \"contracts/Arcade.sol\":1762:1792  gameData[game_id].player_limit */\n      dup3\n      add\n        /* \"contracts/Arcade.sol\":1762:1807  gameData[game_id].player_limit = player_limit */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":1817:1854  gameData[game_id].exchange = exchange */\n      dup2\n      sload\n      not(0xff)\n      and\n      dup5\n      iszero\n      iszero\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Arcade.sol\":1870:1889  CreateGame(game_id) */\n      swap1\n      mload\n        /* \"#utility.yul\":7071:7096   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":1870:1889  CreateGame(game_id) */\n      0x9e5237c6a8bb45df74799cf138ebda4fed0574bed906da41387acdc4a3cbe3d8\n      swap2\n        /* \"#utility.yul\":7044:7062   */\n      add\n        /* \"contracts/Arcade.sol\":1870:1889  CreateGame(game_id) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Arcade.sol\":1449:1896  function createGame(uint256 game_id, uint256 registration_fee, uint256 player_limit, bool exchange) public onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_148:\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Arcade.sol\":3353:3825  function _register(uint256 game_id, address player_address, uint256 amount) internal {... */\n    tag_244:\n        /* \"contracts/Arcade.sol\":3448:3467  GameInfo storage gi */\n      0x00\n        /* \"contracts/Arcade.sol\":3470:3487  gameData[game_id] */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3470:3478  gameData */\n      0x01\n        /* \"contracts/Arcade.sol\":3470:3487  gameData[game_id] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"contracts/Arcade.sol\":3498:3513  gi.player_count */\n      0x03\n      dup2\n      add\n        /* \"contracts/Arcade.sol\":3498:3518  gi.player_count += 1 */\n      dup1\n      sload\n        /* \"contracts/Arcade.sol\":3470:3487  gameData[game_id] */\n      swap2\n      swap4\n        /* \"contracts/Arcade.sol\":3498:3513  gi.player_count */\n      swap1\n      swap2\n        /* \"contracts/Arcade.sol\":3498:3518  gi.player_count += 1 */\n      tag_271\n      swap1\n        /* \"contracts/Arcade.sol\":3470:3478  gameData */\n      dup5\n      swap1\n        /* \"contracts/Arcade.sol\":3498:3518  gi.player_count += 1 */\n      tag_272\n      jump\t// in\n    tag_271:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":3528:3550  gi.fee[player_address] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3528:3534  gi.fee */\n      0x01\n      dup1\n      dup4\n      add\n        /* \"contracts/Arcade.sol\":3528:3550  gi.fee[player_address] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Arcade.sol\":3528:3559  gi.fee[player_address] = amount */\n      dup7\n      swap1\n      sstore\n        /* \"contracts/Arcade.sol\":3569:3576  gi.paid */\n      0x02\n      dup6\n      add\n        /* \"contracts/Arcade.sol\":3569:3592  gi.paid[player_address] */\n      swap1\n      swap2\n      mstore\n      dup3\n      keccak256\n        /* \"contracts/Arcade.sol\":3569:3596  gi.paid[player_address] = 1 */\n      sstore\n        /* \"contracts/Arcade.sol\":3606:3618  gi.total_fee */\n      0x08\n      dup3\n      add\n        /* \"contracts/Arcade.sol\":3606:3628  gi.total_fee += amount */\n      dup1\n      sload\n        /* \"contracts/Arcade.sol\":3553:3559  amount */\n      dup5\n      swap3\n        /* \"contracts/Arcade.sol\":3528:3550  gi.fee[player_address] */\n      swap1\n        /* \"contracts/Arcade.sol\":3606:3628  gi.total_fee += amount */\n      tag_273\n      swap1\n        /* \"contracts/Arcade.sol\":3553:3559  amount */\n      dup5\n      swap1\n        /* \"contracts/Arcade.sol\":3606:3628  gi.total_fee += amount */\n      tag_272\n      jump\t// in\n    tag_273:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Arcade.sol\":3658:3670  market_maker */\n      sload(0x04)\n        /* \"contracts/Arcade.sol\":3658:3696  market_maker.call{ value: amount }(\"\") */\n      mload(0x40)\n        /* \"contracts/Arcade.sol\":3640:3652  bool success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Arcade.sol\":3658:3670  market_maker */\n      and\n      swap1\n        /* \"contracts/Arcade.sol\":3684:3690  amount */\n      dup5\n      swap1\n        /* \"contracts/Arcade.sol\":3640:3652  bool success */\n      dup4\n        /* \"contracts/Arcade.sol\":3658:3696  market_maker.call{ value: amount }(\"\") */\n      dup2\n        /* \"contracts/Arcade.sol\":3640:3652  bool success */\n      dup2\n        /* \"contracts/Arcade.sol\":3658:3696  market_maker.call{ value: amount }(\"\") */\n      dup2\n        /* \"contracts/Arcade.sol\":3684:3690  amount */\n      dup6\n        /* \"contracts/Arcade.sol\":3658:3670  market_maker */\n      dup8\n        /* \"contracts/Arcade.sol\":3658:3696  market_maker.call{ value: amount }(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_277\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_276)\n    tag_277:\n      0x60\n      swap2\n      pop\n    tag_276:\n      pop\n        /* \"contracts/Arcade.sol\":3639:3696  (bool success, ) = market_maker.call{ value: amount }(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/Arcade.sol\":3714:3721  success */\n      dup1\n        /* \"contracts/Arcade.sol\":3706:3765  require(success, \"Trophy King Arcade: Unable to transfer.\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_166\n      jump\t// in\n    tag_278:\n        /* \"contracts/Arcade.sol\":3789:3818  Register(msg.sender, game_id) */\n      mload(0x40)\n        /* \"#utility.yul\":7071:7096   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/Arcade.sol\":3798:3808  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Arcade.sol\":3789:3818  Register(msg.sender, game_id) */\n      0x7dc6ab80cc84c043b7b8d4fcafc802187470087f7ea7fccd2e17aecd0256a1\n      swap1\n        /* \"#utility.yul\":7059:7061   */\n      0x20\n        /* \"#utility.yul\":7044:7062   */\n      add\n        /* \"contracts/Arcade.sol\":3789:3818  Register(msg.sender, game_id) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Arcade.sol\":3353:3825  function _register(uint256 game_id, address player_address, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_282:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_284:\n        /* \"#utility.yul\":63:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:388   */\n    tag_94:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_286:\n        /* \"#utility.yul\":353:382   */\n      tag_287\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_282\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":343:382   */\n      swap4\n        /* \"#utility.yul\":262:388   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":393:583   */\n    tag_27:\n        /* \"#utility.yul\":452:458   */\n      0x00\n        /* \"#utility.yul\":505:507   */\n      0x20\n        /* \"#utility.yul\":493:502   */\n      dup3\n        /* \"#utility.yul\":484:491   */\n      dup5\n        /* \"#utility.yul\":480:503   */\n      sub\n        /* \"#utility.yul\":476:508   */\n      slt\n        /* \"#utility.yul\":473:475   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":526:532   */\n      dup1\n        /* \"#utility.yul\":518:524   */\n      dup2\n        /* \"#utility.yul\":511:533   */\n      revert\n        /* \"#utility.yul\":473:475   */\n    tag_289:\n      pop\n        /* \"#utility.yul\":554:577   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":463:583   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":588:852   */\n    tag_40:\n        /* \"#utility.yul\":656:662   */\n      0x00\n        /* \"#utility.yul\":664:670   */\n      dup1\n        /* \"#utility.yul\":717:719   */\n      0x40\n        /* \"#utility.yul\":705:714   */\n      dup4\n        /* \"#utility.yul\":696:703   */\n      dup6\n        /* \"#utility.yul\":692:715   */\n      sub\n        /* \"#utility.yul\":688:720   */\n      slt\n        /* \"#utility.yul\":685:687   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":738:744   */\n      dup1\n        /* \"#utility.yul\":730:736   */\n      dup2\n        /* \"#utility.yul\":723:745   */\n      revert\n        /* \"#utility.yul\":685:687   */\n    tag_291:\n        /* \"#utility.yul\":779:788   */\n      dup3\n        /* \"#utility.yul\":766:789   */\n      calldataload\n        /* \"#utility.yul\":756:789   */\n      swap2\n      pop\n        /* \"#utility.yul\":808:846   */\n      tag_292\n        /* \"#utility.yul\":842:844   */\n      0x20\n        /* \"#utility.yul\":831:840   */\n      dup5\n        /* \"#utility.yul\":827:845   */\n      add\n        /* \"#utility.yul\":808:846   */\n      tag_282\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":798:846   */\n      swap1\n      pop\n        /* \"#utility.yul\":675:852   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":857:1355   */\n    tag_103:\n        /* \"#utility.yul\":940:946   */\n      0x00\n        /* \"#utility.yul\":948:954   */\n      dup1\n        /* \"#utility.yul\":956:962   */\n      0x00\n        /* \"#utility.yul\":964:970   */\n      dup1\n        /* \"#utility.yul\":1017:1020   */\n      0x80\n        /* \"#utility.yul\":1005:1014   */\n      dup6\n        /* \"#utility.yul\":996:1003   */\n      dup8\n        /* \"#utility.yul\":992:1015   */\n      sub\n        /* \"#utility.yul\":988:1021   */\n      slt\n        /* \"#utility.yul\":985:987   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1031:1037   */\n      dup3\n        /* \"#utility.yul\":1024:1046   */\n      revert\n        /* \"#utility.yul\":985:987   */\n    tag_294:\n        /* \"#utility.yul\":1080:1089   */\n      dup5\n        /* \"#utility.yul\":1067:1090   */\n      calldataload\n        /* \"#utility.yul\":1057:1090   */\n      swap4\n      pop\n        /* \"#utility.yul\":1137:1139   */\n      0x20\n        /* \"#utility.yul\":1126:1135   */\n      dup6\n        /* \"#utility.yul\":1122:1140   */\n      add\n        /* \"#utility.yul\":1109:1141   */\n      calldataload\n        /* \"#utility.yul\":1099:1141   */\n      swap3\n      pop\n        /* \"#utility.yul\":1188:1190   */\n      0x40\n        /* \"#utility.yul\":1177:1186   */\n      dup6\n        /* \"#utility.yul\":1173:1191   */\n      add\n        /* \"#utility.yul\":1160:1192   */\n      calldataload\n        /* \"#utility.yul\":1150:1192   */\n      swap2\n      pop\n        /* \"#utility.yul\":1242:1244   */\n      0x60\n        /* \"#utility.yul\":1231:1240   */\n      dup6\n        /* \"#utility.yul\":1227:1245   */\n      add\n        /* \"#utility.yul\":1214:1246   */\n      calldataload\n        /* \"#utility.yul\":1289:1294   */\n      dup1\n        /* \"#utility.yul\":1282:1295   */\n      iszero\n        /* \"#utility.yul\":1275:1296   */\n      iszero\n        /* \"#utility.yul\":1268:1273   */\n      dup2\n        /* \"#utility.yul\":1265:1297   */\n      eq\n        /* \"#utility.yul\":1255:1257   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":1316:1322   */\n      dup2\n        /* \"#utility.yul\":1308:1314   */\n      dup3\n        /* \"#utility.yul\":1301:1323   */\n      revert\n        /* \"#utility.yul\":1255:1257   */\n    tag_295:\n        /* \"#utility.yul\":975:1355   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4763:5119   */\n    tag_111:\n        /* \"#utility.yul\":4965:4967   */\n      0x20\n        /* \"#utility.yul\":4947:4968   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4984:5002   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4977:5007   */\n      mstore\n        /* \"#utility.yul\":5043:5077   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5038:5040   */\n      0x40\n        /* \"#utility.yul\":5023:5041   */\n      dup3\n      add\n        /* \"#utility.yul\":5016:5078   */\n      mstore\n        /* \"#utility.yul\":5110:5112   */\n      0x60\n        /* \"#utility.yul\":5095:5113   */\n      add\n      swap1\n        /* \"#utility.yul\":4937:5119   */\n      jump\t// out\n        /* \"#utility.yul\":5822:6225   */\n    tag_166:\n        /* \"#utility.yul\":6024:6026   */\n      0x20\n        /* \"#utility.yul\":6006:6027   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6063:6065   */\n      0x27\n        /* \"#utility.yul\":6043:6061   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6036:6066   */\n      mstore\n        /* \"#utility.yul\":6102:6136   */\n      0x54726f706879204b696e67204172636164653a20556e61626c6520746f207472\n        /* \"#utility.yul\":6097:6099   */\n      0x40\n        /* \"#utility.yul\":6082:6100   */\n      dup3\n      add\n        /* \"#utility.yul\":6075:6137   */\n      mstore\n      shl(0xc9, 0x30b739b332b917)\n        /* \"#utility.yul\":6168:6170   */\n      0x60\n        /* \"#utility.yul\":6153:6171   */\n      dup3\n      add\n        /* \"#utility.yul\":6146:6183   */\n      mstore\n        /* \"#utility.yul\":6215:6218   */\n      0x80\n        /* \"#utility.yul\":6200:6219   */\n      add\n      swap1\n        /* \"#utility.yul\":5996:6225   */\n      jump\t// out\n        /* \"#utility.yul\":7457:7585   */\n    tag_272:\n        /* \"#utility.yul\":7497:7500   */\n      0x00\n        /* \"#utility.yul\":7528:7529   */\n      dup3\n        /* \"#utility.yul\":7524:7530   */\n      not\n        /* \"#utility.yul\":7521:7522   */\n      dup3\n        /* \"#utility.yul\":7518:7531   */\n      gt\n        /* \"#utility.yul\":7515:7517   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":7534:7552   */\n      tag_316\n      tag_317\n      jump\t// in\n    tag_316:\n      pop\n        /* \"#utility.yul\":7570:7579   */\n      add\n      swap1\n        /* \"#utility.yul\":7505:7585   */\n      jump\t// out\n        /* \"#utility.yul\":7590:7807   */\n    tag_201:\n        /* \"#utility.yul\":7630:7631   */\n      0x00\n        /* \"#utility.yul\":7656:7657   */\n      dup3\n        /* \"#utility.yul\":7646:7648   */\n      tag_319\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7681:7712   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7735:7739   */\n      0x12\n        /* \"#utility.yul\":7732:7733   */\n      0x04\n        /* \"#utility.yul\":7725:7740   */\n      mstore\n        /* \"#utility.yul\":7763:7767   */\n      0x24\n        /* \"#utility.yul\":7688:7689   */\n      dup2\n        /* \"#utility.yul\":7753:7768   */\n      revert\n        /* \"#utility.yul\":7646:7648   */\n    tag_319:\n      pop\n        /* \"#utility.yul\":7792:7801   */\n      div\n      swap1\n        /* \"#utility.yul\":7636:7807   */\n      jump\t// out\n        /* \"#utility.yul\":7812:7980   */\n    tag_199:\n        /* \"#utility.yul\":7852:7859   */\n      0x00\n        /* \"#utility.yul\":7918:7919   */\n      dup2\n        /* \"#utility.yul\":7914:7915   */\n      0x00\n        /* \"#utility.yul\":7910:7916   */\n      not\n        /* \"#utility.yul\":7906:7920   */\n      div\n        /* \"#utility.yul\":7903:7904   */\n      dup4\n        /* \"#utility.yul\":7900:7921   */\n      gt\n        /* \"#utility.yul\":7895:7896   */\n      dup3\n        /* \"#utility.yul\":7888:7897   */\n      iszero\n        /* \"#utility.yul\":7881:7898   */\n      iszero\n        /* \"#utility.yul\":7877:7922   */\n      and\n        /* \"#utility.yul\":7874:7876   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":7925:7943   */\n      tag_322\n      tag_317\n      jump\t// in\n    tag_322:\n      pop\n        /* \"#utility.yul\":7965:7974   */\n      mul\n      swap1\n        /* \"#utility.yul\":7864:7980   */\n      jump\t// out\n        /* \"#utility.yul\":7985:8110   */\n    tag_170:\n        /* \"#utility.yul\":8025:8029   */\n      0x00\n        /* \"#utility.yul\":8053:8054   */\n      dup3\n        /* \"#utility.yul\":8050:8051   */\n      dup3\n        /* \"#utility.yul\":8047:8055   */\n      lt\n        /* \"#utility.yul\":8044:8046   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":8058:8076   */\n      tag_325\n      tag_317\n      jump\t// in\n    tag_325:\n      pop\n        /* \"#utility.yul\":8095:8104   */\n      sub\n      swap1\n        /* \"#utility.yul\":8034:8110   */\n      jump\t// out\n        /* \"#utility.yul\":8115:8242   */\n    tag_317:\n        /* \"#utility.yul\":8176:8186   */\n      0x4e487b71\n        /* \"#utility.yul\":8171:8174   */\n      0xe0\n        /* \"#utility.yul\":8167:8187   */\n      shl\n        /* \"#utility.yul\":8164:8165   */\n      0x00\n        /* \"#utility.yul\":8157:8188   */\n      mstore\n        /* \"#utility.yul\":8207:8211   */\n      0x11\n        /* \"#utility.yul\":8204:8205   */\n      0x04\n        /* \"#utility.yul\":8197:8212   */\n      mstore\n        /* \"#utility.yul\":8231:8235   */\n      0x24\n        /* \"#utility.yul\":8228:8229   */\n      0x00\n        /* \"#utility.yul\":8221:8236   */\n      revert\n\n    auxdata: 0xa2646970667358221220c6ac00f6dab659d685a6a18a6f9a4e4f0fa3ecef928cb05db29ebc098d7b4dcb64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a764000060025534801561001c57600080fd5b5061002633610049565b67016345785d8a0000600355600480546001600160a01b03191633179055610099565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611309806100a86000396000f3fe6080604052600436106101135760003560e01c80638da5cb5b116100a0578063ccaf237f11610064578063ccaf237f146102d9578063f207564e1461035c578063f2fde38b1461036f578063f54c42d71461038f578063fc3af0d6146103af57600080fd5b80638da5cb5b146102505780638f0d7e351461026e5780639c62368314610283578063b9888d89146102a3578063c46ed45a146102c357600080fd5b80632d6ef310116100e75780632d6ef3101461019a578063313ce567146101ba578063715018a6146101e357806375ca7603146101f85780637ad226dc1461023057600080fd5b8062f5544f14610118578063248a55a11461013a5780632ac5016f1461015a5780632ba671001461017a575b600080fd5b34801561012457600080fd5b5061013861013336600461114c565b6103cf565b005b34801561014657600080fd5b5061013861015536600461114c565b610453565b34801561016657600080fd5b5061013861017536600461114c565b6104e7565b34801561018657600080fd5b50610138610195366004611164565b610516565b3480156101a657600080fd5b506101386101b536600461114c565b6105a0565b3480156101c657600080fd5b506101d060025481565b6040519081526020015b60405180910390f35b3480156101ef57600080fd5b50610138610610565b34801561020457600080fd5b50600454610218906001600160a01b031681565b6040516001600160a01b0390911681526020016101da565b34801561023c57600080fd5b5061013861024b366004611164565b610646565b34801561025c57600080fd5b506000546001600160a01b0316610218565b34801561027a57600080fd5b50610138610834565b34801561028f57600080fd5b5061013861029e366004611164565b6108db565b3480156102af57600080fd5b506101386102be366004611164565b610b06565b3480156102cf57600080fd5b506101d060035481565b3480156102e557600080fd5b5061032d6102f436600461114c565b60016020526000908152604090208054600382015460048301546005840154600785015460089095015460ff9094169492939192909186565b6040805196151587526020870195909552938501929092526060840152608083015260a082015260c0016101da565b61013861036a36600461114c565b610bf6565b34801561037b57600080fd5b5061013861038a36600461112b565b610e1c565b34801561039b57600080fd5b506101386103aa36600461112b565b610eb4565b3480156103bb57600080fd5b506101386103ca36600461118f565b610f00565b6000546001600160a01b031633146104025760405162461bcd60e51b81526004016103f9906111d3565b60405180910390fd5b60008181526001602081905260409182902060070155517f651a9760985edc53055bf2462cb4437b9be3de87aa3eecf2c05782e8b58eba19906104489083815260200190565b60405180910390a150565b6000546001600160a01b0316331461047d5760405162461bcd60e51b81526004016103f9906111d3565b600081815260016020526040808220805460ff191681556003810183905560048101839055600581018390556007810183905560080191909155517fd0b153e02e23f4f21d020465b4dac7b1114893d05db395ed2511f879c3ac90b4906104489083815260200190565b6000546001600160a01b031633146105115760405162461bcd60e51b81526004016103f9906111d3565b600355565b6000546001600160a01b031633146105405760405162461bcd60e51b81526004016103f9906111d3565b60008281526001602090815260408083206001600160a01b0385168085526006909101835281842093909355519182527f34aeefd5030be05fe70eebc8866d82f935a308eb9f334cba88f5e3bea1a0cae891015b60405180910390a15050565b6000546001600160a01b031633146105ca5760405162461bcd60e51b81526004016103f9906111d3565b60008181526001602052604080822060070191909155517f827e8bff9f46048f8351964d2c871d09e4f4231513cf2fcb786649c68732e24f906104489083815260200190565b6000546001600160a01b0316331461063a5760405162461bcd60e51b81526004016103f9906111d3565b6106446000610fa3565b565b6000546001600160a01b031633146106705760405162461bcd60e51b81526004016103f9906111d3565b60008281526001602052604090205460ff166108305760008281526001602081815260408084206001600160a01b038616855260020190915290912054146106fa5760405162461bcd60e51b815260206004820152601d60248201527f4e6f74207265676973746572656420666f7220746869732067616d652e00000060448201526064016103f9565b600082815260016020526040808220600581015491519092916001600160a01b038516918381818185875af1925050503d8060008114610756576040519150601f19603f3d011682016040523d82523d6000602084013e61075b565b606091505b505090508061077c5760405162461bcd60e51b81526004016103f990611208565b6005820154604080518681526001600160a01b038616602082015280820192909252517f21e12a7cad0da5928167e1084ea4d5fdf8d9af66657a2543a9ac76a0ca0814779181900360600190a181600501548260080160008282546107e191906112a6565b90915550506001600160a01b0383166000908152600180840160209081526040808420849055600286019091528220829055600384018054919290916108289084906112a6565b909155505050505b5050565b6000546001600160a01b0316331461085e5760405162461bcd60e51b81526004016103f9906111d3565b4780156108d857600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146108b2576040519150601f19603f3d011682016040523d82523d6000602084013e6108b7565b606091505b50509050806108305760405162461bcd60e51b81526004016103f990611208565b50565b6000546001600160a01b031633146109055760405162461bcd60e51b81526004016103f9906111d3565b60008281526001602052604090205460ff16610afd5760008281526001602081815260408084206001600160a01b03861685529092018152918190205490519081527f557809284da7314475b1582804ae28e5f1349efc1fe970ea25d50fce75eb4f43910160405180910390a160008281526001602081815260408084206001600160a01b038616855260020190915290912054146109e65760405162461bcd60e51b815260206004820152601c60248201527f4e6f74207265676973746572656420666f7220746869732067616d650000000060448201526064016103f9565b600254600354600084815260016020526040812060080154909291606491610a0e9190611287565b610a189190611267565b610a229190611267565b60008481526001602052604081206008015491925090610a439083906112a6565b90504781811015610a52578091505b6000846001600160a01b03168360405160006040518083038185875af1925050503d8060008114610a9f576040519150601f19603f3d011682016040523d82523d6000602084013e610aa4565b606091505b5050905080610ac55760405162461bcd60e51b81526004016103f990611208565b6040518381527f22427047e1a674a9aff59700a2c8d00ea96e017ddf9236690bdedf1f21f28d9d9060200160405180910390a1505050505b610830826105a0565b6000546001600160a01b03163314610b305760405162461bcd60e51b81526004016103f9906111d3565b60008281526001602081815260408084206001600160a01b0386168552600601909152909120541415610b975760405162461bcd60e51b815260206004820152600f60248201526e20b63932b0b23c9039b2b0ba32b21760891b60448201526064016103f9565b60008281526001602081815260408084206001600160a01b038616808652600690910183529381902092909255815192835282018490527f9f2deefff0a36949d580cdd4ba9959b4a94786e786bad5650001b58b625fbbb19101610594565b60008181526001602081815260408084203385526006019091529091205414610c515760405162461bcd60e51b815260206004820152600d60248201526c2ab730baba3437b934bd32b21760991b60448201526064016103f9565b60008181526001602081905260409091206007015414610ca25760405162461bcd60e51b815260206004820152600c60248201526b23b0b6b29031b637b9b2b21760a11b60448201526064016103f9565b6000818152600160205260409020600381015460049091015411610d015760405162461bcd60e51b815260206004820152601660248201527523b0b6b290333ab6361710102a393c9030b3b0b4b71760511b60448201526064016103f9565b6000818152600160205260409020600501543414610d615760405162461bcd60e51b815260206004820152601c60248201527f4d757374206d6174636820726567697374726174696f6e206665652e0000000060448201526064016103f9565b600081815260016020908152604080832033845260020190915290205415610dc15760405162461bcd60e51b815260206004820152601360248201527220b63932b0b23c903932b3b4b9ba32b932b21760691b60448201526064016103f9565b600081815260016020526040902060040154610e115760405162461bcd60e51b815260206004820152600f60248201526e23b0b6b2903737ba103337bab7321760891b60448201526064016103f9565b6108d8813334610ff3565b6000546001600160a01b03163314610e465760405162461bcd60e51b81526004016103f9906111d3565b6001600160a01b038116610eab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f9565b6108d881610fa3565b6000546001600160a01b03163314610ede5760405162461bcd60e51b81526004016103f9906111d3565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610f2a5760405162461bcd60e51b81526004016103f9906111d3565b600084815260016020818152604080842060078101939093556008830184905560058301879055600383019390935560048201859055815460ff19168415151790915590518581527f9e5237c6a8bb45df74799cf138ebda4fed0574bed906da41387acdc4a3cbe3d8910160405180910390a150505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600083815260016020819052604082206003810180549193909161101890849061124f565b90915550506001600160a01b03831660009081526001808301602090815260408084208690556002850190915282205560088201805484929061105c90849061124f565b90915550506004546040516000916001600160a01b03169084908381818185875af1925050503d80600081146110ae576040519150601f19603f3d011682016040523d82523d6000602084013e6110b3565b606091505b50509050806110d45760405162461bcd60e51b81526004016103f990611208565b60405185815233907e7dc6ab80cc84c043b7b8d4fcafc802187470087f7ea7fccd2e17aecd0256a19060200160405180910390a25050505050565b80356001600160a01b038116811461112657600080fd5b919050565b60006020828403121561113c578081fd5b6111458261110f565b9392505050565b60006020828403121561115d578081fd5b5035919050565b60008060408385031215611176578081fd5b823591506111866020840161110f565b90509250929050565b600080600080608085870312156111a4578182fd5b843593506020850135925060408501359150606085013580151581146111c8578182fd5b939692955090935050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526027908201527f54726f706879204b696e67204172636164653a20556e61626c6520746f20747260408201526630b739b332b91760c91b606082015260800190565b60008219821115611262576112626112bd565b500190565b60008261128257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156112a1576112a16112bd565b500290565b6000828210156112b8576112b86112bd565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220c6ac00f6dab659d685a6a18a6f9a4e4f0fa3ecef928cb05db29ebc098d7b4dcb64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26 CALLER PUSH2 0x49 JUMP JUMPDEST PUSH8 0x16345785D8A0000 PUSH1 0x3 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x99 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1309 DUP1 PUSH2 0xA8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCCAF237F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCCAF237F EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xF207564E EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xF54C42D7 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xFC3AF0D6 EQ PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x8F0D7E35 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x9C623683 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xB9888D89 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xC46ED45A EQ PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D6EF310 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2D6EF310 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x75CA7603 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x7AD226DC EQ PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF5544F EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x248A55A1 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x2AC5016F EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x2BA67100 EQ PUSH2 0x17A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x1164 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x610 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x218 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x1164 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x834 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1164 JUMP JUMPDEST PUSH2 0x8DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1164 JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x7 DUP6 ADD SLOAD PUSH1 0x8 SWAP1 SWAP6 ADD SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1DA JUMP JUMPDEST PUSH2 0x138 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x112B JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x112B JUMP JUMPDEST PUSH2 0xEB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x118F JUMP JUMPDEST PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x7 ADD SSTORE MLOAD PUSH32 0x651A9760985EDC53055BF2462CB4437B9BE3DE87AA3EECF2C05782E8B58EBA19 SWAP1 PUSH2 0x448 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x7 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x8 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xD0B153E02E23F4F21D020465B4DAC7B1114893D05DB395ED2511F879C3AC90B4 SWAP1 PUSH2 0x448 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0x34AEEFD5030BE05FE70EEBC8866D82F935A308EB9F334CBA88F5E3BEA1A0CAE8 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x7 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x827E8BFF9F46048F8351964D2C871D09E4F4231513CF2FCB786649C68732E24F SWAP1 PUSH2 0x448 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x644 PUSH1 0x0 PUSH2 0xFA3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x830 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD EQ PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207265676973746572656420666F7220746869732067616D652E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD SWAP2 MLOAD SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0x21E12A7CAD0DA5928167E1084EA4D5FDF8D9AF66657A2543A9AC76A0CA081477 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 DUP2 PUSH1 0x5 ADD SLOAD DUP3 PUSH1 0x8 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP7 ADD SWAP1 SWAP2 MSTORE DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x828 SWAP1 DUP5 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1208 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAFD JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE SWAP1 SWAP3 ADD DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x557809284DA7314475B1582804AE28E5F1349EFC1FE970EA25D50FCE75EB4F43 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD EQ PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207265676973746572656420666F7220746869732067616D6500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD SWAP1 SWAP3 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0xA0E SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0xA18 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xA43 SWAP1 DUP4 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST SWAP1 POP SELFBALANCE DUP2 DUP2 LT ISZERO PUSH2 0xA52 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0x22427047E1A674A9AFF59700A2C8D00EA96E017DDF9236690BDEDF1F21F28D9D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMPDEST PUSH2 0x830 DUP3 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD EQ ISZERO PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x20B63932B0B23C9039B2B0BA32B217 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x9F2DEEFFF0A36949D580CDD4BA9959B4A94786E786BAD5650001B58B625FBBB1 SWAP2 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD EQ PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2AB730BABA3437B934BD32B217 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 ADD SLOAD EQ PUSH2 0xCA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x23B0B6B29031B637B9B2B217 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD GT PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x23B0B6B290333AB6361710102A393C9030B3B0B4B717 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD CALLVALUE EQ PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206D6174636820726567697374726174696F6E206665652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x20B63932B0B23C903932B3B4B9BA32B932B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x23B0B6B2903737BA103337BAB73217 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x8D8 DUP2 CALLER CALLVALUE PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x8D8 DUP2 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x7 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 DUP4 ADD DUP5 SWAP1 SSTORE PUSH1 0x5 DUP4 ADD DUP8 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 DUP3 ADD DUP6 SWAP1 SSTORE DUP2 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP6 DUP2 MSTORE PUSH32 0x9E5237C6A8BB45DF74799CF138EBDA4FED0574BED906DA41387ACDC4A3CBE3D8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD SWAP2 SWAP4 SWAP1 SWAP2 PUSH2 0x1018 SWAP1 DUP5 SWAP1 PUSH2 0x124F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x2 DUP6 ADD SWAP1 SWAP2 MSTORE DUP3 KECCAK256 SSTORE PUSH1 0x8 DUP3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x105C SWAP1 DUP5 SWAP1 PUSH2 0x124F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10AE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x10D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE CALLER SWAP1 PUSH31 0x7DC6AB80CC84C043B7B8D4FCAFC802187470087F7EA7FCCD2E17AECD0256A1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1145 DUP3 PUSH2 0x110F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1176 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1186 PUSH1 0x20 DUP5 ADD PUSH2 0x110F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11A4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11C8 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A20556E61626C6520746F207472 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x30B739B332B917 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1262 JUMPI PUSH2 0x1262 PUSH2 0x12BD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1282 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A1 PUSH2 0x12BD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x12B8 JUMPI PUSH2 0x12B8 PUSH2 0x12BD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xAC STOP 0xF6 0xDA 0xB6 MSIZE 0xD6 DUP6 0xA6 LOG1 DUP11 PUSH16 0x9A4E4F0FA3ECEF928CB05DB29EBC098D PUSH28 0x4DCB64736F6C63430008040033000000000000000000000000000000 ",
							"sourceMap": "257:5412:6:-:0;;;1136:4;1110:30;;1215:90;;;;;;;;;-1:-1:-1;921:32:0;719:10:4;921:18:0;:32::i;:::-;1256:5:6;1239:14;:22;1271:12;:27;;-1:-1:-1;;;;;;1271:27:6;719:10:4;1271:27:6;;;257:5412;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;257:5412:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8244:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nodeType": "YulIf",
															"src": "111:2:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:7"
															},
															"nodeType": "YulIf",
															"src": "272:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													}
												],
												"src": "192:196:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:120:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "509:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "518:6:7"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "526:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "511:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "511:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "511:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "484:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "493:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "480:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "505:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "476:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:32:7"
															},
															"nodeType": "YulIf",
															"src": "473:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "544:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "567:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "554:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "429:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "440:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "452:6:7",
														"type": ""
													}
												],
												"src": "393:190:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "675:177:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "721:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "730:6:7"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "738:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "723:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "723:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "723:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "696:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "705:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "692:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "692:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "717:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "688:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "688:32:7"
															},
															"nodeType": "YulIf",
															"src": "685:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "756:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "779:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "766:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "756:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "798:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "831:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "842:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "827:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "827:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "808:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "633:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "644:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "656:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "664:6:7",
														"type": ""
													}
												],
												"src": "588:264:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "975:380:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1022:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1031:6:7"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1039:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1024:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1024:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1024:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "996:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1005:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "992:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "992:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1017:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "988:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "988:33:7"
															},
															"nodeType": "YulIf",
															"src": "985:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1057:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1080:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1067:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1067:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1057:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1099:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1126:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1137:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1122:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1122:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1109:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1109:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1099:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1150:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1177:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1188:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1173:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1173:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1160:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1150:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1201:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1231:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1242:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1227:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1214:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:32:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1205:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1299:26:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1308:6:7"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "1316:6:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1301:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1301:22:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1301:22:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1268:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1289:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1282:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1282:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1275:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1275:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1265:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1265:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:40:7"
															},
															"nodeType": "YulIf",
															"src": "1255:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1334:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1344:5:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "917:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "928:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "940:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "948:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "956:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "964:6:7",
														"type": ""
													}
												],
												"src": "857:498:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1551:14:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1553:10:7",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1560:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1553:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1535:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1543:3:7",
														"type": ""
													}
												],
												"src": "1360:205:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1671:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1681:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1693:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1704:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1689:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1689:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1681:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1723:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1738:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1754:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1759:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1750:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1750:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1763:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1746:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1746:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1734:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1734:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1716:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1716:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1640:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1651:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1662:4:7",
														"type": ""
													}
												],
												"src": "1570:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1907:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1917:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1929:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1940:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1925:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1917:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1959:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1974:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1990:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1995:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1986:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1986:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1999:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1982:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1982:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1970:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1970:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1952:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1952:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2039:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2012:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1868:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1879:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1887:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1898:4:7",
														"type": ""
													}
												],
												"src": "1778:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2292:310:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2302:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2314:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2310:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2310:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2302:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2345:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2370:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2363:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2363:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2356:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2356:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2338:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2338:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2338:41:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2399:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2410:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2395:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2395:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2415:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2388:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2388:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2442:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2453:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2438:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2438:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2458:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2431:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2431:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2485:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2496:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2481:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2501:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2474:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2474:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2474:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2528:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2539:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2524:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:19:7"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "2545:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2517:35:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2572:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2583:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2568:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2568:19:7"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "2589:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2561:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2561:35:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2221:9:7",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2232:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2240:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2248:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2256:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2264:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2272:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2283:4:7",
														"type": ""
													}
												],
												"src": "2057:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2781:165:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2798:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2809:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2791:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2791:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2832:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2843:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2828:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2828:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2821:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2821:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2871:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2882:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2867:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2887:17:7",
																		"type": "",
																		"value": "Game not found."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2860:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2860:45:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2914:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2914:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b96d09a6190509269e62aa9bfcbeaa17b86c3d2c2e4b19a9b95b77fcde4f78e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2758:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2772:4:7",
														"type": ""
													}
												],
												"src": "2607:339:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3125:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3142:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3153:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3135:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3176:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3187:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3172:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3172:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3192:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3215:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3226:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3231:21:7",
																		"type": "",
																		"value": "Already registered."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:49:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:49:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3262:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3274:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3270:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3270:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3262:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_21871bb37681a7821a866c1494ec1747bd87246e318a4f2babd57d0cf64edb69__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3102:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3116:4:7",
														"type": ""
													}
												],
												"src": "2951:343:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3473:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3490:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3501:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3483:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3483:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3483:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3524:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3535:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3520:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3520:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3513:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3513:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3563:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3574:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3559:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3559:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3579:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3552:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3552:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3552:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3634:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3645:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3630:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3630:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3650:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3623:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3623:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3668:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3680:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3691:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3676:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3676:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3668:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3450:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3464:4:7",
														"type": ""
													}
												],
												"src": "3299:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3880:178:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3897:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3890:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3890:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3890:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3931:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3942:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3927:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3927:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3947:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3920:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3920:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3970:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3981:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3966:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3966:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3986:30:7",
																		"type": "",
																		"value": "Must match registration fee."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3959:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3959:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4026:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4038:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4049:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4034:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4034:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4026:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b8c54c4a1cb756165c416ea93e5dc17cdcb333fb6faa10ebd7580ae199f180a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3857:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3871:4:7",
														"type": ""
													}
												],
												"src": "3706:352:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4237:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4254:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4288:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4299:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4304:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4277:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4277:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4277:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4327:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4338:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4323:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4323:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4343:31:7",
																		"type": "",
																		"value": "Not registered for this game."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4384:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4396:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4407:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4392:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4384:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e4f42479de42ade5ee09202b5530ff02d5593e9e4c42a91f7ec6b2a338b5361__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4214:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4228:4:7",
														"type": ""
													}
												],
												"src": "4063:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4595:163:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4612:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4623:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4605:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4605:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4646:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4657:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4662:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4635:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4635:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4635:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4696:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4681:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4701:15:7",
																		"type": "",
																		"value": "Unauthorized."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4674:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4674:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4726:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4738:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4749:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4734:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4734:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4726:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4572:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4586:4:7",
														"type": ""
													}
												],
												"src": "4421:337:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4937:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4954:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4965:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4947:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4947:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4947:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4988:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4999:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4984:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4984:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5004:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4977:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4977:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4977:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5027:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5038:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5023:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5023:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5043:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5016:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5016:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5016:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5087:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5099:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5095:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5095:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5087:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4914:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4928:4:7",
														"type": ""
													}
												],
												"src": "4763:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5298:162:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5315:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5326:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5308:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5308:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5308:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5349:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5360:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5345:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5345:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5365:2:7",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5338:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5338:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5338:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5388:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5399:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5384:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5384:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5404:14:7",
																		"type": "",
																		"value": "Game closed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5377:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5377:42:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5377:42:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5428:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5440:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5451:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5436:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5436:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5428:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6ec414fa26780aca3fd333aca0f92568fb5147bc63efceed708a355fe57da61__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5275:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5289:4:7",
														"type": ""
													}
												],
												"src": "5124:336:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5639:178:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5656:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5667:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5649:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5649:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5649:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5690:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5701:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5686:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5686:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5706:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5679:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5729:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5740:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5725:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5725:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5745:30:7",
																		"type": "",
																		"value": "Not registered for this game"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5718:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5718:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5718:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5785:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5797:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5808:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5793:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5793:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5785:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b635aec89b8cc9c63e310e716da6a69024f021e81721065b9a6f7e208e245944__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5616:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5630:4:7",
														"type": ""
													}
												],
												"src": "5465:352:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5996:229:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6013:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6006:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6006:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6006:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6047:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6058:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6043:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6043:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6063:2:7",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6036:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6036:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6036:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6086:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6097:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6082:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6082:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6102:34:7",
																		"type": "",
																		"value": "Trophy King Arcade: Unable to tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6075:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6075:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6075:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6157:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6168:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6153:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6153:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6173:9:7",
																		"type": "",
																		"value": "ansfer."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6146:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6146:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6146:37:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6192:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6204:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6215:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6200:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6192:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baab7bb41e4b9169c526c16bbcbffefe20545b9868a1d3f2c8420ac42ec1aa91__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5973:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5987:4:7",
														"type": ""
													}
												],
												"src": "5822:403:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6404:165:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6421:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6432:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6414:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6414:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6455:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6466:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6451:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6451:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6471:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6444:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6444:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6494:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6505:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6490:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6490:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6510:17:7",
																		"type": "",
																		"value": "Already seated."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6483:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6483:45:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6483:45:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6537:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6549:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6560:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6545:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6545:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6537:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d2f54f249a52c6fa87f4eb5bbd592b7d82c6a9d6cba172fd6be3cea8ec0630ff__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6381:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6395:4:7",
														"type": ""
													}
												],
												"src": "6230:339:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6748:172:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6765:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6776:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6758:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6758:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6758:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6799:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6810:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6795:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6795:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6815:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6788:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6788:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6788:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6838:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6849:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6834:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6834:18:7"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6854:24:7",
																		"type": "",
																		"value": "Game full.  Try again."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6827:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6827:52:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6827:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6888:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6900:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6911:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6896:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6896:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6888:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fdc4b51a923854629413dcde0fab52daf54ffd5a62cf4f237866bb496b2b95da__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6725:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6739:4:7",
														"type": ""
													}
												],
												"src": "6574:346:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7036:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7048:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7059:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7044:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7036:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7078:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7089:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7071:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7071:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7071:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6995:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7006:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7017:4:7",
														"type": ""
													}
												],
												"src": "6925:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7264:188:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7274:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7286:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7297:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7282:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7282:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7274:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7316:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7327:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7309:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7309:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7309:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7354:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7365:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7350:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7350:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7374:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7390:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7395:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7386:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7386:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7399:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7382:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7382:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7370:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7370:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7343:60:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7343:60:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7423:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7434:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7419:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7419:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7439:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7412:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7412:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7412:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7217:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7228:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7236:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7244:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7255:4:7",
														"type": ""
													}
												],
												"src": "7107:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7505:80:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7532:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7534:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7534:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7534:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7521:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7528:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7524:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7524:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7518:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7518:13:7"
															},
															"nodeType": "YulIf",
															"src": "7515:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7563:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7574:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7577:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7570:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7570:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7563:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7488:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7491:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7497:3:7",
														"type": ""
													}
												],
												"src": "7457:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7636:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7667:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "7688:1:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7695:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7700:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7691:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7691:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7681:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7681:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7681:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7732:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7735:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7725:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7725:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7725:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "7760:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7763:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7753:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7753:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7753:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7656:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7649:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:9:7"
															},
															"nodeType": "YulIf",
															"src": "7646:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7787:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7796:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7799:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7792:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7792:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7787:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7621:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7624:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7630:1:7",
														"type": ""
													}
												],
												"src": "7590:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7864:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7923:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7925:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7925:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7925:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7895:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7888:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7888:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7881:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7881:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7903:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7914:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7910:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7910:6:7"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7918:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7906:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7906:14:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7900:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7900:21:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7877:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7877:45:7"
															},
															"nodeType": "YulIf",
															"src": "7874:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7954:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7969:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7972:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7965:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7965:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7954:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7843:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7846:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7852:7:7",
														"type": ""
													}
												],
												"src": "7812:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8034:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8056:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8058:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8058:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8058:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8050:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8053:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8047:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8047:8:7"
															},
															"nodeType": "YulIf",
															"src": "8044:2:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8087:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8099:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8102:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8095:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8095:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8087:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8016:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8019:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8025:4:7",
														"type": ""
													}
												],
												"src": "7985:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8147:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8164:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8171:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8176:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8167:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8167:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8157:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8157:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8157:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8204:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8207:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8197:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8197:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8228:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8231:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8221:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8221:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8115:127:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value3, value3) }\n        value3 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_1b96d09a6190509269e62aa9bfcbeaa17b86c3d2c2e4b19a9b95b77fcde4f78e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Game not found.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_21871bb37681a7821a866c1494ec1747bd87246e318a4f2babd57d0cf64edb69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Already registered.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b8c54c4a1cb756165c416ea93e5dc17cdcb333fb6faa10ebd7580ae199f180a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Must match registration fee.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6e4f42479de42ade5ee09202b5530ff02d5593e9e4c42a91f7ec6b2a338b5361__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Not registered for this game.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Unauthorized.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a6ec414fa26780aca3fd333aca0f92568fb5147bc63efceed708a355fe57da61__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Game closed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b635aec89b8cc9c63e310e716da6a69024f021e81721065b9a6f7e208e245944__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Not registered for this game\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baab7bb41e4b9169c526c16bbcbffefe20545b9868a1d3f2c8420ac42ec1aa91__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Trophy King Arcade: Unable to tr\")\n        mstore(add(headStart, 96), \"ansfer.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d2f54f249a52c6fa87f4eb5bbd592b7d82c6a9d6cba172fd6be3cea8ec0630ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already seated.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fdc4b51a923854629413dcde0fab52daf54ffd5a62cf4f237866bb496b2b95da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Game full.  Try again.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101135760003560e01c80638da5cb5b116100a0578063ccaf237f11610064578063ccaf237f146102d9578063f207564e1461035c578063f2fde38b1461036f578063f54c42d71461038f578063fc3af0d6146103af57600080fd5b80638da5cb5b146102505780638f0d7e351461026e5780639c62368314610283578063b9888d89146102a3578063c46ed45a146102c357600080fd5b80632d6ef310116100e75780632d6ef3101461019a578063313ce567146101ba578063715018a6146101e357806375ca7603146101f85780637ad226dc1461023057600080fd5b8062f5544f14610118578063248a55a11461013a5780632ac5016f1461015a5780632ba671001461017a575b600080fd5b34801561012457600080fd5b5061013861013336600461114c565b6103cf565b005b34801561014657600080fd5b5061013861015536600461114c565b610453565b34801561016657600080fd5b5061013861017536600461114c565b6104e7565b34801561018657600080fd5b50610138610195366004611164565b610516565b3480156101a657600080fd5b506101386101b536600461114c565b6105a0565b3480156101c657600080fd5b506101d060025481565b6040519081526020015b60405180910390f35b3480156101ef57600080fd5b50610138610610565b34801561020457600080fd5b50600454610218906001600160a01b031681565b6040516001600160a01b0390911681526020016101da565b34801561023c57600080fd5b5061013861024b366004611164565b610646565b34801561025c57600080fd5b506000546001600160a01b0316610218565b34801561027a57600080fd5b50610138610834565b34801561028f57600080fd5b5061013861029e366004611164565b6108db565b3480156102af57600080fd5b506101386102be366004611164565b610b06565b3480156102cf57600080fd5b506101d060035481565b3480156102e557600080fd5b5061032d6102f436600461114c565b60016020526000908152604090208054600382015460048301546005840154600785015460089095015460ff9094169492939192909186565b6040805196151587526020870195909552938501929092526060840152608083015260a082015260c0016101da565b61013861036a36600461114c565b610bf6565b34801561037b57600080fd5b5061013861038a36600461112b565b610e1c565b34801561039b57600080fd5b506101386103aa36600461112b565b610eb4565b3480156103bb57600080fd5b506101386103ca36600461118f565b610f00565b6000546001600160a01b031633146104025760405162461bcd60e51b81526004016103f9906111d3565b60405180910390fd5b60008181526001602081905260409182902060070155517f651a9760985edc53055bf2462cb4437b9be3de87aa3eecf2c05782e8b58eba19906104489083815260200190565b60405180910390a150565b6000546001600160a01b0316331461047d5760405162461bcd60e51b81526004016103f9906111d3565b600081815260016020526040808220805460ff191681556003810183905560048101839055600581018390556007810183905560080191909155517fd0b153e02e23f4f21d020465b4dac7b1114893d05db395ed2511f879c3ac90b4906104489083815260200190565b6000546001600160a01b031633146105115760405162461bcd60e51b81526004016103f9906111d3565b600355565b6000546001600160a01b031633146105405760405162461bcd60e51b81526004016103f9906111d3565b60008281526001602090815260408083206001600160a01b0385168085526006909101835281842093909355519182527f34aeefd5030be05fe70eebc8866d82f935a308eb9f334cba88f5e3bea1a0cae891015b60405180910390a15050565b6000546001600160a01b031633146105ca5760405162461bcd60e51b81526004016103f9906111d3565b60008181526001602052604080822060070191909155517f827e8bff9f46048f8351964d2c871d09e4f4231513cf2fcb786649c68732e24f906104489083815260200190565b6000546001600160a01b0316331461063a5760405162461bcd60e51b81526004016103f9906111d3565b6106446000610fa3565b565b6000546001600160a01b031633146106705760405162461bcd60e51b81526004016103f9906111d3565b60008281526001602052604090205460ff166108305760008281526001602081815260408084206001600160a01b038616855260020190915290912054146106fa5760405162461bcd60e51b815260206004820152601d60248201527f4e6f74207265676973746572656420666f7220746869732067616d652e00000060448201526064016103f9565b600082815260016020526040808220600581015491519092916001600160a01b038516918381818185875af1925050503d8060008114610756576040519150601f19603f3d011682016040523d82523d6000602084013e61075b565b606091505b505090508061077c5760405162461bcd60e51b81526004016103f990611208565b6005820154604080518681526001600160a01b038616602082015280820192909252517f21e12a7cad0da5928167e1084ea4d5fdf8d9af66657a2543a9ac76a0ca0814779181900360600190a181600501548260080160008282546107e191906112a6565b90915550506001600160a01b0383166000908152600180840160209081526040808420849055600286019091528220829055600384018054919290916108289084906112a6565b909155505050505b5050565b6000546001600160a01b0316331461085e5760405162461bcd60e51b81526004016103f9906111d3565b4780156108d857600080546040516001600160a01b039091169083908381818185875af1925050503d80600081146108b2576040519150601f19603f3d011682016040523d82523d6000602084013e6108b7565b606091505b50509050806108305760405162461bcd60e51b81526004016103f990611208565b50565b6000546001600160a01b031633146109055760405162461bcd60e51b81526004016103f9906111d3565b60008281526001602052604090205460ff16610afd5760008281526001602081815260408084206001600160a01b03861685529092018152918190205490519081527f557809284da7314475b1582804ae28e5f1349efc1fe970ea25d50fce75eb4f43910160405180910390a160008281526001602081815260408084206001600160a01b038616855260020190915290912054146109e65760405162461bcd60e51b815260206004820152601c60248201527f4e6f74207265676973746572656420666f7220746869732067616d650000000060448201526064016103f9565b600254600354600084815260016020526040812060080154909291606491610a0e9190611287565b610a189190611267565b610a229190611267565b60008481526001602052604081206008015491925090610a439083906112a6565b90504781811015610a52578091505b6000846001600160a01b03168360405160006040518083038185875af1925050503d8060008114610a9f576040519150601f19603f3d011682016040523d82523d6000602084013e610aa4565b606091505b5050905080610ac55760405162461bcd60e51b81526004016103f990611208565b6040518381527f22427047e1a674a9aff59700a2c8d00ea96e017ddf9236690bdedf1f21f28d9d9060200160405180910390a1505050505b610830826105a0565b6000546001600160a01b03163314610b305760405162461bcd60e51b81526004016103f9906111d3565b60008281526001602081815260408084206001600160a01b0386168552600601909152909120541415610b975760405162461bcd60e51b815260206004820152600f60248201526e20b63932b0b23c9039b2b0ba32b21760891b60448201526064016103f9565b60008281526001602081815260408084206001600160a01b038616808652600690910183529381902092909255815192835282018490527f9f2deefff0a36949d580cdd4ba9959b4a94786e786bad5650001b58b625fbbb19101610594565b60008181526001602081815260408084203385526006019091529091205414610c515760405162461bcd60e51b815260206004820152600d60248201526c2ab730baba3437b934bd32b21760991b60448201526064016103f9565b60008181526001602081905260409091206007015414610ca25760405162461bcd60e51b815260206004820152600c60248201526b23b0b6b29031b637b9b2b21760a11b60448201526064016103f9565b6000818152600160205260409020600381015460049091015411610d015760405162461bcd60e51b815260206004820152601660248201527523b0b6b290333ab6361710102a393c9030b3b0b4b71760511b60448201526064016103f9565b6000818152600160205260409020600501543414610d615760405162461bcd60e51b815260206004820152601c60248201527f4d757374206d6174636820726567697374726174696f6e206665652e0000000060448201526064016103f9565b600081815260016020908152604080832033845260020190915290205415610dc15760405162461bcd60e51b815260206004820152601360248201527220b63932b0b23c903932b3b4b9ba32b932b21760691b60448201526064016103f9565b600081815260016020526040902060040154610e115760405162461bcd60e51b815260206004820152600f60248201526e23b0b6b2903737ba103337bab7321760891b60448201526064016103f9565b6108d8813334610ff3565b6000546001600160a01b03163314610e465760405162461bcd60e51b81526004016103f9906111d3565b6001600160a01b038116610eab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f9565b6108d881610fa3565b6000546001600160a01b03163314610ede5760405162461bcd60e51b81526004016103f9906111d3565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610f2a5760405162461bcd60e51b81526004016103f9906111d3565b600084815260016020818152604080842060078101939093556008830184905560058301879055600383019390935560048201859055815460ff19168415151790915590518581527f9e5237c6a8bb45df74799cf138ebda4fed0574bed906da41387acdc4a3cbe3d8910160405180910390a150505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600083815260016020819052604082206003810180549193909161101890849061124f565b90915550506001600160a01b03831660009081526001808301602090815260408084208690556002850190915282205560088201805484929061105c90849061124f565b90915550506004546040516000916001600160a01b03169084908381818185875af1925050503d80600081146110ae576040519150601f19603f3d011682016040523d82523d6000602084013e6110b3565b606091505b50509050806110d45760405162461bcd60e51b81526004016103f990611208565b60405185815233907e7dc6ab80cc84c043b7b8d4fcafc802187470087f7ea7fccd2e17aecd0256a19060200160405180910390a25050505050565b80356001600160a01b038116811461112657600080fd5b919050565b60006020828403121561113c578081fd5b6111458261110f565b9392505050565b60006020828403121561115d578081fd5b5035919050565b60008060408385031215611176578081fd5b823591506111866020840161110f565b90509250929050565b600080600080608085870312156111a4578182fd5b843593506020850135925060408501359150606085013580151581146111c8578182fd5b939692955090935050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526027908201527f54726f706879204b696e67204172636164653a20556e61626c6520746f20747260408201526630b739b332b91760c91b606082015260800190565b60008219821115611262576112626112bd565b500190565b60008261128257634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156112a1576112a16112bd565b500290565b6000828210156112b8576112b86112bd565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220c6ac00f6dab659d685a6a18a6f9a4e4f0fa3ecef928cb05db29ebc098d7b4dcb64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCCAF237F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCCAF237F EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xF207564E EQ PUSH2 0x35C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xF54C42D7 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xFC3AF0D6 EQ PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x8F0D7E35 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x9C623683 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xB9888D89 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xC46ED45A EQ PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D6EF310 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x2D6EF310 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x75CA7603 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x7AD226DC EQ PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF5544F EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x248A55A1 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x2AC5016F EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x2BA67100 EQ PUSH2 0x17A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x1164 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x5A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x610 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x218 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x1164 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x218 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x834 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1164 JUMP JUMPDEST PUSH2 0x8DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1164 JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32D PUSH2 0x2F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0x7 DUP6 ADD SLOAD PUSH1 0x8 SWAP1 SWAP6 ADD SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1DA JUMP JUMPDEST PUSH2 0x138 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x114C JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x112B JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x112B JUMP JUMPDEST PUSH2 0xEB4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x118F JUMP JUMPDEST PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x7 ADD SSTORE MLOAD PUSH32 0x651A9760985EDC53055BF2462CB4437B9BE3DE87AA3EECF2C05782E8B58EBA19 SWAP1 PUSH2 0x448 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x3 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x7 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x8 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xD0B153E02E23F4F21D020465B4DAC7B1114893D05DB395ED2511F879C3AC90B4 SWAP1 PUSH2 0x448 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE MLOAD SWAP2 DUP3 MSTORE PUSH32 0x34AEEFD5030BE05FE70EEBC8866D82F935A308EB9F334CBA88F5E3BEA1A0CAE8 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x7 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x827E8BFF9F46048F8351964D2C871D09E4F4231513CF2FCB786649C68732E24F SWAP1 PUSH2 0x448 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH2 0x644 PUSH1 0x0 PUSH2 0xFA3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x830 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD EQ PUSH2 0x6FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207265676973746572656420666F7220746869732067616D652E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD SWAP2 MLOAD SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x75B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH32 0x21E12A7CAD0DA5928167E1084EA4D5FDF8D9AF66657A2543A9AC76A0CA081477 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 DUP2 PUSH1 0x5 ADD SLOAD DUP3 PUSH1 0x8 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x2 DUP7 ADD SWAP1 SWAP2 MSTORE DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x828 SWAP1 DUP5 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1208 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAFD JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE SWAP1 SWAP3 ADD DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x557809284DA7314475B1582804AE28E5F1349EFC1FE970EA25D50FCE75EB4F43 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD EQ PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207265676973746572656420666F7220746869732067616D6500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD SWAP1 SWAP3 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0xA0E SWAP2 SWAP1 PUSH2 0x1287 JUMP JUMPDEST PUSH2 0xA18 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x8 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xA43 SWAP1 DUP4 SWAP1 PUSH2 0x12A6 JUMP JUMPDEST SWAP1 POP SELFBALANCE DUP2 DUP2 LT ISZERO PUSH2 0xA52 JUMPI DUP1 SWAP2 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAA4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH32 0x22427047E1A674A9AFF59700A2C8D00EA96E017DDF9236690BDEDF1F21F28D9D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMPDEST PUSH2 0x830 DUP3 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP6 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD EQ ISZERO PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x20B63932B0B23C9039B2B0BA32B217 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP7 MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x9F2DEEFFF0A36949D580CDD4BA9959B4A94786E786BAD5650001B58B625FBBB1 SWAP2 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD EQ PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x2AB730BABA3437B934BD32B217 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x7 ADD SLOAD EQ PUSH2 0xCA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x23B0B6B29031B637B9B2B217 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD GT PUSH2 0xD01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x23B0B6B290333AB6361710102A393C9030B3B0B4B717 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD CALLVALUE EQ PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206D6174636820726567697374726174696F6E206665652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x2 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x20B63932B0B23C903932B3B4B9BA32B932B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x23B0B6B2903737BA103337BAB73217 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x8D8 DUP2 CALLER CALLVALUE PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x8D8 DUP2 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x7 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 DUP4 ADD DUP5 SWAP1 SSTORE PUSH1 0x5 DUP4 ADD DUP8 SWAP1 SSTORE PUSH1 0x3 DUP4 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 DUP3 ADD DUP6 SWAP1 SSTORE DUP2 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP6 DUP2 MSTORE PUSH32 0x9E5237C6A8BB45DF74799CF138EBDA4FED0574BED906DA41387ACDC4A3CBE3D8 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD SWAP2 SWAP4 SWAP1 SWAP2 PUSH2 0x1018 SWAP1 DUP5 SWAP1 PUSH2 0x124F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 SWAP1 SSTORE PUSH1 0x2 DUP6 ADD SWAP1 SWAP2 MSTORE DUP3 KECCAK256 SSTORE PUSH1 0x8 DUP3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x105C SWAP1 DUP5 SWAP1 PUSH2 0x124F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10AE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x10D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE CALLER SWAP1 PUSH31 0x7DC6AB80CC84C043B7B8D4FCAFC802187470087F7EA7FCCD2E17AECD0256A1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1145 DUP3 PUSH2 0x110F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x115D JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1176 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1186 PUSH1 0x20 DUP5 ADD PUSH2 0x110F JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11A4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11C8 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x54726F706879204B696E67204172636164653A20556E61626C6520746F207472 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x30B739B332B917 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1262 JUMPI PUSH2 0x1262 PUSH2 0x12BD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1282 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A1 PUSH2 0x12BD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x12B8 JUMPI PUSH2 0x12B8 PUSH2 0x12BD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC6 0xAC STOP 0xF6 0xDA 0xB6 MSIZE 0xD6 DUP6 0xA6 LOG1 DUP11 PUSH16 0x9A4E4F0FA3ECEF928CB05DB29EBC098D PUSH28 0x4DCB64736F6C63430008040033000000000000000000000000000000 ",
							"sourceMap": "257:5412:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2038:130;;;;;;;;;;-1:-1:-1;2038:130:6;;;;;:::i;:::-;;:::i;:::-;;1902;;;;;;;;;;-1:-1:-1;1902:130:6;;;;;:::i;:::-;;:::i;4613:113::-;;;;;;;;;;-1:-1:-1;4613:113:6;;;;;:::i;:::-;;:::i;4447:160::-;;;;;;;;;;-1:-1:-1;4447:160:6;;;;;:::i;:::-;;:::i;1311:132::-;;;;;;;;;;-1:-1:-1;1311:132:6;;;;;:::i;:::-;;:::i;1110:30::-;;;;;;;;;;;;;;;;;;;7071:25:7;;;7059:2;7044:18;1110:30:6;;;;;;;;1668:101:0;;;;;;;;;;;;;:::i;1181:27:6:-;;;;;;;;;;-1:-1:-1;1181:27:6;;;;-1:-1:-1;;;;;1181:27:6;;;;;;-1:-1:-1;;;;;1734:32:7;;;1716:51;;1704:2;1689:18;1181:27:6;1671:102:7;2700:647:6;;;;;;;;;;-1:-1:-1;2700:647:6;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;2422:272:6;;;;;;;;;;;;;:::i;4837:830::-;;;;;;;;;;-1:-1:-1;4837:830:6;;;;;:::i;:::-;;:::i;2174:242::-;;;;;;;;;;-1:-1:-1;2174:242:6;;;;;:::i;:::-;;:::i;1146:29::-;;;;;;;;;;;;;;;;1059:44;;;;;;;;;;-1:-1:-1;1059:44:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2363:14:7;;2356:22;2338:41;;2410:2;2395:18;;2388:34;;;;2438:18;;;2431:34;;;;2496:2;2481:18;;2474:34;2539:3;2524:19;;2517:35;2583:3;2568:19;;2561:35;2325:3;2310:19;1059:44:6;2292:310:7;3831:610:6;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;4732:99:6:-;;;;;;;;;;-1:-1:-1;4732:99:6;;;;;:::i;:::-;;:::i;1449:447::-;;;;;;;;;;-1:-1:-1;1449:447:6;;;;;:::i;:::-;;:::i;2038:130::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;2100:17:6::1;::::0;;;2127:1:::1;2100:17;::::0;;;;;;;;:24:::1;;:28:::0;2144:17;::::1;::::0;::::1;::::0;2109:7;7071:25:7;;7059:2;7044:18;;7026:76;2144:17:6::1;;;;;;;;2038:130:::0;:::o;1902:::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1973:17:6::1;::::0;;;:8:::1;:17;::::0;;;;;1966:24;;-1:-1:-1;;1966:24:6::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;;::::0;;;;2006:19;::::1;::::0;::::1;::::0;1982:7;7071:25:7;;7059:2;7044:18;;7026:76;4613:113:6;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4692:14:6::1;:27:::0;4613:113::o;4447:160::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4563:1:6::1;4529:17:::0;;;:8:::1;:17;::::0;;;;;;;-1:-1:-1;;;;;4529:31:6;::::1;::::0;;;:23:::1;::::0;;::::1;:31:::0;;;;;:35;;;;4580:20;1716:51:7;;;4580:20:6::1;::::0;1689:18:7;4580:20:6::1;;;;;;;;4447:160:::0;;:::o;1311:132::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1401:1:6::1;1374:17:::0;;;:8:::1;:17;::::0;;;;;:24:::1;;:28:::0;;;;1418:18;::::1;::::0;::::1;::::0;1383:7;7071:25:7;;7059:2;7044:18;;7026:76;1668:101:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2700:647:6:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2780:17:6::1;::::0;;;:8:::1;:17;::::0;;;;:26;::::1;;2776:565;;2839:17;::::0;;;:8:::1;:17;::::0;;;;;;;-1:-1:-1;;;;;2839:30:6;::::1;::::0;;:22:::1;;:30:::0;;;;;;;:35:::1;2831:77;;;::::0;-1:-1:-1;;;2831:77:6;;4265:2:7;2831:77:6::1;::::0;::::1;4247:21:7::0;4304:2;4284:18;;;4277:30;4343:31;4323:18;;;4316:59;4392:18;;2831:77:6::1;4237:179:7::0;2831:77:6::1;2923:19;2945:17:::0;;;:8:::1;:17;::::0;;;;;3016:19:::1;::::0;::::1;::::0;2996:45;;2945:17;;2923:19;-1:-1:-1;;;;;2996:11:6;::::1;::::0;2923:19;2996:45;2923:19;2996:45;3016:19;2996:11;:45:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2977:64;;;3063:7;3055:59;;;;-1:-1:-1::0;;;3055:59:6::1;;;;;;;:::i;:::-;3158:19;::::0;::::1;::::0;3134:44:::1;::::0;;7309:25:7;;;-1:-1:-1;;;;;7370:32:7;;7365:2;7350:18;;7343:60;7419:18;;;7412:34;;;;3134:44:6;::::1;::::0;;;;7297:2:7;3134:44:6;;::::1;3210:2;:19;;;3193:2;:12;;;:37;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;3245:14:6;::::1;3262:1;3245:14:::0;;;:6:::1;::::0;;::::1;:14;::::0;;;;;;;:18;;;3277:7:::1;::::0;::::1;:15:::0;;;;;:19;;;3310:15:::1;::::0;::::1;:20:::0;;3245:6;;3310:15;;:20:::1;::::0;3245:6;;3310:20:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;2776:565:6::1;2700:647:::0;;:::o;2422:272::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2488:21:6::1;2524:11:::0;;2520:168:::1;;2552:12;1108:6:0::0;;2570:34:6::1;::::0;-1:-1:-1;;;;;1108:6:0;;;;2591:7:6;;2552:12;2570:34;2552:12;2570:34;2591:7;1108:6:0;2570:34:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2551:53;;;2626:7;2618:59;;;;-1:-1:-1::0;;;2618:59:6::1;;;;;;;:::i;2520:168::-;1318:1:0;2422:272:6:o:0;4837:830::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4920:17:6::1;::::0;;;:8:::1;:17;::::0;;;;:26;::::1;;4916:716;;4980:17;::::0;;;:8:::1;:17;::::0;;;;;;;-1:-1:-1;;;;;4980:29:6;::::1;::::0;;:21;;::::1;:29:::0;;;;;;;4976:34;;7071:25:7;;;4976:34:6::1;::::0;7044:18:7;4976:34:6::1;;;;;;;5033:17;::::0;;;:8:::1;:17;::::0;;;;;;;-1:-1:-1;;;;;5033:30:6;::::1;::::0;;:22:::1;;:30:::0;;;;;;;:35:::1;5025:76;;;::::0;-1:-1:-1;;;5025:76:6;;5667:2:7;5025:76:6::1;::::0;::::1;5649:21:7::0;5706:2;5686:18;;;5679:30;5745;5725:18;;;5718:58;5793:18;;5025:76:6::1;5639:178:7::0;5025:76:6::1;5192:8;::::0;5168:14:::1;::::0;5116:18:::1;5138:17:::0;;;:8:::1;:17;::::0;;;;:27:::1;;::::0;5116:18;;5192:8;5186:3:::1;::::0;5138:44:::1;::::0;5168:14;5138:44:::1;:::i;:::-;5137:52;;;;:::i;:::-;:63;;;;:::i;:::-;5214:14;5231:17:::0;;;:8:::1;:17;::::0;;;;:27:::1;;::::0;5116:84;;-1:-1:-1;5214:14:6;5231:40:::1;::::0;5116:84;;5231:40:::1;:::i;:::-;5214:57:::0;-1:-1:-1;5312:21:6::1;5352:25:::0;;::::1;5348:89;;;5406:16;5397:25;;5348:89;5452:12;5470:6;-1:-1:-1::0;;;;;5470:11:6::1;5490:6;5470:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5451:51;;;5524:7;5516:59;;;;-1:-1:-1::0;;;5516:59:6::1;;;;;;;:::i;:::-;5607:14;::::0;7071:25:7;;;5607:14:6::1;::::0;7059:2:7;7044:18;5607:14:6::1;;;;;;;4916:716;;;;;5642:18;5652:7;5642:9;:18::i;2174:242::-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2263:17:6::1;::::0;;;:8:::1;:17;::::0;;;;;;;-1:-1:-1;;;;;2263:31:6;::::1;::::0;;:23:::1;;:31:::0;;;;;;;:36:::1;;2255:64;;;::::0;-1:-1:-1;;;2255:64:6;;6432:2:7;2255:64:6::1;::::0;::::1;6414:21:7::0;6471:2;6451:18;;;6444:30;-1:-1:-1;;;6490:18:7;;;6483:45;6545:18;;2255:64:6::1;6404:165:7::0;2255:64:6::1;2330:17;::::0;;;2364:1:::1;2330:17;::::0;;;;;;;-1:-1:-1;;;;;2330:31:6;::::1;::::0;;;:23:::1;::::0;;::::1;:31:::0;;;;;;:35;;;;2381:28;;1952:51:7;;;2019:18;;2012:34;;;2381:28:6::1;::::0;1925:18:7;2381:28:6::1;1907:145:7::0;3831:610:6;3899:17;;;;:8;:17;;;;;;;;3923:10;3899:35;;:23;;:35;;;;;;;:40;3891:66;;;;-1:-1:-1;;;3891:66:6;;4623:2:7;3891:66:6;;;4605:21:7;4662:2;4642:18;;;4635:30;-1:-1:-1;;;4681:18:7;;;4674:43;4734:18;;3891:66:6;4595:163:7;3891:66:6;3975:17;;;;:8;:17;;;;;;;;:24;;;:29;3967:54;;;;-1:-1:-1;;;3967:54:6;;5326:2:7;3967:54:6;;;5308:21:7;5365:2;5345:18;;;5338:30;-1:-1:-1;;;5384:18:7;;;5377:42;5436:18;;3967:54:6;5298:162:7;3967:54:6;4072:17;;;;:8;:17;;;;;:30;;;;4039;;;;;:63;4031:98;;;;-1:-1:-1;;;4031:98:6;;6776:2:7;4031:98:6;;;6758:21:7;6815:2;6795:18;;;6788:30;-1:-1:-1;;;6834:18:7;;;6827:52;6896:18;;4031:98:6;6748:172:7;4031:98:6;4161:17;;;;:8;:17;;;;;:34;;;4147:9;:49;4139:90;;;;-1:-1:-1;;;4139:90:6;;3908:2:7;4139:90:6;;;3890:21:7;3947:2;3927:18;;;3920:30;3986;3966:18;;;3959:58;4034:18;;4139:90:6;3880:178:7;4139:90:6;4247:17;;;;:8;:17;;;;;;;;4270:10;4247:34;;:22;;:34;;;;;;:39;4239:71;;;;-1:-1:-1;;;4239:71:6;;3153:2:7;4239:71:6;;;3135:21:7;3192:2;3172:18;;;3165:30;-1:-1:-1;;;3211:18:7;;;3204:49;3270:18;;4239:71:6;3125:169:7;4239:71:6;4361:1;4328:17;;;:8;:17;;;;;:30;;;4320:62;;;;-1:-1:-1;;;4320:62:6;;2809:2:7;4320:62:6;;;2791:21:7;2848:2;2828:18;;;2821:30;-1:-1:-1;;;2867:18:7;;;2860:45;2922:18;;4320:62:6;2781:165:7;4320:62:6;4393:41;4403:7;4412:10;4424:9;4393;:41::i;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;3501:2:7;1998:73:0::1;::::0;::::1;3483:21:7::0;3540:2;3520:18;;;3513:30;3579:34;3559:18;;;3552:62;-1:-1:-1;;;3630:18:7;;;3623:36;3676:19;;1998:73:0::1;3473:228:7::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;4732:99:6:-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4801:12:6::1;:23:::0;;-1:-1:-1;;;;;;4801:23:6::1;-1:-1:-1::0;;;;;4801:23:6;;;::::1;::::0;;;::::1;::::0;;4732:99::o;1449:447::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1576:17:6::1;::::0;;;1603:1:::1;1576:17;::::0;;;;;;;:24:::1;::::0;::::1;:28:::0;;;;1614:27:::1;::::0;::::1;:31:::0;;;1655:34:::1;::::0;::::1;:53:::0;;;-1:-1:-1;1718:30:6;::::1;:34:::0;;;;-1:-1:-1;1762:30:6;::::1;:45:::0;;;1817:37;;-1:-1:-1;;1817:37:6::1;::::0;::::1;;;::::0;;;1870:19;;7071:25:7;;;1870:19:6::1;::::0;7044:18:7;1870:19:6::1;;;;;;;1449:447:::0;;;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;3353:472:6:-;3448:19;3470:17;;;:8;:17;;;;;;;3498:15;;;:20;;3470:17;;3498:15;;:20;;3470:8;;3498:20;:::i;:::-;;;;-1:-1:-1;;;;;;;3528:22:6;;;;;;:6;;;;:22;;;;;;;;:31;;;3569:7;;;:23;;;;;:27;3606:12;;;:22;;3553:6;;3528:22;3606;;3553:6;;3606:22;:::i;:::-;;;;-1:-1:-1;;3658:12:6;;:38;;3640:12;;-1:-1:-1;;;;;3658:12:6;;3684:6;;3640:12;3658:38;3640:12;3658:38;3684:6;3658:12;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3639:57;;;3714:7;3706:59;;;;-1:-1:-1;;;3706:59:6;;;;;;;:::i;:::-;3789:29;;7071:25:7;;;3798:10:6;;3789:29;;7059:2:7;7044:18;3789:29:6;;;;;;;3353:472;;;;;:::o;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:7:o;393:190::-;452:6;505:2;493:9;484:7;480:23;476:32;473:2;;;526:6;518;511:22;473:2;-1:-1:-1;554:23:7;;463:120;-1:-1:-1;463:120:7:o;588:264::-;656:6;664;717:2;705:9;696:7;692:23;688:32;685:2;;;738:6;730;723:22;685:2;779:9;766:23;756:33;;808:38;842:2;831:9;827:18;808:38;:::i;:::-;798:48;;675:177;;;;;:::o;857:498::-;940:6;948;956;964;1017:3;1005:9;996:7;992:23;988:33;985:2;;;1039:6;1031;1024:22;985:2;1080:9;1067:23;1057:33;;1137:2;1126:9;1122:18;1109:32;1099:42;;1188:2;1177:9;1173:18;1160:32;1150:42;;1242:2;1231:9;1227:18;1214:32;1289:5;1282:13;1275:21;1268:5;1265:32;1255:2;;1316:6;1308;1301:22;1255:2;975:380;;;;-1:-1:-1;975:380:7;;-1:-1:-1;;975:380:7:o;4763:356::-;4965:2;4947:21;;;4984:18;;;4977:30;5043:34;5038:2;5023:18;;5016:62;5110:2;5095:18;;4937:182::o;5822:403::-;6024:2;6006:21;;;6063:2;6043:18;;;6036:30;6102:34;6097:2;6082:18;;6075:62;-1:-1:-1;;;6168:2:7;6153:18;;6146:37;6215:3;6200:19;;5996:229::o;7457:128::-;7497:3;7528:1;7524:6;7521:1;7518:13;7515:2;;;7534:18;;:::i;:::-;-1:-1:-1;7570:9:7;;7505:80::o;7590:217::-;7630:1;7656;7646:2;;-1:-1:-1;;;7681:31:7;;7735:4;7732:1;7725:15;7763:4;7688:1;7753:15;7646:2;-1:-1:-1;7792:9:7;;7636:171::o;7812:168::-;7852:7;7918:1;7914;7910:6;7906:14;7903:1;7900:21;7895:1;7888:9;7881:17;7877:45;7874:2;;;7925:18;;:::i;:::-;-1:-1:-1;7965:9:7;;7864:116::o;7985:125::-;8025:4;8053:1;8050;8047:8;8044:2;;;8058:18;;:::i;:::-;-1:-1:-1;8095:9:7;;8034:76::o;8115:127::-;8176:10;8171:3;8167:20;8164:1;8157:31;8207:4;8204:1;8197:15;8231:4;8228:1;8221:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "974600",
								"executionCost": "84302",
								"totalCost": "1058902"
							},
							"external": {
								"closeGame(uint256)": "7245",
								"createGame(uint256,uint256,uint256,bool)": "93328",
								"decimals()": "1029",
								"deleteGame(uint256)": "48143",
								"fee_percentage()": "1095",
								"gameData(uint256)": "5346",
								"market_maker()": "1126",
								"openGame(uint256)": "22246",
								"owner()": "1054",
								"placePlayer(uint256,address)": "23775",
								"reconcile()": "infinite",
								"refund(uint256,address)": "infinite",
								"register(uint256)": "infinite",
								"removePlayer(uint256,address)": "7497",
								"renounceOwnership()": "23481",
								"setArcadeFeePercentage(uint256)": "21132",
								"setMarketMaker(address)": "22099",
								"setWinner(uint256,address)": "infinite",
								"transferOwnership(address)": "23675"
							},
							"internal": {
								"_register(uint256,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 257,
									"end": 5669,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1136,
									"end": 1140,
									"name": "PUSH",
									"source": 6,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 1110,
									"end": 1140,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1110,
									"end": 1140,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1305,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1305,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1305,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1215,
									"end": 1305,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1305,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1215,
									"end": 1305,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1305,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1215,
									"end": 1305,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1215,
									"end": 1305,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1256,
									"end": 1261,
									"name": "PUSH",
									"source": 6,
									"value": "16345785D8A0000"
								},
								{
									"begin": 1239,
									"end": 1253,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1239,
									"end": 1261,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1283,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1271,
									"end": 1298,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1298,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1271,
									"end": 1298,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1298,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1298,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1271,
									"end": 1298,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 5669,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c6ac00f6dab659d685a6a18a6f9a4e4f0fa3ecef928cb05db29ebc098d7b4dcb64736f6c63430008040033",
									".code": [
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "CCAF237F"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "CCAF237F"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "F207564E"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "F54C42D7"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "FC3AF0D6"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "8F0D7E35"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "9C623683"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "B9888D89"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "C46ED45A"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "2D6EF310"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "2D6EF310"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "75CA7603"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "7AD226DC"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "F5544F"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "248A55A1"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "2AC5016F"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "2BA67100"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 257,
											"end": 5669,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1140,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1766,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1766,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1734,
											"end": 1766,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1767,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1704,
											"end": 1706,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1671,
											"end": 1773,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2377,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2377,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2378,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2338,
											"end": 2379,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2422,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2422,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2465,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2465,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2465,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2508,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2539,
											"end": 2542,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2524,
											"end": 2543,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2543,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2552,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2586,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 2568,
											"end": 2587,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2328,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 2310,
											"end": 2329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2292,
											"end": 2602,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2117,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2124,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2100,
											"end": 2124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2128,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "PUSH",
											"source": 6,
											"value": "651A9760985EDC53055BF2462CB4437B9BE3DE87AA3EECF2C05782E8B58EBA19"
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7026,
											"end": 7102,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2161,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2168,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1902,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 1990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1990,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1973,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1973,
											"end": 1990,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 1990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 1990,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1990,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 6,
											"value": "D0B153E02E23F4F21D020465B4DAC7B1114893D05DB395ED2511F879C3AC90B4"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 1989,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7026,
											"end": 7102,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4692,
											"end": 4706,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4692,
											"end": 4719,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4726,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4563,
											"end": 4564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4537,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4546,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4564,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4564,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4529,
											"end": 4564,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1767,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1767,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "PUSH",
											"source": 6,
											"value": "34AEEFD5030BE05FE70EEBC8866D82F935A308EB9F334CBA88F5E3BEA1A0CAE8"
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4600,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4607,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1311,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1382,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1391,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1398,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1374,
											"end": 1398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1402,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "827E8BFF9F46048F8351964D2C871D09E4F4231513CF2FCB786649C68732E24F"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1418,
											"end": 1436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7026,
											"end": 7102,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2780,
											"end": 2797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2797,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2788,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2780,
											"end": 2797,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 2797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2797,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2780,
											"end": 2797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2797,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2780,
											"end": 2806,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2776,
											"end": 3341,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2847,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2856,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2861,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2839,
											"end": 2861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2869,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2839,
											"end": 2874,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4268,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4304,
											"end": 4306,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4307,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4374,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F74207265676973746572656420666F7220746869732067616D652E000000"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4323,
											"end": 4341,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4375,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4392,
											"end": 4410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4237,
											"end": 4416,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3035,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3016,
											"end": 3035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3035,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3035,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2996,
											"end": 3007,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3007,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3007,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2923,
											"end": 2942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3016,
											"end": 3035,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3007,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 3041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 3055,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3177,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3158,
											"end": 3177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3177,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7309,
											"end": 7334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7370,
											"end": 7402,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7402,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7365,
											"end": 7367,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7350,
											"end": 7368,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7350,
											"end": 7368,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7403,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7437,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7412,
											"end": 7446,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7412,
											"end": 7446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7412,
											"end": 7446,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7412,
											"end": 7446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "PUSH",
											"source": 6,
											"value": "21E12A7CAD0DA5928167E1084EA4D5FDF8D9AF66657A2543A9AC76A0CA081477"
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7297,
											"end": 7299,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3178,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3212,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3229,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3210,
											"end": 3229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3205,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3193,
											"end": 3205,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3230,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3262,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3292,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3292,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3325,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3310,
											"end": 3325,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3330,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3330,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3310,
											"end": 3330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3310,
											"end": 3330,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3310,
											"end": 3330,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3310,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3330,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3330,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2776,
											"end": 3341,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2776,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 3347,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2509,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2535,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2524,
											"end": 2535,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2520,
											"end": 2688,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2598,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2598,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2551,
											"end": 2604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2618,
											"end": 2677,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2520,
											"end": 2688,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2520,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2694,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4837,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4937,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4946,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4946,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4920,
											"end": 4946,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4916,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4988,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4997,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4980,
											"end": 5009,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5009,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5009,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5009,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5001,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5009,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5009,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 5009,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "PUSH",
											"source": 6,
											"value": "557809284DA7314475B1582804AE28E5F1349EFC1FE970EA25D50FCE75EB4F43"
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5010,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5041,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5050,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5055,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5033,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5063,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5068,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5649,
											"end": 5670,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 5708,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5679,
											"end": 5709,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5775,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F74207265676973746572656420666F7220746869732067616D6500000000"
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5725,
											"end": 5743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5776,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5639,
											"end": 5817,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 5025,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5200,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5192,
											"end": 5200,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5182,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5168,
											"end": 5182,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5138,
											"end": 5155,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5146,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5138,
											"end": 5155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5138,
											"end": 5155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5155,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5138,
											"end": 5155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5155,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5165,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5138,
											"end": 5165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5165,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5189,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5186,
											"end": 5189,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 5138,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5138,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 5138,
											"end": 5182,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5138,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 5138,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5137,
											"end": 5200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 5137,
											"end": 5200,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5137,
											"end": 5200,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 5137,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5214,
											"end": 5228,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5231,
											"end": 5248,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5239,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5231,
											"end": 5248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5231,
											"end": 5248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5231,
											"end": 5248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5248,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5258,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5231,
											"end": 5258,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5258,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5200,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5214,
											"end": 5228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5231,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5200,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5116,
											"end": 5200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5231,
											"end": 5271,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5271,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5231,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5214,
											"end": 5271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5312,
											"end": 5333,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5352,
											"end": 5377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5352,
											"end": 5377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5352,
											"end": 5377,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5437,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5348,
											"end": 5437,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5397,
											"end": 5422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5437,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 5348,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5452,
											"end": 5464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5481,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5496,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5451,
											"end": 5502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5451,
											"end": 5502,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5451,
											"end": 5502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5516,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5607,
											"end": 5621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5607,
											"end": 5621,
											"name": "PUSH",
											"source": 6,
											"value": "22427047E1A674A9AFF59700A2C8D00EA96E017DDF9236690BDEDF1F21F28D9D"
										},
										{
											"begin": 5607,
											"end": 5621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5607,
											"end": 5621,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5607,
											"end": 5621,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5621,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5621,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 5632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 5632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 5632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 5632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4916,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5642,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5652,
											"end": 5659,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5642,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5642,
											"end": 5660,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2174,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2286,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2263,
											"end": 2286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2294,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2299,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2299,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6473,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 6451,
											"end": 6469,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6451,
											"end": 6469,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6451,
											"end": 6469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6444,
											"end": 6474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20B63932B0B23C9039B2B0BA32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6490,
											"end": 6508,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6490,
											"end": 6508,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6490,
											"end": 6508,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6545,
											"end": 6563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6404,
											"end": 6569,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2255,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2330,
											"end": 2361,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2361,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2361,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2361,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2361,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2361,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2365,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2365,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2365,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2409,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 2003,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1952,
											"end": 2003,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1952,
											"end": 2003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2046,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2012,
											"end": 2046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2409,
											"name": "PUSH",
											"source": 6,
											"value": "9F2DEEFFF0A36949D580CDD4BA9959B4A94786E786BAD5650001B58B625FBBB1"
										},
										{
											"begin": 2381,
											"end": 2409,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 1943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1907,
											"end": 2052,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3831,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3907,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3916,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3933,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3934,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3922,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3899,
											"end": 3922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3934,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3934,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3939,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4605,
											"end": 4626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4662,
											"end": 4664,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4642,
											"end": 4660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB730BABA3437B934BD32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4674,
											"end": 4717,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4752,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4734,
											"end": 4752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4595,
											"end": 4758,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3891,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3983,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3999,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3975,
											"end": 3999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3999,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 4004,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5308,
											"end": 5329,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5367,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5368,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B0B6B29031B637B9B2B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5377,
											"end": 5419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5436,
											"end": 5454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5298,
											"end": 5460,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3967,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4089,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4102,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4072,
											"end": 4102,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4102,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4102,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4069,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4102,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6815,
											"end": 6817,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 6795,
											"end": 6813,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6795,
											"end": 6813,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6818,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B0B6B290333AB6361710102A393C9030B3B0B4B717"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6852,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6834,
											"end": 6852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6834,
											"end": 6852,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6896,
											"end": 6914,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6896,
											"end": 6914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 6748,
											"end": 6920,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4031,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4169,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4161,
											"end": 4178,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4161,
											"end": 4178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4178,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4161,
											"end": 4195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4195,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4156,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4147,
											"end": 4196,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3911,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3947,
											"end": 3949,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3945,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3950,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 4016,
											"name": "PUSH",
											"source": 7,
											"value": "4D757374206D6174636820726567697374726174696F6E206665652E00000000"
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3966,
											"end": 3984,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4017,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4034,
											"end": 4052,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4034,
											"end": 4052,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3880,
											"end": 4058,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4139,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4255,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4264,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4280,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4281,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4269,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4247,
											"end": 4269,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4281,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4281,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4286,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3153,
											"end": 3155,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3135,
											"end": 3156,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3194,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3165,
											"end": 3195,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20B63932B0B23C903932B3B4B9BA32B932B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3211,
											"end": 3229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3204,
											"end": 3253,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3288,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3270,
											"end": 3288,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3125,
											"end": 3294,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4239,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4345,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4345,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4345,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4336,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4328,
											"end": 4345,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4345,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4345,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4328,
											"end": 4345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4345,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4328,
											"end": 4358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4328,
											"end": 4358,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2811,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2812,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2846,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2821,
											"end": 2851,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B0B6B2903737BA103337BAB73217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2860,
											"end": 2905,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2922,
											"end": 2940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2781,
											"end": 2946,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4320,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4422,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4433,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4393,
											"end": 4434,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3501,
											"end": 3503,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3543,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3613,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3559,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3559,
											"end": 3577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3614,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3648,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3659,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3695,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3676,
											"end": 3695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3473,
											"end": 3701,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4824,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4732,
											"end": 4831,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1604,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1604,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1604,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1641,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1614,
											"end": 1641,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1645,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1645,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1655,
											"end": 1689,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1655,
											"end": 1689,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1655,
											"end": 1689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1655,
											"end": 1708,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1655,
											"end": 1708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1655,
											"end": 1708,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": 1718,
											"end": 1748,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1752,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1752,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1752,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": 1762,
											"end": 1792,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1762,
											"end": 1792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1762,
											"end": 1807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1854,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1854,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1854,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1854,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1854,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "PUSH",
											"source": 6,
											"value": "9E5237C6A8BB45DF74799CF138EBDA4FED0574BED906DA41387ACDC4A3CBE3D8"
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1870,
											"end": 1889,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1449,
											"end": 1896,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3353,
											"end": 3825,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3353,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3478,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3513,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3498,
											"end": 3513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3513,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3478,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3518,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3534,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3559,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3559,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3569,
											"end": 3576,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3592,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3592,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3596,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3628,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3628,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3559,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3606,
											"end": 3628,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3606,
											"end": 3628,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3606,
											"end": 3628,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3606,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3628,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3628,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3628,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3640,
											"end": 3652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3652,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3652,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3639,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3639,
											"end": 3696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3639,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3706,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3818,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3789,
											"end": 3818,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7096,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3808,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3818,
											"name": "PUSH",
											"source": 6,
											"value": "7DC6AB80CC84C043B7B8D4FCAFC802187470087F7EA7FCCD2E17AECD0256A1"
										},
										{
											"begin": 3789,
											"end": 3818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7059,
											"end": 7061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3789,
											"end": 3818,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3789,
											"end": 3818,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3818,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3818,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3818,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3818,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3825,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 63,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 63,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 63,
											"end": 187,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 343,
											"end": 382,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 262,
											"end": 388,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 262,
											"end": 388,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 393,
											"end": 583,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 393,
											"end": 583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 452,
											"end": 458,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 507,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 493,
											"end": 502,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 484,
											"end": 491,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 480,
											"end": 503,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 476,
											"end": 508,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 473,
											"end": 475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 473,
											"end": 475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 473,
											"end": 475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 526,
											"end": 532,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 518,
											"end": 524,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 511,
											"end": 533,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 473,
											"end": 475,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 473,
											"end": 475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 554,
											"end": 577,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 554,
											"end": 577,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 463,
											"end": 583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 463,
											"end": 583,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 588,
											"end": 852,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 656,
											"end": 662,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 670,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 717,
											"end": 719,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 714,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 696,
											"end": 703,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 692,
											"end": 715,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 688,
											"end": 720,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 685,
											"end": 687,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 685,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 685,
											"end": 687,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 738,
											"end": 744,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 730,
											"end": 736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 723,
											"end": 745,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 685,
											"end": 687,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 685,
											"end": 687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 779,
											"end": 788,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 766,
											"end": 789,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 756,
											"end": 789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 756,
											"end": 789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 808,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 842,
											"end": 844,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 831,
											"end": 840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 827,
											"end": 845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 808,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 808,
											"end": 846,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 808,
											"end": 846,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 808,
											"end": 846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 798,
											"end": 846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 798,
											"end": 846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 675,
											"end": 852,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 675,
											"end": 852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 675,
											"end": 852,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 675,
											"end": 852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 675,
											"end": 852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 675,
											"end": 852,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 857,
											"end": 1355,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 857,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 940,
											"end": 946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 954,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 956,
											"end": 962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1020,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1005,
											"end": 1014,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1003,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1015,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1021,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 985,
											"end": 987,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 985,
											"end": 987,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1031,
											"end": 1037,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1024,
											"end": 1046,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 985,
											"end": 987,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 985,
											"end": 987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1080,
											"end": 1089,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1067,
											"end": 1090,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1057,
											"end": 1090,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1057,
											"end": 1090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1135,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1141,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1099,
											"end": 1141,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1099,
											"end": 1141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1186,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1191,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1192,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1150,
											"end": 1192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1244,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1231,
											"end": 1240,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1245,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1214,
											"end": 1246,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1289,
											"end": 1294,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1275,
											"end": 1296,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1265,
											"end": 1297,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1255,
											"end": 1257,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1314,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1323,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1257,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1255,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1355,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1355,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1355,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1355,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 975,
											"end": 1355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1355,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 975,
											"end": 1355,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4763,
											"end": 5119,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 4763,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4967,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4947,
											"end": 4968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4947,
											"end": 4968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4947,
											"end": 4968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4984,
											"end": 5002,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4984,
											"end": 5002,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4984,
											"end": 5002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 5007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5043,
											"end": 5077,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5038,
											"end": 5040,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5023,
											"end": 5041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5078,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5095,
											"end": 5113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 5119,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5822,
											"end": 6225,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5822,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6024,
											"end": 6026,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6006,
											"end": 6027,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6065,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6036,
											"end": 6066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6102,
											"end": 6136,
											"name": "PUSH",
											"source": 7,
											"value": "54726F706879204B696E67204172636164653A20556E61626C6520746F207472"
										},
										{
											"begin": 6097,
											"end": 6099,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6082,
											"end": 6100,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6075,
											"end": 6137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B739B332B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6168,
											"end": 6170,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6153,
											"end": 6171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6146,
											"end": 6183,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6215,
											"end": 6218,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6200,
											"end": 6219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 6225,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7457,
											"end": 7585,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7457,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7497,
											"end": 7500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7521,
											"end": 7522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7518,
											"end": 7531,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7515,
											"end": 7517,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7515,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 7515,
											"end": 7517,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7570,
											"end": 7579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7505,
											"end": 7585,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7590,
											"end": 7807,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7590,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7630,
											"end": 7631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7656,
											"end": 7657,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7646,
											"end": 7648,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7681,
											"end": 7712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7681,
											"end": 7712,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7735,
											"end": 7739,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7732,
											"end": 7733,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7725,
											"end": 7740,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7763,
											"end": 7767,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7688,
											"end": 7689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7753,
											"end": 7768,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7648,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7646,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7792,
											"end": 7801,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7792,
											"end": 7801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7636,
											"end": 7807,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7812,
											"end": 7980,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7812,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7852,
											"end": 7859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7914,
											"end": 7915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7916,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7920,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7900,
											"end": 7921,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 7897,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 7898,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7877,
											"end": 7922,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7874,
											"end": 7876,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7874,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 7874,
											"end": 7876,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 7925,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 7925,
											"end": 7943,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7925,
											"end": 7943,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 7925,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7965,
											"end": 7974,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7965,
											"end": 7974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7980,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7985,
											"end": 8110,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 7985,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8025,
											"end": 8029,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8050,
											"end": 8051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 8055,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8046,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 8044,
											"end": 8046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 8058,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8034,
											"end": 8110,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 8115,
											"end": 8242,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 8115,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8176,
											"end": 8186,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 8167,
											"end": 8187,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 8164,
											"end": 8165,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8157,
											"end": 8188,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8207,
											"end": 8211,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8204,
											"end": 8205,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8197,
											"end": 8212,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8231,
											"end": 8235,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8228,
											"end": 8229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8221,
											"end": 8236,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"closeGame(uint256)": "2d6ef310",
							"createGame(uint256,uint256,uint256,bool)": "fc3af0d6",
							"decimals()": "313ce567",
							"deleteGame(uint256)": "248a55a1",
							"fee_percentage()": "c46ed45a",
							"gameData(uint256)": "ccaf237f",
							"market_maker()": "75ca7603",
							"openGame(uint256)": "00f5544f",
							"owner()": "8da5cb5b",
							"placePlayer(uint256,address)": "b9888d89",
							"reconcile()": "8f0d7e35",
							"refund(uint256,address)": "7ad226dc",
							"register(uint256)": "f207564e",
							"removePlayer(uint256,address)": "2ba67100",
							"renounceOwnership()": "715018a6",
							"setArcadeFeePercentage(uint256)": "2ac5016f",
							"setMarketMaker(address)": "f54c42d7",
							"setWinner(uint256,address)": "9c623683",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"CloseGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"CreateGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"DeleteGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Fee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"OpenGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"Payout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"PlacePlayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RemovePlayer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"}],\"name\":\"closeGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registration_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"player_limit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exchange\",\"type\":\"bool\"}],\"name\":\"createGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"}],\"name\":\"deleteGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee_percentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exchange\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"player_count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"player_limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registration_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total_fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"market_maker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"}],\"name\":\"openGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"placePlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reconcile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"removePlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"setArcadeFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"incoming\",\"type\":\"address\"}],\"name\":\"setMarketMaker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"game_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"setWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Arcade.sol\":\"Arcade\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.6.0/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts@4.6.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts@4.6.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts@4.6.0/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/Arcade.sol\":{\"keccak256\":\"0xf956da58bf1d64df7704beba7465e5297c94f177508298d05a399cf9f03c3935\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b2dd7d545e4e4b8ccfd5d5d2a9aedd4b2cbc03cffa517e84b7c2cc092faefee\",\"dweb:/ipfs/QmRqtbfL5R3bPY6MSrJy2MTExYrytnA98n4p6r5qDkiBHz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1215,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "gameData",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(GameInfo)1210_storage)"
							},
							{
								"astId": 1218,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1220,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "fee_percentage",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1222,
								"contract": "contracts/Arcade.sol:Arcade",
								"label": "market_maker",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(GameInfo)1210_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Arcade.GameInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(GameInfo)1210_storage"
							},
							"t_struct(GameInfo)1210_storage": {
								"encoding": "inplace",
								"label": "struct Arcade.GameInfo",
								"members": [
									{
										"astId": 1187,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "exchange",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1191,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "fee",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 1195,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "paid",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 1197,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "player_count",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1199,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "player_limit",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1201,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "registration_fee",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1205,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "seats",
										"offset": 0,
										"slot": "6",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 1207,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "status",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1209,
										"contract": "contracts/Arcade.sol:Arcade",
										"label": "total_fee",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "288"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.6.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.6.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							815
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.6.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 816,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 815,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								815
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							815
						],
						"ERC20": [
							690
						],
						"IERC20": [
							768
						],
						"IERC20Metadata": [
							793
						]
					},
					"id": 691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.6.0/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 769,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.6.0/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 794,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.6.0/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 816,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 111,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 815,
										"src": "1421:7:1"
									},
									"id": 112,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:1"
								},
								{
									"baseName": {
										"id": 113,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 768,
										"src": "1430:6:1"
									},
									"id": 114,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:1"
								},
								{
									"baseName": {
										"id": 115,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 793,
										"src": "1438:14:1"
									},
									"id": 116,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690,
								793,
								768,
								815
							],
							"name": "ERC20",
							"nameLocation": "1412:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 120,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1459:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 119,
										"keyType": {
											"id": 117,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 118,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 126,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1511:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 125,
										"keyType": {
											"id": 121,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 124,
											"keyType": {
												"id": 122,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1585:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1620:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 129,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1646:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 131,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "2034:57:1",
										"statements": [
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2044:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "2052:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:1"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 144,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2067:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 145,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2077:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:1"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 149,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1990:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 134,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2011:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:1"
									},
									"scope": 690,
									"src": "1978:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										780
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "2225:29:1",
										"statements": [
											{
												"expression": {
													"id": 156,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "2242:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 155,
												"id": 157,
												"nodeType": "Return",
												"src": "2235:12:1"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:1"
									},
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2210:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 153,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:1"
									},
									"scope": 690,
									"src": "2156:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										786
									],
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "2438:31:1",
										"statements": [
											{
												"expression": {
													"id": 166,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 132,
													"src": "2455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 165,
												"id": 167,
												"nodeType": "Return",
												"src": "2448:14:1"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:1"
									},
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2423:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:1"
									},
									"scope": 690,
									"src": "2367:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "3158:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 175,
												"id": 177,
												"nodeType": "Return",
												"src": "3168:9:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:1"
									},
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3151:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 173,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:1"
									},
									"scope": 690,
									"src": "3093:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										717
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "3314:36:1",
										"statements": [
											{
												"expression": {
													"id": 186,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 128,
													"src": "3331:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 185,
												"id": 187,
												"nodeType": "Return",
												"src": "3324:19:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:1"
									},
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3305:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:1"
									},
									"scope": 690,
									"src": "3244:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										725
									],
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "3491:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 198,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3508:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 200,
													"indexExpression": {
														"id": 199,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "3518:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 201,
												"nodeType": "Return",
												"src": "3501:25:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:1"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3427:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3482:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:1"
									},
									"scope": 690,
									"src": "3408:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										735
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "3814:104:1",
										"statements": [
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "3824:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 214,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 218,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 216,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3840:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3872:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3879:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3883:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 219,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "3862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 213,
												"id": 226,
												"nodeType": "Return",
												"src": "3900:11:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 210,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:1"
									},
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3747:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3759:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:1"
									},
									"scope": 690,
									"src": "3729:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										745
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "4074:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 239,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4091:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 241,
														"indexExpression": {
															"id": 240,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "4103:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 243,
													"indexExpression": {
														"id": 242,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "4110:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 238,
												"id": 244,
												"nodeType": "Return",
												"src": "4084:34:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:1"
									},
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3995:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "4010:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:1"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "4065:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:1"
									},
									"scope": 690,
									"src": "3976:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										755
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4522:108:1",
										"statements": [
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 270,
														"src": "4532:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 257,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "4548:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 263,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4579:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 264,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "4586:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "4595:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 262,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "4570:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 256,
												"id": 269,
												"nodeType": "Return",
												"src": "4612:11:1"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 253,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:1"
									},
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4450:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4467:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4516:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:1"
									},
									"scope": 690,
									"src": "4433:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										767
									],
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "5325:153:1",
										"statements": [
											{
												"assignments": [
													285
												],
												"declarations": [
													{
														"constant": false,
														"id": 285,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "5335:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 284,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 286,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "5353:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5391:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "5397:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5406:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 289,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "5375:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5433:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "5439:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5443:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "5423:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 283,
												"id": 302,
												"nodeType": "Return",
												"src": "5460:11:1"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 280,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:1"
									},
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5223:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5245:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5265:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5319:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:1"
									},
									"scope": 690,
									"src": "5192:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "5967:140:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 332,
														"src": "5977:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "5993:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6024:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "6031:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 323,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6050:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 324,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "6057:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 322,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "6040:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 326,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6068:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "6015:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 331,
												"nodeType": "Return",
												"src": "6089:11:1"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5900:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5917:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5961:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:1"
									},
									"scope": 690,
									"src": "5873:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "6693:328:1",
										"statements": [
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "6703:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 343,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 347,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 345,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "6719:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:1"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "6741:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"id": 351,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6778:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "6785:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 350,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "6768:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "6811:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 357,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "6831:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:1"
											},
											{
												"id": 370,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 363,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "6931:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 364,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6938:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 365,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "6947:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 366,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "6966:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 362,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "6922:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 369,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 342,
												"id": 372,
												"nodeType": "Return",
												"src": "7003:11:1"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6621:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6638:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6687:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:1"
									},
									"scope": 690,
									"src": "6594:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "7592:543:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 385,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "7610:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7626:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7618:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 386,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7618:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7618:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7610:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7630:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7602:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7602:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "7602:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "7688:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7702:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7694:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7694:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7694:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7688:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7706:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7680:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7680:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "7680:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "7776:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7782:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7786:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "7755:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7755:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "7755:38:1"
											},
											{
												"assignments": [
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 411,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7812:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "7804:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"baseExpression": {
														"id": 412,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "7826:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 414,
													"indexExpression": {
														"id": 413,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "7836:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7826:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7804:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 417,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "7859:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 418,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "7874:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7859:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7882:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7851:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7851:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "7851:72:1"
											},
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "7933:73:1",
												"statements": [
													{
														"expression": {
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 423,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "7957:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 425,
																"indexExpression": {
																	"id": 424,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "7967:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7957:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 426,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "7975:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 427,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "7989:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7975:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7957:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "7957:38:1"
													}
												]
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 432,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "8015:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 434,
														"indexExpression": {
															"id": 433,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "8025:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8015:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 435,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "8032:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8015:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "8015:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 439,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "8063:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "8069:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "8073:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "8054:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8054:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "EmitStatement",
												"src": "8049:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 445,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "8111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 446,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "8117:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "8121:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 444,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "8091:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8091:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "8091:37:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "7027:452:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7493:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7520:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7512:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7512:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7542:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7534:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7534:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7562:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7554:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7554:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7502:72:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7592:0:1"
									},
									"scope": 690,
									"src": "7484:651:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "8476:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "8494:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8513:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8505:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8505:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8505:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8494:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8517:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8486:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8486:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "8486:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8591:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8583:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8583:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8583:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 474,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8595:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8604:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8562:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8562:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "8562:49:1"
											},
											{
												"expression": {
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 478,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "8622:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 479,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "8638:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8622:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "8622:22:1"
											},
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 482,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "8654:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 484,
														"indexExpression": {
															"id": 483,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8664:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8654:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 485,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "8676:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8654:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "8654:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8714:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8706:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8706:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8706:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8718:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8727:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 488,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "8697:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8697:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "EmitStatement",
												"src": "8692:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8773:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8765:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8765:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8765:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8777:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8786:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "8745:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8745:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "8745:48:1"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "8141:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8420:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8434:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "8426:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8451:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "8443:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8425:33:1"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8476:0:1"
									},
									"scope": 690,
									"src": "8411:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "9185:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "9203:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9222:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9214:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 517,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9214:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9214:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9203:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9226:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9195:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9195:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "9195:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9294:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9311:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9303:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9303:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9303:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9315:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "9273:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9273:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "9273:49:1"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9341:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 578,
														"src": "9333:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9333:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"baseExpression": {
														"id": 536,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "9358:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 538,
													"indexExpression": {
														"id": 537,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "9368:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9358:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9333:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 541,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "9394:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 542,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "9412:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9394:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9420:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9386:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9386:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "9386:71:1"
											},
											{
												"id": 555,
												"nodeType": "UncheckedBlock",
												"src": "9467:79:1",
												"statements": [
													{
														"expression": {
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 547,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "9491:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"id": 548,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "9501:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9491:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 550,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "9512:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 551,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "9529:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9512:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9491:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 554,
														"nodeType": "ExpressionStatement",
														"src": "9491:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 556,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9555:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 557,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "9571:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9555:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "9555:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9602:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9619:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9611:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 562,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9611:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9611:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9623:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "9593:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9593:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "EmitStatement",
												"src": "9588:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9661:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9678:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9670:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9670:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9670:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9682:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "9641:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "9641:48:1"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "8806:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9129:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9143:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "9135:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9135:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9160:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "9152:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9134:33:1"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9185:0:1"
									},
									"scope": 690,
									"src": "9120:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "10232:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 590,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "10250:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10267:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10259:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 591,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10259:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10259:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10250:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10271:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10242:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10242:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "10242:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "10328:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10347:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10339:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 601,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10339:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10339:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10328:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10351:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10320:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10320:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "10320:68:1"
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 609,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "10399:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 612,
															"indexExpression": {
																"id": 610,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "10411:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10399:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 613,
														"indexExpression": {
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "10418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10399:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "10429:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10399:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "10399:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 618,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "10459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "10466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10475:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "10450:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10450:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "EmitStatement",
												"src": "10445:37:1"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "9702:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10128:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10154:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10146:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10146:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10177:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10169:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10202:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10194:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10136:78:1"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10232:0:1"
									},
									"scope": 690,
									"src": "10119:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "10890:321:1",
										"statements": [
											{
												"assignments": [
													635
												],
												"declarations": [
													{
														"constant": false,
														"id": 635,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10908:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "10900:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 634,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 640,
												"initialValue": {
													"arguments": [
														{
															"id": 637,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "10937:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "10944:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 636,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "10927:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10927:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10900:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 641,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "10966:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10991:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 643,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10991:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 642,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10986:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10986:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10986:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10966:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 665,
												"nodeType": "IfStatement",
												"src": "10962:243:1",
												"trueBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "11005:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 649,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "11027:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 650,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "11047:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11027:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11055:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 648,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11019:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11019:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 654,
															"nodeType": "ExpressionStatement",
															"src": "11019:68:1"
														},
														{
															"id": 663,
															"nodeType": "UncheckedBlock",
															"src": "11101:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 656,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "11138:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 657,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 629,
																				"src": "11145:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 658,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 635,
																					"src": "11154:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 659,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 631,
																					"src": "11173:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11154:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 655,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 624,
																			"src": "11129:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11129:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 662,
																	"nodeType": "ExpressionStatement",
																	"src": "11129:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "10495:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10779:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10812:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10804:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10835:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10827:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10860:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10852:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10852:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10794:78:1"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10890:0:1"
									},
									"scope": 690,
									"src": "10770:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "11914:2:1",
										"statements": []
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "11217:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11804:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11842:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "11834:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11834:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11864:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "11856:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11856:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11884:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "11876:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11824:72:1"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11914:0:1"
									},
									"scope": 690,
									"src": "11795:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "12622:2:1",
										"statements": []
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "11922:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12513:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12550:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "12542:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12572:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "12564:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12564:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12592:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "12584:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12584:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12532:72:1"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12622:0:1"
									},
									"scope": 690,
									"src": "12504:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 691,
							"src": "1403:11223:1",
							"usedErrors": []
						}
					],
					"src": "105:12522:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.6.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.6.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							768
						]
					},
					"id": 769,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 768,
							"linearizedBaseContracts": [
								768
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 702,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 711,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 768,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 768,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 768,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 768,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 768,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 768,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 769,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.6.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.6.0/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							768
						],
						"IERC20Metadata": [
							793
						]
					},
					"id": 794,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 770,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.6.0/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 771,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 794,
							"sourceUnit": 769,
							"src": "135:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 773,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 768,
										"src": "305:6:3"
									},
									"id": 774,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 772,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 793,
							"linearizedBaseContracts": [
								793,
								768
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 793,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 783,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 793,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 789,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 793,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 794,
							"src": "277:405:3",
							"usedErrors": []
						}
					],
					"src": "110:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.6.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.6.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							815
						]
					},
					"id": 816,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 795,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 796,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 815,
							"linearizedBaseContracts": [
								815
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 801,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 800,
												"id": 803,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 815,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 810,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 809,
												"id": 812,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 815,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 816,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1127
						]
					},
					"id": 1128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 817,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 818,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 848,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															831
														],
														"declarations": [
															{
																"constant": false,
																"id": 831,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 830,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 835,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 832,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 833,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 837,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 829,
															"id": 842,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 845,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 846,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 829,
														"id": 847,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 1127,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 876,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 863,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 869,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 861,
															"id": 868,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 871,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 872,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 874,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 861,
														"id": 875,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 1127,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 918,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 890,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 897,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 895,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 889,
															"id": 896,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															899
														],
														"declarations": [
															{
																"constant": false,
																"id": 899,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 918,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 898,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 903,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 905,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 907,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 913,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 889,
															"id": 912,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 915,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 916,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 889,
														"id": 917,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 1127,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 946,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 932,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 939,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 937,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 931,
															"id": 938,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 941,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 942,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 944,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 931,
														"id": 945,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 1127,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 974,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 960,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 967,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 965,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 959,
															"id": 966,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 969,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 970,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 972,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 959,
														"id": 973,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 1127,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 987,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 985,
												"id": 989,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 1127,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1001,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1002,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1004,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 1127,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1017,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1019,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 1127,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1031,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1032,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1034,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 1127,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1046,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1047,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1045,
												"id": 1049,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 1127,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "5084:106:5",
										"statements": [
											{
												"id": 1074,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1064,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "5126:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1065,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "5131:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1067,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "5134:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1063,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1069,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1070,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "5168:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1071,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "5172:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1062,
														"id": 1073,
														"nodeType": "Return",
														"src": "5161:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "4981:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5000:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5019:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1057,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:5"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5075:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:5"
									},
									"scope": 1127,
									"src": "4959:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "5799:105:5",
										"statements": [
											{
												"id": 1099,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1089,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "5841:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1092,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "5848:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1088,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1094,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1095,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "5882:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1096,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "5886:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1087,
														"id": 1098,
														"nodeType": "Return",
														"src": "5875:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5696:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5715:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5734:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1082,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:5"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5790:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:5"
									},
									"scope": 1127,
									"src": "5674:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "6675:105:5",
										"statements": [
											{
												"id": 1124,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1114,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "6717:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1117,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "6724:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1113,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1119,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1120,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "6758:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1121,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "6762:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1112,
														"id": 1123,
														"nodeType": "Return",
														"src": "6751:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6572:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6591:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:5"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6666:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:5"
									},
									"scope": 1127,
									"src": "6550:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1128,
							"src": "482:6300:5",
							"usedErrors": []
						}
					],
					"src": "107:6676:5"
				},
				"id": 5
			},
			"contracts/Arcade.sol": {
				"ast": {
					"absolutePath": "contracts/Arcade.sol",
					"exportedSymbols": {
						"Arcade": [
							1808
						],
						"Context": [
							815
						],
						"ERC20": [
							690
						],
						"IERC20": [
							768
						],
						"IERC20Metadata": [
							793
						],
						"Ownable": [
							104
						],
						"SafeMath": [
							1127
						]
					},
					"id": 1809,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1129,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:32:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts@4.6.0/token/ERC20/ERC20.sol",
							"id": 1130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1809,
							"sourceUnit": 691,
							"src": "71:61:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.6.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.6.0/access/Ownable.sol",
							"id": 1131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1809,
							"sourceUnit": 105,
							"src": "133:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts@4.6.0/utils/math/SafeMath.sol",
							"id": 1132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1809,
							"sourceUnit": 1128,
							"src": "192:63:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1133,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "276:7:6"
									},
									"id": 1134,
									"nodeType": "InheritanceSpecifier",
									"src": "276:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1808,
							"linearizedBaseContracts": [
								1808,
								104,
								815
							],
							"name": "Arcade",
							"nameLocation": "266:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1137,
									"libraryName": {
										"id": 1135,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "296:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "290:27:6",
									"typeName": {
										"id": 1136,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "309:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"id": 1141,
									"name": "CloseGame",
									"nameLocation": "333:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "351:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "343:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:12:6"
									},
									"src": "327:28:6"
								},
								{
									"anonymous": false,
									"id": 1145,
									"name": "CreateGame",
									"nameLocation": "366:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "385:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "377:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "377:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:12:6"
									},
									"src": "360:29:6"
								},
								{
									"anonymous": false,
									"id": 1149,
									"name": "DeleteGame",
									"nameLocation": "400:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "419:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "411:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:12:6"
									},
									"src": "394:29:6"
								},
								{
									"anonymous": false,
									"id": 1153,
									"name": "Fee",
									"nameLocation": "434:3:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "446:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "438:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:13:6"
									},
									"src": "428:23:6"
								},
								{
									"anonymous": false,
									"id": 1157,
									"name": "OpenGame",
									"nameLocation": "462:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "479:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "471:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:12:6"
									},
									"src": "456:27:6"
								},
								{
									"anonymous": false,
									"id": 1161,
									"name": "Payout",
									"nameLocation": "494:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"indexed": false,
												"mutability": "mutable",
												"name": "payout",
												"nameLocation": "509:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "501:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:16:6"
									},
									"src": "488:29:6"
								},
								{
									"anonymous": false,
									"id": 1167,
									"name": "PlacePlayer",
									"nameLocation": "528:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"indexed": false,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "548:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "540:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "564:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "556:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:28:6"
									},
									"src": "522:46:6"
								},
								{
									"anonymous": false,
									"id": 1175,
									"name": "Refund",
									"nameLocation": "579:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "586:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"indexed": false,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "606:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "598:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "622:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "614:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:44:6"
									},
									"src": "573:57:6"
								},
								{
									"anonymous": false,
									"id": 1181,
									"name": "Register",
									"nameLocation": "641:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"indexed": true,
												"mutability": "mutable",
												"name": "_player",
												"nameLocation": "666:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "650:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "683:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "675:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "649:37:6"
									},
									"src": "635:52:6"
								},
								{
									"anonymous": false,
									"id": 1185,
									"name": "RemovePlayer",
									"nameLocation": "698:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"indexed": false,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "719:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "711:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "710:16:6"
									},
									"src": "692:35:6"
								},
								{
									"canonicalName": "Arcade.GameInfo",
									"id": 1210,
									"members": [
										{
											"constant": false,
											"id": 1187,
											"mutability": "mutable",
											"name": "exchange",
											"nameLocation": "767:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1210,
											"src": "759:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "759:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1191,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "813:3:6",
											"nodeType": "VariableDeclaration",
											"scope": 1210,
											"src": "785:31:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1190,
												"keyType": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "785:27:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1195,
											"mutability": "mutable",
											"name": "paid",
											"nameLocation": "854:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 1210,
											"src": "826:32:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1194,
												"keyType": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "826:27:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1197,
											"mutability": "mutable",
											"name": "player_count",
											"nameLocation": "876:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1210,
											"src": "868:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1196,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "868:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1199,
											"mutability": "mutable",
											"name": "player_limit",
											"nameLocation": "906:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1210,
											"src": "898:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1198,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "898:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1201,
											"mutability": "mutable",
											"name": "registration_fee",
											"nameLocation": "936:16:6",
											"nodeType": "VariableDeclaration",
											"scope": 1210,
											"src": "928:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1200,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "928:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1205,
											"mutability": "mutable",
											"name": "seats",
											"nameLocation": "990:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1210,
											"src": "962:33:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1204,
												"keyType": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "962:27:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1207,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "1013:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1210,
											"src": "1005:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1206,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1005:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1209,
											"mutability": "mutable",
											"name": "total_fee",
											"nameLocation": "1037:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1210,
											"src": "1029:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1208,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1029:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GameInfo",
									"nameLocation": "740:8:6",
									"nodeType": "StructDefinition",
									"scope": 1808,
									"src": "733:320:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ccaf237f",
									"id": 1215,
									"mutability": "mutable",
									"name": "gameData",
									"nameLocation": "1095:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1808,
									"src": "1059:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
										"typeString": "mapping(uint256 => struct Arcade.GameInfo)"
									},
									"typeName": {
										"id": 1214,
										"keyType": {
											"id": 1211,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1067:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1059:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
											"typeString": "mapping(uint256 => struct Arcade.GameInfo)"
										},
										"valueType": {
											"id": 1213,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1212,
												"name": "GameInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1210,
												"src": "1078:8:6"
											},
											"referencedDeclaration": 1210,
											"src": "1078:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
												"typeString": "struct Arcade.GameInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 1218,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "1125:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1808,
									"src": "1110:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1110:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1136:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c46ed45a",
									"id": 1220,
									"mutability": "mutable",
									"name": "fee_percentage",
									"nameLocation": "1161:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1808,
									"src": "1146:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1146:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75ca7603",
									"id": 1222,
									"mutability": "mutable",
									"name": "market_maker",
									"nameLocation": "1196:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1808,
									"src": "1181:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1221,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "1229:76:6",
										"statements": [
											{
												"expression": {
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1225,
														"name": "fee_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "1239:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130653136",
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1256:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														},
														"value": "10e16"
													},
													"src": "1239:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "1239:22:6"
											},
											{
												"expression": {
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1229,
														"name": "market_maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "1271:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1230,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "1286:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1286:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1271:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "1271:27:6"
											}
										]
									},
									"id": 1235,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:6"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:0:6"
									},
									"scope": 1808,
									"src": "1215:90:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "1364:79:6",
										"statements": [
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1242,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "1374:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 1244,
															"indexExpression": {
																"id": 1243,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "1383:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1374:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1207,
														"src": "1374:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1401:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1374:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "1374:28:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1250,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "1428:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1249,
														"name": "CloseGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "1418:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1418:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "EmitStatement",
												"src": "1413:23:6"
											}
										]
									},
									"functionSelector": "2d6ef310",
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1240,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1239,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1354:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1354:9:6"
										}
									],
									"name": "closeGame",
									"nameLocation": "1320:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "1338:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1330:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1329:17:6"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1364:0:6"
									},
									"scope": 1808,
									"src": "1311:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "1566:330:6",
										"statements": [
											{
												"expression": {
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1267,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "1576:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 1269,
															"indexExpression": {
																"id": 1268,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "1585:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1576:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1207,
														"src": "1576:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1603:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1576:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "1576:28:6"
											},
											{
												"expression": {
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1274,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "1614:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 1276,
															"indexExpression": {
																"id": 1275,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "1623:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1614:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1209,
														"src": "1614:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1644:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1614:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "1614:31:6"
											},
											{
												"expression": {
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1281,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "1655:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 1283,
															"indexExpression": {
																"id": 1282,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "1664:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1655:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "registration_fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1201,
														"src": "1655:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1285,
														"name": "registration_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "1692:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1655:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "1655:53:6"
											},
											{
												"expression": {
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1288,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "1718:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 1290,
															"indexExpression": {
																"id": 1289,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "1727:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1718:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "player_count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1197,
														"src": "1718:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1751:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1718:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "1718:34:6"
											},
											{
												"expression": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1295,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "1762:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 1297,
															"indexExpression": {
																"id": 1296,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "1771:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1762:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "player_limit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1199,
														"src": "1762:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1299,
														"name": "player_limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1795:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "1762:45:6"
											},
											{
												"expression": {
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1302,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "1817:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 1304,
															"indexExpression": {
																"id": 1303,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "1826:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1817:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "exchange",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "1817:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1306,
														"name": "exchange",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "1846:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1817:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "1817:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1310,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "1881:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1309,
														"name": "CreateGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "1870:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "EmitStatement",
												"src": "1865:24:6"
											}
										]
									},
									"functionSelector": "fc3af0d6",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1265,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1264,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1556:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1556:9:6"
										}
									],
									"name": "createGame",
									"nameLocation": "1458:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "1477:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "1469:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "registration_fee",
												"nameLocation": "1494:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "1486:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "player_limit",
												"nameLocation": "1520:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "1512:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1512:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "exchange",
												"nameLocation": "1539:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "1534:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1534:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:80:6"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1566:0:6"
									},
									"scope": 1808,
									"src": "1449:447:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "1956:76:6",
										"statements": [
											{
												"expression": {
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1966:24:6",
													"subExpression": {
														"baseExpression": {
															"id": 1321,
															"name": "gameData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "1973:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
															}
														},
														"id": 1323,
														"indexExpression": {
															"id": 1322,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "1982:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1973:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
															"typeString": "struct Arcade.GameInfo storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "1966:24:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1327,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "2017:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1326,
														"name": "DeleteGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "2006:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "EmitStatement",
												"src": "2001:24:6"
											}
										]
									},
									"functionSelector": "248a55a1",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1318,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1946:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1946:9:6"
										}
									],
									"name": "deleteGame",
									"nameLocation": "1911:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "1930:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "1922:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:17:6"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1956:0:6"
									},
									"scope": 1808,
									"src": "1902:130:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "2090:78:6",
										"statements": [
											{
												"expression": {
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1338,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "2100:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 1340,
															"indexExpression": {
																"id": 1339,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "2109:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2100:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1207,
														"src": "2100:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2127:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2100:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "2100:28:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1346,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "2153:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1345,
														"name": "OpenGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "2144:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2144:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "EmitStatement",
												"src": "2139:22:6"
											}
										]
									},
									"functionSelector": "00f5544f",
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1336,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1335,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2080:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2080:9:6"
										}
									],
									"name": "openGame",
									"nameLocation": "2047:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "2064:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2056:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:17:6"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:0:6"
									},
									"scope": 1808,
									"src": "2038:130:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "2245:171:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1360,
																			"name": "gameData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1215,
																			"src": "2263:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																				"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																			}
																		},
																		"id": 1362,
																		"indexExpression": {
																			"id": 1361,
																			"name": "game_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "2272:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2263:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																			"typeString": "struct Arcade.GameInfo storage ref"
																		}
																	},
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "seats",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1205,
																	"src": "2263:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1365,
																"indexExpression": {
																	"id": 1364,
																	"name": "player",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1354,
																	"src": "2287:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2263:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2298:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2263:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479207365617465642e",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2301:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2f54f249a52c6fa87f4eb5bbd592b7d82c6a9d6cba172fd6be3cea8ec0630ff",
																"typeString": "literal_string \"Already seated.\""
															},
															"value": "Already seated."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2f54f249a52c6fa87f4eb5bbd592b7d82c6a9d6cba172fd6be3cea8ec0630ff",
																"typeString": "literal_string \"Already seated.\""
															}
														],
														"id": 1359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2255:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2255:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "2255:64:6"
											},
											{
												"expression": {
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1371,
																	"name": "gameData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "2330:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																		"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																	}
																},
																"id": 1373,
																"indexExpression": {
																	"id": 1372,
																	"name": "game_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "2339:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2330:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																	"typeString": "struct Arcade.GameInfo storage ref"
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "seats",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1205,
															"src": "2330:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1376,
														"indexExpression": {
															"id": 1375,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "2354:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2330:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2364:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2330:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "2330:35:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1381,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "2393:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1382,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "2401:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1380,
														"name": "PlacePlayer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "2381:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2381:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "EmitStatement",
												"src": "2376:33:6"
											}
										]
									},
									"functionSelector": "b9888d89",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1357,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1356,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2235:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2235:9:6"
										}
									],
									"name": "placePlayer",
									"nameLocation": "2183:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "2203:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2195:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "2220:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2212:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2212:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:33:6"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2245:0:6"
									},
									"scope": 1808,
									"src": "2174:242:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "2460:234:6",
										"statements": [
											{
												"assignments": [
													1392
												],
												"declarations": [
													{
														"constant": false,
														"id": 1392,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "2478:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "2470:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2470:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1398,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1395,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2496:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Arcade_$1808",
																	"typeString": "contract Arcade"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Arcade_$1808",
																	"typeString": "contract Arcade"
																}
															],
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2488:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1393,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2488:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2488:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2488:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2470:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1399,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "2524:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2534:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2524:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1418,
												"nodeType": "IfStatement",
												"src": "2520:168:6",
												"trueBody": {
													"id": 1417,
													"nodeType": "Block",
													"src": "2537:151:6",
													"statements": [
														{
															"assignments": [
																1403,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1403,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "2557:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1417,
																	"src": "2552:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1402,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "2552:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1411,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2601:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1404,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 32,
																				"src": "2570:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2570:7:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "2570:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1407,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1392,
																			"src": "2591:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "2570:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2570:34:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2551:53:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1413,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "2626:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726f706879204b696e67204172636164653a20556e61626c6520746f207472616e736665722e",
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2635:41:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_baab7bb41e4b9169c526c16bbcbffefe20545b9868a1d3f2c8420ac42ec1aa91",
																			"typeString": "literal_string \"Trophy King Arcade: Unable to transfer.\""
																		},
																		"value": "Trophy King Arcade: Unable to transfer."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_baab7bb41e4b9169c526c16bbcbffefe20545b9868a1d3f2c8420ac42ec1aa91",
																			"typeString": "literal_string \"Trophy King Arcade: Unable to transfer.\""
																		}
																	],
																	"id": 1412,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2618:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2618:59:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1416,
															"nodeType": "ExpressionStatement",
															"src": "2618:59:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "8f0d7e35",
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1389,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1388,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2450:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2450:9:6"
										}
									],
									"name": "reconcile",
									"nameLocation": "2431:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2440:2:6"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2460:0:6"
									},
									"scope": 1808,
									"src": "2422:272:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "2766:581:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1429,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "2780:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 1431,
															"indexExpression": {
																"id": 1430,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "2789:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2780:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "exchange",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "2780:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2810:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2780:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1507,
												"nodeType": "IfStatement",
												"src": "2776:565:6",
												"trueBody": {
													"id": 1506,
													"nodeType": "Block",
													"src": "2817:524:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1436,
																						"name": "gameData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1215,
																						"src": "2839:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																							"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																						}
																					},
																					"id": 1438,
																					"indexExpression": {
																						"id": 1437,
																						"name": "game_id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1422,
																						"src": "2848:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2839:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																						"typeString": "struct Arcade.GameInfo storage ref"
																					}
																				},
																				"id": 1439,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "paid",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1195,
																				"src": "2839:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1441,
																			"indexExpression": {
																				"id": 1440,
																				"name": "player",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1424,
																				"src": "2862:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2839:30:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2873:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2839:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f74207265676973746572656420666f7220746869732067616d652e",
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2876:31:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6e4f42479de42ade5ee09202b5530ff02d5593e9e4c42a91f7ec6b2a338b5361",
																			"typeString": "literal_string \"Not registered for this game.\""
																		},
																		"value": "Not registered for this game."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6e4f42479de42ade5ee09202b5530ff02d5593e9e4c42a91f7ec6b2a338b5361",
																			"typeString": "literal_string \"Not registered for this game.\""
																		}
																	],
																	"id": 1435,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2831:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2831:77:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1446,
															"nodeType": "ExpressionStatement",
															"src": "2831:77:6"
														},
														{
															"assignments": [
																1449
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1449,
																	"mutability": "mutable",
																	"name": "gi",
																	"nameLocation": "2940:2:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1506,
																	"src": "2923:19:6",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																		"typeString": "struct Arcade.GameInfo"
																	},
																	"typeName": {
																		"id": 1448,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1447,
																			"name": "GameInfo",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1210,
																			"src": "2923:8:6"
																		},
																		"referencedDeclaration": 1210,
																		"src": "2923:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																			"typeString": "struct Arcade.GameInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1453,
															"initialValue": {
																"baseExpression": {
																	"id": 1450,
																	"name": "gameData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "2945:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																		"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																	}
																},
																"id": 1452,
																"indexExpression": {
																	"id": 1451,
																	"name": "game_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "2954:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2945:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																	"typeString": "struct Arcade.GameInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2923:39:6"
														},
														{
															"assignments": [
																1455,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1455,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "2983:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1506,
																	"src": "2978:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1454,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "2978:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1463,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3038:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"id": 1456,
																			"name": "player",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1424,
																			"src": "2996:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "2996:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"expression": {
																				"id": 1458,
																				"name": "gi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1449,
																				"src": "3016:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																					"typeString": "struct Arcade.GameInfo storage pointer"
																				}
																			},
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "registration_fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1201,
																			"src": "3016:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "2996:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2996:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2977:64:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1465,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "3063:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726f706879204b696e67204172636164653a20556e61626c6520746f207472616e736665722e",
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3072:41:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_baab7bb41e4b9169c526c16bbcbffefe20545b9868a1d3f2c8420ac42ec1aa91",
																			"typeString": "literal_string \"Trophy King Arcade: Unable to transfer.\""
																		},
																		"value": "Trophy King Arcade: Unable to transfer."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_baab7bb41e4b9169c526c16bbcbffefe20545b9868a1d3f2c8420ac42ec1aa91",
																			"typeString": "literal_string \"Trophy King Arcade: Unable to transfer.\""
																		}
																	],
																	"id": 1464,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3055:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3055:59:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1468,
															"nodeType": "ExpressionStatement",
															"src": "3055:59:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1470,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "3141:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1471,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "3150:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1472,
																			"name": "gi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "3158:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																				"typeString": "struct Arcade.GameInfo storage pointer"
																			}
																		},
																		"id": 1473,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "registration_fee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1201,
																		"src": "3158:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1469,
																	"name": "Refund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "3134:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256)"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3134:44:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1475,
															"nodeType": "EmitStatement",
															"src": "3129:49:6"
														},
														{
															"expression": {
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1476,
																		"name": "gi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "3193:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																			"typeString": "struct Arcade.GameInfo storage pointer"
																		}
																	},
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "total_fee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1209,
																	"src": "3193:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"components": [
																		{
																			"expression": {
																				"id": 1479,
																				"name": "gi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1449,
																				"src": "3210:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																					"typeString": "struct Arcade.GameInfo storage pointer"
																				}
																			},
																			"id": 1480,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "registration_fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1201,
																			"src": "3210:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1481,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3209:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3193:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1483,
															"nodeType": "ExpressionStatement",
															"src": "3193:37:6"
														},
														{
															"expression": {
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1484,
																			"name": "gi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "3245:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																				"typeString": "struct Arcade.GameInfo storage pointer"
																			}
																		},
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "fee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1191,
																		"src": "3245:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1488,
																	"indexExpression": {
																		"id": 1486,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "3252:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3245:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3262:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3245:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1491,
															"nodeType": "ExpressionStatement",
															"src": "3245:18:6"
														},
														{
															"expression": {
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1492,
																			"name": "gi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1449,
																			"src": "3277:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																				"typeString": "struct Arcade.GameInfo storage pointer"
																			}
																		},
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "paid",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1195,
																		"src": "3277:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1496,
																	"indexExpression": {
																		"id": 1494,
																		"name": "player",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "3285:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3277:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3295:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3277:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1499,
															"nodeType": "ExpressionStatement",
															"src": "3277:19:6"
														},
														{
															"expression": {
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1500,
																		"name": "gi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1449,
																		"src": "3310:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																			"typeString": "struct Arcade.GameInfo storage pointer"
																		}
																	},
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "player_count",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1197,
																	"src": "3310:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3329:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3310:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1505,
															"nodeType": "ExpressionStatement",
															"src": "3310:20:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7ad226dc",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1427,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1426,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2756:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2756:9:6"
										}
									],
									"name": "refund",
									"nameLocation": "2709:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "2724:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "2716:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2716:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "2741:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "2733:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2733:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2715:33:6"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2766:0:6"
									},
									"scope": 1808,
									"src": "2700:647:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "3438:387:6",
										"statements": [
											{
												"assignments": [
													1520
												],
												"declarations": [
													{
														"constant": false,
														"id": 1520,
														"mutability": "mutable",
														"name": "gi",
														"nameLocation": "3465:2:6",
														"nodeType": "VariableDeclaration",
														"scope": 1573,
														"src": "3448:19:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
															"typeString": "struct Arcade.GameInfo"
														},
														"typeName": {
															"id": 1519,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1518,
																"name": "GameInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1210,
																"src": "3448:8:6"
															},
															"referencedDeclaration": 1210,
															"src": "3448:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																"typeString": "struct Arcade.GameInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1524,
												"initialValue": {
													"baseExpression": {
														"id": 1521,
														"name": "gameData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "3470:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
															"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
														}
													},
													"id": 1523,
													"indexExpression": {
														"id": 1522,
														"name": "game_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "3479:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3470:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
														"typeString": "struct Arcade.GameInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3448:39:6"
											},
											{
												"expression": {
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1525,
															"name": "gi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "3498:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																"typeString": "struct Arcade.GameInfo storage pointer"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "player_count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1197,
														"src": "3498:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3517:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3498:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1530,
												"nodeType": "ExpressionStatement",
												"src": "3498:20:6"
											},
											{
												"expression": {
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1531,
																"name": "gi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1520,
																"src": "3528:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																	"typeString": "struct Arcade.GameInfo storage pointer"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1191,
															"src": "3528:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1535,
														"indexExpression": {
															"id": 1533,
															"name": "player_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "3535:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3528:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1536,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "3553:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3528:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "3528:31:6"
											},
											{
												"expression": {
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1539,
																"name": "gi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1520,
																"src": "3569:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																	"typeString": "struct Arcade.GameInfo storage pointer"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "paid",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1195,
															"src": "3569:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1543,
														"indexExpression": {
															"id": 1541,
															"name": "player_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "3577:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3569:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3595:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3569:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "3569:27:6"
											},
											{
												"expression": {
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1547,
															"name": "gi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "3606:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage_ptr",
																"typeString": "struct Arcade.GameInfo storage pointer"
															}
														},
														"id": 1549,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total_fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1209,
														"src": "3606:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1550,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "3622:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3606:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "3606:22:6"
											},
											{
												"assignments": [
													1554,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3645:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1573,
														"src": "3640:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1553,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3640:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1561,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3693:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1555,
																"name": "market_maker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "3658:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3658:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1557,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "3684:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3658:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3658:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3639:57:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1563,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "3714:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726f706879204b696e67204172636164653a20556e61626c6520746f207472616e736665722e",
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3723:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baab7bb41e4b9169c526c16bbcbffefe20545b9868a1d3f2c8420ac42ec1aa91",
																"typeString": "literal_string \"Trophy King Arcade: Unable to transfer.\""
															},
															"value": "Trophy King Arcade: Unable to transfer."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baab7bb41e4b9169c526c16bbcbffefe20545b9868a1d3f2c8420ac42ec1aa91",
																"typeString": "literal_string \"Trophy King Arcade: Unable to transfer.\""
															}
														],
														"id": 1562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3706:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3706:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "3706:59:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1568,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3798:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3798:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1570,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "3810:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1567,
														"name": "Register",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "3789:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3789:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1572,
												"nodeType": "EmitStatement",
												"src": "3784:34:6"
											}
										]
									},
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_register",
									"nameLocation": "3362:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "3380:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3372:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3372:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "player_address",
												"nameLocation": "3397:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3389:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3389:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3421:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "3413:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3413:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3371:57:6"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3438:0:6"
									},
									"scope": 1808,
									"src": "3353:472:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "3881:560:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1580,
																			"name": "gameData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1215,
																			"src": "3899:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																				"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																			}
																		},
																		"id": 1582,
																		"indexExpression": {
																			"id": 1581,
																			"name": "game_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1576,
																			"src": "3908:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3899:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																			"typeString": "struct Arcade.GameInfo storage ref"
																		}
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "seats",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1205,
																	"src": "3899:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1586,
																"indexExpression": {
																	"expression": {
																		"id": 1584,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3923:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3923:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3899:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3938:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3899:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a65642e",
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3941:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
																"typeString": "literal_string \"Unauthorized.\""
															},
															"value": "Unauthorized."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
																"typeString": "literal_string \"Unauthorized.\""
															}
														],
														"id": 1579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3891:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "3891:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1593,
																		"name": "gameData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "3975:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																			"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																		}
																	},
																	"id": 1595,
																	"indexExpression": {
																		"id": 1594,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "3984:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3975:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																		"typeString": "struct Arcade.GameInfo storage ref"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1207,
																"src": "3975:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4003:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3975:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520636c6f7365642e",
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4006:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6ec414fa26780aca3fd333aca0f92568fb5147bc63efceed708a355fe57da61",
																"typeString": "literal_string \"Game closed.\""
															},
															"value": "Game closed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6ec414fa26780aca3fd333aca0f92568fb5147bc63efceed708a355fe57da61",
																"typeString": "literal_string \"Game closed.\""
															}
														],
														"id": 1592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3967:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3967:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "3967:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1603,
																		"name": "gameData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "4039:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																			"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																		}
																	},
																	"id": 1605,
																	"indexExpression": {
																		"id": 1604,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "4048:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4039:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																		"typeString": "struct Arcade.GameInfo storage ref"
																	}
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "player_limit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1199,
																"src": "4039:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1607,
																		"name": "gameData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "4072:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																			"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																		}
																	},
																	"id": 1609,
																	"indexExpression": {
																		"id": 1608,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "4081:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4072:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																		"typeString": "struct Arcade.GameInfo storage ref"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "player_count",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1197,
																"src": "4072:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4039:63:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d652066756c6c2e202054727920616761696e2e",
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4104:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fdc4b51a923854629413dcde0fab52daf54ffd5a62cf4f237866bb496b2b95da",
																"typeString": "literal_string \"Game full.  Try again.\""
															},
															"value": "Game full.  Try again."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fdc4b51a923854629413dcde0fab52daf54ffd5a62cf4f237866bb496b2b95da",
																"typeString": "literal_string \"Game full.  Try again.\""
															}
														],
														"id": 1602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4031:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4031:98:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "4031:98:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1616,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4147:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4147:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1618,
																				"name": "gameData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1215,
																				"src": "4161:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																					"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																				}
																			},
																			"id": 1620,
																			"indexExpression": {
																				"id": 1619,
																				"name": "game_id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1576,
																				"src": "4170:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4161:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																				"typeString": "struct Arcade.GameInfo storage ref"
																			}
																		},
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "registration_fee",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1201,
																		"src": "4161:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1622,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4160:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4147:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206d6174636820726567697374726174696f6e206665652e",
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4198:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b8c54c4a1cb756165c416ea93e5dc17cdcb333fb6faa10ebd7580ae199f180a",
																"typeString": "literal_string \"Must match registration fee.\""
															},
															"value": "Must match registration fee."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b8c54c4a1cb756165c416ea93e5dc17cdcb333fb6faa10ebd7580ae199f180a",
																"typeString": "literal_string \"Must match registration fee.\""
															}
														],
														"id": 1615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4139:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4139:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "4139:90:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1628,
																			"name": "gameData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1215,
																			"src": "4247:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																				"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																			}
																		},
																		"id": 1630,
																		"indexExpression": {
																			"id": 1629,
																			"name": "game_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1576,
																			"src": "4256:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4247:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																			"typeString": "struct Arcade.GameInfo storage ref"
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "paid",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1195,
																	"src": "4247:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1634,
																"indexExpression": {
																	"expression": {
																		"id": 1632,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4270:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4270:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4247:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4285:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4247:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920726567697374657265642e",
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4288:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_21871bb37681a7821a866c1494ec1747bd87246e318a4f2babd57d0cf64edb69",
																"typeString": "literal_string \"Already registered.\""
															},
															"value": "Already registered."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_21871bb37681a7821a866c1494ec1747bd87246e318a4f2babd57d0cf64edb69",
																"typeString": "literal_string \"Already registered.\""
															}
														],
														"id": 1627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4239:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4239:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1639,
												"nodeType": "ExpressionStatement",
												"src": "4239:71:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1641,
																		"name": "gameData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "4328:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																			"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																		}
																	},
																	"id": 1643,
																	"indexExpression": {
																		"id": 1642,
																		"name": "game_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "4337:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4328:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																		"typeString": "struct Arcade.GameInfo storage ref"
																	}
																},
																"id": 1644,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "player_limit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1199,
																"src": "4328:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4361:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4328:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206e6f7420666f756e642e",
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4364:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b96d09a6190509269e62aa9bfcbeaa17b86c3d2c2e4b19a9b95b77fcde4f78e",
																"typeString": "literal_string \"Game not found.\""
															},
															"value": "Game not found."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b96d09a6190509269e62aa9bfcbeaa17b86c3d2c2e4b19a9b95b77fcde4f78e",
																"typeString": "literal_string \"Game not found.\""
															}
														],
														"id": 1640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4320:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4320:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "4320:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1651,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "4403:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1652,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4412:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4412:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1654,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4424:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4424:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1650,
														"name": "_register",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "4393:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4393:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "4393:41:6"
											}
										]
									},
									"functionSelector": "f207564e",
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nameLocation": "3840:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "3857:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "3849:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:17:6"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3881:0:6"
									},
									"scope": 1808,
									"src": "3831:610:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1681,
										"nodeType": "Block",
										"src": "4519:88:6",
										"statements": [
											{
												"expression": {
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1668,
																	"name": "gameData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "4529:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																		"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																	}
																},
																"id": 1670,
																"indexExpression": {
																	"id": 1669,
																	"name": "game_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "4538:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4529:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																	"typeString": "struct Arcade.GameInfo storage ref"
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "seats",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1205,
															"src": "4529:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1673,
														"indexExpression": {
															"id": 1672,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "4553:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4529:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4563:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4529:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "4529:35:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1678,
															"name": "player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "4593:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1677,
														"name": "RemovePlayer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "4580:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4580:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1680,
												"nodeType": "EmitStatement",
												"src": "4575:25:6"
											}
										]
									},
									"functionSelector": "2ba67100",
									"id": 1682,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1666,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1665,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4509:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4509:9:6"
										}
									],
									"name": "removePlayer",
									"nameLocation": "4456:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "4477:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "4469:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "4494:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "4486:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4468:33:6"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4519:0:6"
									},
									"scope": 1808,
									"src": "4447:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "4682:44:6",
										"statements": [
											{
												"expression": {
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1689,
														"name": "fee_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "4692:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1690,
														"name": "percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "4709:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4692:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1692,
												"nodeType": "ExpressionStatement",
												"src": "4692:27:6"
											}
										]
									},
									"functionSelector": "2ac5016f",
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1687,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1686,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4672:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4672:9:6"
										}
									],
									"name": "setArcadeFeePercentage",
									"nameLocation": "4622:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "4653:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "4645:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4644:20:6"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4682:0:6"
									},
									"scope": 1808,
									"src": "4613:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "4791:40:6",
										"statements": [
											{
												"expression": {
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1701,
														"name": "market_maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "4801:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1702,
														"name": "incoming",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1696,
														"src": "4816:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4801:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "4801:23:6"
											}
										]
									},
									"functionSelector": "f54c42d7",
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1699,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1698,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4781:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4781:9:6"
										}
									],
									"name": "setMarketMaker",
									"nameLocation": "4741:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "incoming",
												"nameLocation": "4764:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "4756:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4755:18:6"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4791:0:6"
									},
									"scope": 1808,
									"src": "4732:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "4906:761:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1715,
																"name": "gameData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "4920:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																	"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																}
															},
															"id": 1717,
															"indexExpression": {
																"id": 1716,
																"name": "game_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "4929:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4920:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																"typeString": "struct Arcade.GameInfo storage ref"
															}
														},
														"id": 1718,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "exchange",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "4920:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "66616c7365",
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4950:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4920:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1801,
												"nodeType": "IfStatement",
												"src": "4916:716:6",
												"trueBody": {
													"id": 1800,
													"nodeType": "Block",
													"src": "4957:675:6",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1722,
																					"name": "gameData",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1215,
																					"src": "4980:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																						"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																					}
																				},
																				"id": 1724,
																				"indexExpression": {
																					"id": 1723,
																					"name": "game_id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1708,
																					"src": "4989:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4980:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																					"typeString": "struct Arcade.GameInfo storage ref"
																				}
																			},
																			"id": 1725,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "fee",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1191,
																			"src": "4980:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1727,
																		"indexExpression": {
																			"id": 1726,
																			"name": "winner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1710,
																			"src": "5002:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4980:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1721,
																	"name": "Fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "4976:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4976:34:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1729,
															"nodeType": "EmitStatement",
															"src": "4971:39:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1731,
																						"name": "gameData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1215,
																						"src": "5033:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																							"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																						}
																					},
																					"id": 1733,
																					"indexExpression": {
																						"id": 1732,
																						"name": "game_id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1708,
																						"src": "5042:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5033:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																						"typeString": "struct Arcade.GameInfo storage ref"
																					}
																				},
																				"id": 1734,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "paid",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1195,
																				"src": "5033:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1736,
																			"indexExpression": {
																				"id": 1735,
																				"name": "winner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1710,
																				"src": "5056:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5033:30:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5067:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5033:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f74207265676973746572656420666f7220746869732067616d65",
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5070:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b635aec89b8cc9c63e310e716da6a69024f021e81721065b9a6f7e208e245944",
																			"typeString": "literal_string \"Not registered for this game\""
																		},
																		"value": "Not registered for this game"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b635aec89b8cc9c63e310e716da6a69024f021e81721065b9a6f7e208e245944",
																			"typeString": "literal_string \"Not registered for this game\""
																		}
																	],
																	"id": 1730,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5025:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5025:76:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1741,
															"nodeType": "ExpressionStatement",
															"src": "5025:76:6"
														},
														{
															"assignments": [
																1743
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1743,
																	"mutability": "mutable",
																	"name": "arcade_fee",
																	"nameLocation": "5124:10:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1800,
																	"src": "5116:18:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1742,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5116:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1755,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 1744,
																							"name": "gameData",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1215,
																							"src": "5138:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																								"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																							}
																						},
																						"id": 1746,
																						"indexExpression": {
																							"id": 1745,
																							"name": "game_id",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1708,
																							"src": "5147:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5138:17:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																							"typeString": "struct Arcade.GameInfo storage ref"
																						}
																					},
																					"id": 1747,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "total_fee",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1209,
																					"src": "5138:27:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1748,
																					"name": "fee_percentage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1220,
																					"src": "5168:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5138:44:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1750,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5137:46:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5186:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "5137:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1753,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "5192:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5137:63:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5116:84:6"
														},
														{
															"assignments": [
																1757
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1757,
																	"mutability": "mutable",
																	"name": "payout",
																	"nameLocation": "5222:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1800,
																	"src": "5214:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1756,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1764,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1758,
																			"name": "gameData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1215,
																			"src": "5231:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GameInfo_$1210_storage_$",
																				"typeString": "mapping(uint256 => struct Arcade.GameInfo storage ref)"
																			}
																		},
																		"id": 1760,
																		"indexExpression": {
																			"id": 1759,
																			"name": "game_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "5240:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5231:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameInfo_$1210_storage",
																			"typeString": "struct Arcade.GameInfo storage ref"
																		}
																	},
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "total_fee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1209,
																	"src": "5231:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1762,
																	"name": "arcade_fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "5261:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5231:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5214:57:6"
														},
														{
															"assignments": [
																1766
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1766,
																	"mutability": "mutable",
																	"name": "contract_balance",
																	"nameLocation": "5293:16:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1800,
																	"src": "5285:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1765,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1772,
															"initialValue": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1769,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5320:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Arcade_$1808",
																				"typeString": "contract Arcade"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Arcade_$1808",
																				"typeString": "contract Arcade"
																			}
																		],
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5312:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1767,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5312:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5312:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5312:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5285:48:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1773,
																	"name": "contract_balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "5352:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1774,
																	"name": "payout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1757,
																	"src": "5371:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5352:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1781,
															"nodeType": "IfStatement",
															"src": "5348:89:6",
															"trueBody": {
																"id": 1780,
																"nodeType": "Block",
																"src": "5379:58:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1776,
																				"name": "payout",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1757,
																				"src": "5397:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1777,
																				"name": "contract_balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1766,
																				"src": "5406:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5397:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1779,
																		"nodeType": "ExpressionStatement",
																		"src": "5397:25:6"
																	}
																]
															}
														},
														{
															"assignments": [
																1783,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1783,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "5457:7:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1800,
																	"src": "5452:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1782,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "5452:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1790,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5499:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"id": 1784,
																			"name": "winner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1710,
																			"src": "5470:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "5470:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1786,
																			"name": "payout",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1757,
																			"src": "5490:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "5470:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5470:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5451:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1792,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1783,
																		"src": "5524:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726f706879204b696e67204172636164653a20556e61626c6520746f207472616e736665722e",
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5533:41:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_baab7bb41e4b9169c526c16bbcbffefe20545b9868a1d3f2c8420ac42ec1aa91",
																			"typeString": "literal_string \"Trophy King Arcade: Unable to transfer.\""
																		},
																		"value": "Trophy King Arcade: Unable to transfer."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_baab7bb41e4b9169c526c16bbcbffefe20545b9868a1d3f2c8420ac42ec1aa91",
																			"typeString": "literal_string \"Trophy King Arcade: Unable to transfer.\""
																		}
																	],
																	"id": 1791,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5516:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5516:59:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1795,
															"nodeType": "ExpressionStatement",
															"src": "5516:59:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1797,
																		"name": "payout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "5614:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1796,
																	"name": "Payout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "5607:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5607:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1799,
															"nodeType": "EmitStatement",
															"src": "5602:19:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1803,
															"name": "game_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "5652:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1802,
														"name": "closeGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "5642:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5642:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "5642:18:6"
											}
										]
									},
									"functionSelector": "9c623683",
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1713,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1712,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4896:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4896:9:6"
										}
									],
									"name": "setWinner",
									"nameLocation": "4846:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "game_id",
												"nameLocation": "4864:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "4856:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4856:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "winner",
												"nameLocation": "4881:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "4873:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4873:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4855:33:6"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4906:0:6"
									},
									"scope": 1808,
									"src": "4837:830:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1809,
							"src": "257:5412:6",
							"usedErrors": []
						}
					],
					"src": "37:5633:6"
				},
				"id": 6
			}
		}
	}
}